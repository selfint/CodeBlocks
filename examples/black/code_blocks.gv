digraph G {
	graph [rankdir=LR]
	subgraph "cluster_nodes.py" {
		graph [rankdir=LR]
		graph [label="nodes.py"]
		"nodes.py##container_of" [label="nodes.py##function container_of"]
		"nodes.py##is_empty_par" [label="nodes.py##function is_empty_par"]
		"nodes.py##parent_type" [label="nodes.py##function parent_type"]
		"nodes.py##first_leaf_column" [label="nodes.py##function first_leaf_column"]
		"nodes.py##is_lpar_token" [label="nodes.py##function is_lpar_token"]
		"nodes.py##is_docstring" [label="nodes.py##function is_docstring"]
		"nodes.py##is_walrus_assignment" [label="nodes.py##function is_walrus_assignment"]
		"nodes.py##is_rpar_token" [label="nodes.py##function is_rpar_token"]
		"nodes.py##preceding_leaf" [label="nodes.py##function preceding_leaf"]
		"nodes.py##is_simple_decorator_expression" [label="nodes.py##function is_simple_decorator_expression"]
		"nodes.py#Visitor#visit_default" [label="nodes.py#Visitor#function visit_default"]
		"nodes.py##is_empty_rpar" [label="nodes.py##function is_empty_rpar"]
		"nodes.py##is_one_tuple_between" [label="nodes.py##function is_one_tuple_between"]
		"nodes.py##Visitor" [label="nodes.py##class Visitor"]
		"nodes.py##is_yield" [label="nodes.py##function is_yield"]
		"nodes.py##is_arith_like" [label="nodes.py##function is_arith_like"]
		"nodes.py##whitespace" [label="nodes.py##function whitespace"]
		"nodes.py##is_simple_decorator_trailer" [label="nodes.py##function is_simple_decorator_trailer"]
		"nodes.py##is_import" [label="nodes.py##function is_import"]
		"nodes.py##is_one_tuple" [label="nodes.py##function is_one_tuple"]
		"nodes.py##ensure_visible" [label="nodes.py##function ensure_visible"]
		"nodes.py##child_towards" [label="nodes.py##function child_towards"]
		"nodes.py##is_stub_body" [label="nodes.py##function is_stub_body"]
		"nodes.py##is_type_comment" [label="nodes.py##function is_type_comment"]
		"nodes.py##is_multiline_string" [label="nodes.py##function is_multiline_string"]
		"nodes.py#Visitor#visit" [label="nodes.py#Visitor#function visit"]
		"nodes.py##is_name_token" [label="nodes.py##function is_name_token"]
		"nodes.py##replace_child" [label="nodes.py##function replace_child"]
		"nodes.py##unwrap_singleton_parenthesis" [label="nodes.py##function unwrap_singleton_parenthesis"]
		"nodes.py##prev_siblings_are" [label="nodes.py##function prev_siblings_are"]
		"nodes.py##is_stub_suite" [label="nodes.py##function is_stub_suite"]
		"nodes.py##wrap_in_parentheses" [label="nodes.py##function wrap_in_parentheses"]
		"nodes.py##is_atom_with_invisible_parens" [label="nodes.py##function is_atom_with_invisible_parens"]
		"nodes.py##is_vararg" [label="nodes.py##function is_vararg"]
		"nodes.py##is_string_token" [label="nodes.py##function is_string_token"]
		"nodes.py##is_empty_tuple" [label="nodes.py##function is_empty_tuple"]
		"nodes.py##is_empty_lpar" [label="nodes.py##function is_empty_lpar"]
		"nodes.py#Visitor#visit_default" [label="nodes.py#Visitor#visit_default"]
		"nodes.py#whitespace" [label="nodes.py#whitespace"]
		"nodes.py#is_docstring" [label="nodes.py#is_docstring"]
		"nodes.py#" [label="nodes.py#"]
		"nodes.py#is_docstring" [label="nodes.py#is_docstring"]
		"nodes.py#whitespace" [label="nodes.py#whitespace"]
		"nodes.py#is_yield" [label="nodes.py#is_yield"]
		"nodes.py#is_simple_decorator_expression" [label="nodes.py#is_simple_decorator_expression"]
		"nodes.py#whitespace" [label="nodes.py#whitespace"]
		"nodes.py#whitespace" [label="nodes.py#whitespace"]
		"nodes.py#is_multiline_string" [label="nodes.py#is_multiline_string"]
		"nodes.py#is_walrus_assignment" [label="nodes.py#is_walrus_assignment"]
		"nodes.py#whitespace" [label="nodes.py#whitespace"]
		"nodes.py#is_simple_decorator_expression" [label="nodes.py#is_simple_decorator_expression"]
		"nodes.py#is_one_tuple" [label="nodes.py#is_one_tuple"]
		"nodes.py#is_stub_suite" [label="nodes.py#is_stub_suite"]
		"nodes.py#whitespace" [label="nodes.py#whitespace"]
		"nodes.py#prev_siblings_are" [label="nodes.py#prev_siblings_are"]
		"nodes.py#Visitor#visit" [label="nodes.py#Visitor#visit"]
		"nodes.py#is_empty_par" [label="nodes.py#is_empty_par"]
		"nodes.py#is_yield" [label="nodes.py#is_yield"]
	}
	subgraph "cluster_lines.py" {
		graph [rankdir=LR]
		graph [label="lines.py"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#function _maybe_empty_lines"]
		"lines.py#Line#is_complex_subscript" [label="lines.py#Line#function is_complex_subscript"]
		"lines.py#Line#append_safe" [label="lines.py#Line#function append_safe"]
		"lines.py#Line#is_comment" [label="lines.py#Line#function is_comment"]
		"lines.py##line_to_string" [label="lines.py##function line_to_string"]
		"lines.py#Line#remove_trailing_comma" [label="lines.py#Line#function remove_trailing_comma"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#function _maybe_empty_lines_for_class_or_def"]
		"lines.py##is_line_short_enough" [label="lines.py##function is_line_short_enough"]
		"lines.py#Line#is_class" [label="lines.py#Line#function is_class"]
		"lines.py#Line#clone" [label="lines.py#Line#function clone"]
		"lines.py#Line#comments_after" [label="lines.py#Line#function comments_after"]
		"lines.py#Line#is_import" [label="lines.py#Line#function is_import"]
		"lines.py#Line#append_comment" [label="lines.py#Line#function append_comment"]
		"lines.py#Line#is_triple_quoted_string" [label="lines.py#Line#function is_triple_quoted_string"]
		"lines.py##append_leaves" [label="lines.py##function append_leaves"]
		"lines.py#Line#__bool__" [label="lines.py#Line#function __bool__"]
		"lines.py##EmptyLineTracker" [label="lines.py##class EmptyLineTracker"]
		"lines.py#Line#enumerate_with_length" [label="lines.py#Line#function enumerate_with_length"]
		"lines.py#Line#contains_multiline_strings" [label="lines.py#Line#function contains_multiline_strings"]
		"lines.py#Line#contains_uncollapsable_type_comments" [label="lines.py#Line#function contains_uncollapsable_type_comments"]
		"lines.py#Line#is_def" [label="lines.py#Line#function is_def"]
		"lines.py##enumerate_reversed" [label="lines.py##function enumerate_reversed"]
		"lines.py#Line#__str__" [label="lines.py#Line#function __str__"]
		"lines.py#Line#contains_standalone_comments" [label="lines.py#Line#function contains_standalone_comments"]
		"lines.py#Line#is_stub_class" [label="lines.py#Line#function is_stub_class"]
		"lines.py#EmptyLineTracker#maybe_empty_lines" [label="lines.py#EmptyLineTracker#function maybe_empty_lines"]
		"lines.py#Line#has_magic_trailing_comma" [label="lines.py#Line#function has_magic_trailing_comma"]
		"lines.py##can_omit_invisible_parens" [label="lines.py##function can_omit_invisible_parens"]
		"lines.py##_can_omit_closing_paren" [label="lines.py##function _can_omit_closing_paren"]
		"lines.py##can_be_split" [label="lines.py##function can_be_split"]
		"lines.py##_can_omit_opening_paren" [label="lines.py##function _can_omit_opening_paren"]
		"lines.py##Line" [label="lines.py##class Line"]
		"lines.py#Line#is_decorator" [label="lines.py#Line#function is_decorator"]
		"lines.py#Line#is_class_paren_empty" [label="lines.py#Line#function is_class_paren_empty"]
		"lines.py#Line#contains_unsplittable_type_ignore" [label="lines.py#Line#function contains_unsplittable_type_ignore"]
		"lines.py#Line#append" [label="lines.py#Line#function append"]
		"lines.py#" [label="lines.py#"]
		"lines.py#Line#has_magic_trailing_comma" [label="lines.py#Line#has_magic_trailing_comma"]
		"lines.py#Line#has_magic_trailing_comma" [label="lines.py#Line#has_magic_trailing_comma"]
		"lines.py#" [label="lines.py#"]
		"lines.py#Line" [label="lines.py#Line"]
		"lines.py#is_line_short_enough" [label="lines.py#is_line_short_enough"]
		"lines.py#" [label="lines.py#"]
		"lines.py#Line#is_import" [label="lines.py#Line#is_import"]
		"lines.py#" [label="lines.py#"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
		"lines.py#Line#clone" [label="lines.py#Line#clone"]
		"lines.py#can_omit_invisible_parens" [label="lines.py#can_omit_invisible_parens"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
		"lines.py#Line#enumerate_with_length" [label="lines.py#Line#enumerate_with_length"]
		"lines.py#" [label="lines.py#"]
		"lines.py#append_leaves" [label="lines.py#append_leaves"]
		"lines.py#append_leaves" [label="lines.py#append_leaves"]
		"lines.py#Line#append_safe" [label="lines.py#Line#append_safe"]
		"lines.py#Line#is_complex_subscript" [label="lines.py#Line#is_complex_subscript"]
		"lines.py#can_omit_invisible_parens" [label="lines.py#can_omit_invisible_parens"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
		"lines.py#_can_omit_closing_paren" [label="lines.py#_can_omit_closing_paren"]
		"lines.py#Line#is_stub_class" [label="lines.py#Line#is_stub_class"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
		"lines.py#append_leaves" [label="lines.py#append_leaves"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#Line" [label="lines.py#Line"]
		"lines.py#" [label="lines.py#"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#" [label="lines.py#"]
		"lines.py#" [label="lines.py#"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
		"lines.py#append_leaves" [label="lines.py#append_leaves"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#Line#append_comment" [label="lines.py#Line#append_comment"]
		"lines.py#can_omit_invisible_parens" [label="lines.py#can_omit_invisible_parens"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#Line#contains_multiline_strings" [label="lines.py#Line#contains_multiline_strings"]
		"lines.py#EmptyLineTracker#maybe_empty_lines" [label="lines.py#EmptyLineTracker#maybe_empty_lines"]
		"lines.py#" [label="lines.py#"]
		"lines.py#Line" [label="lines.py#Line"]
		"lines.py#EmptyLineTracker" [label="lines.py#EmptyLineTracker"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#_can_omit_opening_paren" [label="lines.py#_can_omit_opening_paren"]
		"lines.py#append_leaves" [label="lines.py#append_leaves"]
		"lines.py#Line#enumerate_with_length" [label="lines.py#Line#enumerate_with_length"]
		"lines.py#Line#append_comment" [label="lines.py#Line#append_comment"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
		"lines.py#can_omit_invisible_parens" [label="lines.py#can_omit_invisible_parens"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#can_omit_invisible_parens" [label="lines.py#can_omit_invisible_parens"]
		"lines.py#" [label="lines.py#"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#Line#contains_unsplittable_type_ignore" [label="lines.py#Line#contains_unsplittable_type_ignore"]
		"lines.py#EmptyLineTracker" [label="lines.py#EmptyLineTracker"]
		"lines.py#Line#is_class_paren_empty" [label="lines.py#Line#is_class_paren_empty"]
		"lines.py#EmptyLineTracker" [label="lines.py#EmptyLineTracker"]
		"lines.py#Line#append_safe" [label="lines.py#Line#append_safe"]
		"lines.py#is_line_short_enough" [label="lines.py#is_line_short_enough"]
		"lines.py#Line#is_complex_subscript" [label="lines.py#Line#is_complex_subscript"]
		"lines.py#can_omit_invisible_parens" [label="lines.py#can_omit_invisible_parens"]
		"lines.py#Line#contains_uncollapsable_type_comments" [label="lines.py#Line#contains_uncollapsable_type_comments"]
		"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
		"lines.py#Line#contains_uncollapsable_type_comments" [label="lines.py#Line#contains_uncollapsable_type_comments"]
		"lines.py#Line#append" [label="lines.py#Line#append"]
	}
	subgraph "cluster_trans.py" {
		graph [rankdir=LR]
		graph [label="trans.py"]
		"trans.py##CustomSplit" [label="trans.py##class CustomSplit"]
		"trans.py#StringParenWrapper#_return_match" [label="trans.py#StringParenWrapper#function _return_match"]
		"trans.py#StringMerger#do_match" [label="trans.py#StringMerger#function do_match"]
		"trans.py#BaseStringSplitter#do_match" [label="trans.py#BaseStringSplitter#function do_match"]
		"trans.py##is_valid_index_factory" [label="trans.py##function is_valid_index_factory"]
		"trans.py#is_valid_index_factory#is_valid_index" [label="trans.py#is_valid_index_factory#function is_valid_index"]
		"trans.py##fstring_contains_expr" [label="trans.py##function fstring_contains_expr"]
		"trans.py#StringTransformer#do_transform" [label="trans.py#StringTransformer#function do_transform"]
		"trans.py#StringMerger#_merge_string_group#make_naked" [label="trans.py#StringMerger#_merge_string_group#function make_naked"]
		"trans.py#hug_power_op#is_simple_operand" [label="trans.py#hug_power_op#function is_simple_operand"]
		"trans.py##StringMerger" [label="trans.py##class StringMerger"]
		"trans.py##iter_fexpr_spans" [label="trans.py##function iter_fexpr_spans"]
		"trans.py#StringSplitter#_maybe_normalize_string_quotes" [label="trans.py#StringSplitter#function _maybe_normalize_string_quotes"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#function __call__"]
		"trans.py#StringParenWrapper#_dict_match" [label="trans.py#StringParenWrapper#function _dict_match"]
		"trans.py#CustomSplitMapMixin#pop_custom_splits" [label="trans.py#CustomSplitMapMixin#function pop_custom_splits"]
		"trans.py#BaseStringSplitter#do_splitter_match" [label="trans.py#BaseStringSplitter#function do_splitter_match"]
		"trans.py##CustomSplitMapMixin" [label="trans.py##class CustomSplitMapMixin"]
		"trans.py#StringSplitter#do_transform#more_splits_should_be_made" [label="trans.py#StringSplitter#do_transform#function more_splits_should_be_made"]
		"trans.py##TErr" [label="trans.py##function TErr"]
		"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#function _assign_match"]
		"trans.py#StringParser#_next_state" [label="trans.py#StringParser#function _next_state"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#function _validate_msg"]
		"trans.py#StringSplitter#do_transform#maybe_append_string_operators" [label="trans.py#StringSplitter#do_transform#function maybe_append_string_operators"]
		"trans.py#StringTransformer#do_match" [label="trans.py#StringTransformer#function do_match"]
		"trans.py##insert_str_child_factory" [label="trans.py##function insert_str_child_factory"]
		"trans.py#StringSplitter#_get_string_operator_leaves" [label="trans.py#StringSplitter#function _get_string_operator_leaves"]
		"trans.py##BaseStringSplitter" [label="trans.py##class BaseStringSplitter"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#function _merge_string_group"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#function do_transform"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#function _validate"]
		"trans.py##CannotTransform" [label="trans.py##class CannotTransform"]
		"trans.py##hug_power_op" [label="trans.py##function hug_power_op"]
		"trans.py#StringSplitter#_iter_nameescape_slices" [label="trans.py#StringSplitter#function _iter_nameescape_slices"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#function do_transform"]
		"trans.py#StringParser#__init__" [label="trans.py#StringParser#function __init__"]
		"trans.py#BaseStringSplitter#_get_max_string_length" [label="trans.py#BaseStringSplitter#function _get_max_string_length"]
		"trans.py#CustomSplitMapMixin#has_custom_splits" [label="trans.py#CustomSplitMapMixin#function has_custom_splits"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#function do_splitter_match"]
		"trans.py##StringParenStripper" [label="trans.py##class StringParenStripper"]
		"trans.py#StringSplitter#_get_break_idx#breaks_unsplittable_expression" [label="trans.py#StringSplitter#_get_break_idx#function breaks_unsplittable_expression"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#function do_transform"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#function do_transform"]
		"trans.py#StringSplitter#_normalize_f_string" [label="trans.py#StringSplitter#function _normalize_f_string"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#function _remove_backslash_line_continuation_chars"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#function do_splitter_match"]
		"trans.py#CustomSplitMapMixin#_get_key" [label="trans.py#CustomSplitMapMixin#function _get_key"]
		"trans.py#StringTransformer#__init__" [label="trans.py#StringTransformer#function __init__"]
		"trans.py#StringParenWrapper#_else_match" [label="trans.py#StringParenWrapper#function _else_match"]
		"trans.py#hug_power_op#is_simple_lookup" [label="trans.py#hug_power_op#function is_simple_lookup"]
		"trans.py##StringTransformer" [label="trans.py##class StringTransformer"]
		"trans.py#StringParser#parse" [label="trans.py#StringParser#function parse"]
		"trans.py##StringSplitter" [label="trans.py##class StringSplitter"]
		"trans.py#insert_str_child_factory#insert_str_child" [label="trans.py#insert_str_child_factory#function insert_str_child"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#function _get_break_idx"]
		"trans.py#StringSplitter#_iter_fexpr_slices" [label="trans.py#StringSplitter#function _iter_fexpr_slices"]
		"trans.py#StringSplitter#_get_break_idx#passes_all_checks" [label="trans.py#StringSplitter#_get_break_idx#function passes_all_checks"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#function do_match"]
		"trans.py##StringParser" [label="trans.py##class StringParser"]
		"trans.py##StringParenWrapper" [label="trans.py##class StringParenWrapper"]
		"trans.py#StringParenWrapper#_assert_match" [label="trans.py#StringParenWrapper#function _assert_match"]
		"trans.py#StringSplitter#do_transform#max_last_string" [label="trans.py#StringSplitter#do_transform#function max_last_string"]
		"trans.py#CustomSplitMapMixin#add_custom_splits" [label="trans.py#CustomSplitMapMixin#function add_custom_splits"]
		"trans.py#StringSplitter#_get_illegal_split_indices" [label="trans.py#StringSplitter#function _get_illegal_split_indices"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#_assign_match"]
		"trans.py#BaseStringSplitter#do_match" [label="trans.py#BaseStringSplitter#do_match"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenWrapper" [label="trans.py#StringParenWrapper"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#BaseStringSplitter#do_match" [label="trans.py#BaseStringSplitter#do_match"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
		"trans.py#CustomSplitMapMixin#add_custom_splits" [label="trans.py#CustomSplitMapMixin#add_custom_splits"]
		"trans.py#BaseStringSplitter#_get_max_string_length" [label="trans.py#BaseStringSplitter#_get_max_string_length"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringParenWrapper#_else_match" [label="trans.py#StringParenWrapper#_else_match"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringParenWrapper#_else_match" [label="trans.py#StringParenWrapper#_else_match"]
		"trans.py#CustomSplitMapMixin#has_custom_splits" [label="trans.py#CustomSplitMapMixin#has_custom_splits"]
		"trans.py#StringParenWrapper#_return_match" [label="trans.py#StringParenWrapper#_return_match"]
		"trans.py#StringParenWrapper#_assert_match" [label="trans.py#StringParenWrapper#_assert_match"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
		"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#_assign_match"]
		"trans.py#StringSplitter" [label="trans.py#StringSplitter"]
		"trans.py#TErr" [label="trans.py#TErr"]
		"trans.py#BaseStringSplitter#do_match" [label="trans.py#BaseStringSplitter#do_match"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#BaseStringSplitter" [label="trans.py#BaseStringSplitter"]
		"trans.py#StringParenWrapper#_return_match" [label="trans.py#StringParenWrapper#_return_match"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#CustomSplitMapMixin#add_custom_splits" [label="trans.py#CustomSplitMapMixin#add_custom_splits"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#CustomSplitMapMixin" [label="trans.py#CustomSplitMapMixin"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringTransformer" [label="trans.py#StringTransformer"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#_assign_match"]
		"trans.py#StringTransformer" [label="trans.py#StringTransformer"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringParenWrapper#_assert_match" [label="trans.py#StringParenWrapper#_assert_match"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringSplitter#_maybe_normalize_string_quotes" [label="trans.py#StringSplitter#_maybe_normalize_string_quotes"]
		"trans.py#StringParenWrapper#_dict_match" [label="trans.py#StringParenWrapper#_dict_match"]
		"trans.py#TErr" [label="trans.py#TErr"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
		"trans.py#insert_str_child_factory" [label="trans.py#insert_str_child_factory"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringParenStripper" [label="trans.py#StringParenStripper"]
		"trans.py#hug_power_op" [label="trans.py#hug_power_op"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#StringSplitter#_get_break_idx#passes_all_checks" [label="trans.py#StringSplitter#_get_break_idx#passes_all_checks"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#_assign_match"]
		"trans.py#StringSplitter#do_transform#maybe_append_string_operators" [label="trans.py#StringSplitter#do_transform#maybe_append_string_operators"]
		"trans.py#BaseStringSplitter" [label="trans.py#BaseStringSplitter"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#is_valid_index_factory" [label="trans.py#is_valid_index_factory"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
		"trans.py#StringParser#_next_state" [label="trans.py#StringParser#_next_state"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#CustomSplitMapMixin" [label="trans.py#CustomSplitMapMixin"]
		"trans.py#StringMerger" [label="trans.py#StringMerger"]
		"trans.py#hug_power_op" [label="trans.py#hug_power_op"]
		"trans.py#StringParenWrapper#_dict_match" [label="trans.py#StringParenWrapper#_dict_match"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringParenWrapper#_assert_match" [label="trans.py#StringParenWrapper#_assert_match"]
		"trans.py#StringSplitter#_normalize_f_string" [label="trans.py#StringSplitter#_normalize_f_string"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
		"trans.py#hug_power_op" [label="trans.py#hug_power_op"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
		"trans.py#StringParenWrapper#_dict_match" [label="trans.py#StringParenWrapper#_dict_match"]
		"trans.py#StringMerger#do_match" [label="trans.py#StringMerger#do_match"]
		"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringParenWrapper#_dict_match" [label="trans.py#StringParenWrapper#_dict_match"]
		"trans.py#StringSplitter#_get_illegal_split_indices" [label="trans.py#StringSplitter#_get_illegal_split_indices"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringMerger#_merge_string_group#make_naked" [label="trans.py#StringMerger#_merge_string_group#make_naked"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#_assign_match"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#_assign_match"]
		"trans.py#fstring_contains_expr" [label="trans.py#fstring_contains_expr"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#do_transform#maybe_append_string_operators" [label="trans.py#StringSplitter#do_transform#maybe_append_string_operators"]
		"trans.py#StringParenWrapper#_else_match" [label="trans.py#StringParenWrapper#_else_match"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringParenWrapper#_dict_match" [label="trans.py#StringParenWrapper#_dict_match"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#BaseStringSplitter#do_match" [label="trans.py#BaseStringSplitter#do_match"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#BaseStringSplitter#do_match" [label="trans.py#BaseStringSplitter#do_match"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#StringParenStripper" [label="trans.py#StringParenStripper"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringParser#parse" [label="trans.py#StringParser#parse"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringParenWrapper#_assert_match" [label="trans.py#StringParenWrapper#_assert_match"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#BaseStringSplitter" [label="trans.py#BaseStringSplitter"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringSplitter#_get_illegal_split_indices" [label="trans.py#StringSplitter#_get_illegal_split_indices"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter#_normalize_f_string" [label="trans.py#StringSplitter#_normalize_f_string"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#BaseStringSplitter" [label="trans.py#BaseStringSplitter"]
		"trans.py#StringParenWrapper#_return_match" [label="trans.py#StringParenWrapper#_return_match"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
		"trans.py#" [label="trans.py#"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringSplitter" [label="trans.py#StringSplitter"]
		"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringTransformer" [label="trans.py#StringTransformer"]
		"trans.py#hug_power_op" [label="trans.py#hug_power_op"]
		"trans.py#StringSplitter#_iter_fexpr_slices" [label="trans.py#StringSplitter#_iter_fexpr_slices"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#CustomSplitMapMixin" [label="trans.py#CustomSplitMapMixin"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
		"trans.py#StringParenWrapper" [label="trans.py#StringParenWrapper"]
		"trans.py#StringMerger#do_match" [label="trans.py#StringMerger#do_match"]
		"trans.py#CustomSplitMapMixin#pop_custom_splits" [label="trans.py#CustomSplitMapMixin#pop_custom_splits"]
		"trans.py#StringMerger#do_match" [label="trans.py#StringMerger#do_match"]
		"trans.py#hug_power_op#is_simple_operand" [label="trans.py#hug_power_op#is_simple_operand"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringMerger" [label="trans.py#StringMerger"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#BaseStringSplitter#_get_max_string_length" [label="trans.py#BaseStringSplitter#_get_max_string_length"]
		"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
		"trans.py#StringSplitter#_iter_fexpr_slices" [label="trans.py#StringSplitter#_iter_fexpr_slices"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#" [label="trans.py#"]
		"trans.py#StringMerger#do_match" [label="trans.py#StringMerger#do_match"]
		"trans.py#StringSplitter#do_transform#more_splits_should_be_made" [label="trans.py#StringSplitter#do_transform#more_splits_should_be_made"]
		"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringMerger" [label="trans.py#StringMerger"]
		"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
		"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#hug_power_op#is_simple_operand" [label="trans.py#hug_power_op#is_simple_operand"]
		"trans.py#StringMerger" [label="trans.py#StringMerger"]
		"trans.py#StringParenWrapper#_assert_match" [label="trans.py#StringParenWrapper#_assert_match"]
		"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
		"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
		"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
		"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
		"trans.py#" [label="trans.py#"]
	}
	subgraph "cluster_output.py" {
		graph [rankdir=LR]
		graph [label="output.py"]
		"output.py##out" [label="output.py##function out"]
		"output.py##_err" [label="output.py##function _err"]
		"output.py##diff" [label="output.py##function diff"]
		"output.py##dump_to_file" [label="output.py##function dump_to_file"]
		"output.py##err" [label="output.py##function err"]
		"output.py##ipynb_diff" [label="output.py##function ipynb_diff"]
		"output.py##_out" [label="output.py##function _out"]
		"output.py##color_diff" [label="output.py##function color_diff"]
		"output.py#ipynb_diff" [label="output.py#ipynb_diff"]
		"output.py#out" [label="output.py#out"]
		"output.py#err" [label="output.py#err"]
	}
	subgraph "cluster_parsing.py" {
		graph [rankdir=LR]
		graph [label="parsing.py"]
		"parsing.py##stringify_ast" [label="parsing.py##function stringify_ast"]
		"parsing.py##get_grammars" [label="parsing.py##function get_grammars"]
		"parsing.py##fixup_ast_constants" [label="parsing.py##function fixup_ast_constants"]
		"parsing.py##_normalize" [label="parsing.py##function _normalize"]
		"parsing.py##lib2to3_parse" [label="parsing.py##function lib2to3_parse"]
		"parsing.py##parse_single_version" [label="parsing.py##function parse_single_version"]
		"parsing.py##lib2to3_unparse" [label="parsing.py##function lib2to3_unparse"]
		"parsing.py##parse_ast" [label="parsing.py##function parse_ast"]
		"parsing.py##InvalidInput" [label="parsing.py##class InvalidInput"]
		"parsing.py##matches_grammar" [label="parsing.py##function matches_grammar"]
		"parsing.py#" [label="parsing.py#"]
		"parsing.py#get_grammars" [label="parsing.py#get_grammars"]
		"parsing.py#stringify_ast" [label="parsing.py#stringify_ast"]
		"parsing.py#stringify_ast" [label="parsing.py#stringify_ast"]
		"parsing.py#get_grammars" [label="parsing.py#get_grammars"]
		"parsing.py#parse_ast" [label="parsing.py#parse_ast"]
		"parsing.py#stringify_ast" [label="parsing.py#stringify_ast"]
		"parsing.py#stringify_ast" [label="parsing.py#stringify_ast"]
		"parsing.py#get_grammars" [label="parsing.py#get_grammars"]
		"parsing.py#lib2to3_parse" [label="parsing.py#lib2to3_parse"]
		"parsing.py#lib2to3_parse" [label="parsing.py#lib2to3_parse"]
		"parsing.py#" [label="parsing.py#"]
		"parsing.py#lib2to3_parse" [label="parsing.py#lib2to3_parse"]
		"parsing.py#stringify_ast" [label="parsing.py#stringify_ast"]
		"parsing.py#get_grammars" [label="parsing.py#get_grammars"]
		"parsing.py#get_grammars" [label="parsing.py#get_grammars"]
		"parsing.py#lib2to3_parse" [label="parsing.py#lib2to3_parse"]
		"parsing.py#lib2to3_parse" [label="parsing.py#lib2to3_parse"]
		"parsing.py#" [label="parsing.py#"]
	}
	subgraph "cluster_linegen.py" {
		graph [rankdir=LR]
		graph [label="linegen.py"]
		"linegen.py##delimiter_split" [label="linegen.py##function delimiter_split"]
		"linegen.py##LineGenerator" [label="linegen.py##class LineGenerator"]
		"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#function visit_STRING"]
		"linegen.py#LineGenerator#visit_ENDMARKER" [label="linegen.py#LineGenerator#function visit_ENDMARKER"]
		"linegen.py#LineGenerator#line" [label="linegen.py#LineGenerator#function line"]
		"linegen.py##right_hand_split" [label="linegen.py##function right_hand_split"]
		"linegen.py#LineGenerator#visit_async_stmt" [label="linegen.py#LineGenerator#function visit_async_stmt"]
		"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#function _rhs"]
		"linegen.py##should_split_line" [label="linegen.py##function should_split_line"]
		"linegen.py##bracket_split_succeeded_or_raise" [label="linegen.py##function bracket_split_succeeded_or_raise"]
		"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#function __post_init__"]
		"linegen.py##left_hand_split" [label="linegen.py##function left_hand_split"]
		"linegen.py#LineGenerator#visit_INDENT" [label="linegen.py#LineGenerator#function visit_INDENT"]
		"linegen.py#LineGenerator#visit_factor" [label="linegen.py#LineGenerator#function visit_factor"]
		"linegen.py##transform_line" [label="linegen.py##function transform_line"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#function visit_default"]
		"linegen.py#LineGenerator#visit_power" [label="linegen.py#LineGenerator#function visit_power"]
		"linegen.py#standalone_comment_split#append_to_line" [label="linegen.py#standalone_comment_split#function append_to_line"]
		"linegen.py##CannotSplit" [label="linegen.py##class CannotSplit"]
		"linegen.py#LineGenerator#visit_stmt" [label="linegen.py#LineGenerator#function visit_stmt"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#function visit_simple_stmt"]
		"linegen.py##run_transformer" [label="linegen.py##function run_transformer"]
		"linegen.py##normalize_invisible_parens" [label="linegen.py##function normalize_invisible_parens"]
		"linegen.py##dont_increase_indentation" [label="linegen.py##function dont_increase_indentation"]
		"linegen.py##maybe_make_parens_invisible_in_atom" [label="linegen.py##function maybe_make_parens_invisible_in_atom"]
		"linegen.py#LineGenerator#visit_DEDENT" [label="linegen.py#LineGenerator#function visit_DEDENT"]
		"linegen.py#delimiter_split#append_to_line" [label="linegen.py#delimiter_split#function append_to_line"]
		"linegen.py##standalone_comment_split" [label="linegen.py##function standalone_comment_split"]
		"linegen.py##generate_trailers_to_omit" [label="linegen.py##function generate_trailers_to_omit"]
		"linegen.py#dont_increase_indentation#split_wrapper" [label="linegen.py#dont_increase_indentation#function split_wrapper"]
		"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" [label="linegen.py#LineGenerator#function visit_STANDALONE_COMMENT"]
		"linegen.py#LineGenerator#visit_SEMI" [label="linegen.py#LineGenerator#function visit_SEMI"]
		"linegen.py#LineGenerator#visit_suite" [label="linegen.py#LineGenerator#function visit_suite"]
		"linegen.py##normalize_prefix" [label="linegen.py##function normalize_prefix"]
		"linegen.py#LineGenerator#__init__" [label="linegen.py#LineGenerator#function __init__"]
		"linegen.py#LineGenerator#visit_decorators" [label="linegen.py#LineGenerator#function visit_decorators"]
		"linegen.py##bracket_split_build_line" [label="linegen.py##function bracket_split_build_line"]
		"linegen.py#LineGenerator#visit_match_case" [label="linegen.py#LineGenerator#function visit_match_case"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#visit_STRING"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#bracket_split_succeeded_or_raise" [label="linegen.py#bracket_split_succeeded_or_raise"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#__post_init__"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_ENDMARKER" [label="linegen.py#LineGenerator#visit_ENDMARKER"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#_rhs"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#LineGenerator#visit_stmt" [label="linegen.py#LineGenerator#visit_stmt"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#left_hand_split" [label="linegen.py#left_hand_split"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#LineGenerator#visit_power" [label="linegen.py#LineGenerator#visit_power"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#LineGenerator#__init__" [label="linegen.py#LineGenerator#__init__"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#LineGenerator#visit_suite" [label="linegen.py#LineGenerator#visit_suite"]
		"linegen.py#LineGenerator#visit_DEDENT" [label="linegen.py#LineGenerator#visit_DEDENT"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#__post_init__"]
		"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#visit_STRING"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#LineGenerator#visit_stmt" [label="linegen.py#LineGenerator#visit_stmt"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#LineGenerator#visit_ENDMARKER" [label="linegen.py#LineGenerator#visit_ENDMARKER"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#LineGenerator#visit_INDENT" [label="linegen.py#LineGenerator#visit_INDENT"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#LineGenerator#visit_DEDENT" [label="linegen.py#LineGenerator#visit_DEDENT"]
		"linegen.py#dont_increase_indentation" [label="linegen.py#dont_increase_indentation"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#LineGenerator#visit_SEMI" [label="linegen.py#LineGenerator#visit_SEMI"]
		"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#_rhs"]
		"linegen.py#LineGenerator#visit_DEDENT" [label="linegen.py#LineGenerator#visit_DEDENT"]
		"linegen.py#LineGenerator#visit_INDENT" [label="linegen.py#LineGenerator#visit_INDENT"]
		"linegen.py#LineGenerator#visit_decorators" [label="linegen.py#LineGenerator#visit_decorators"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#LineGenerator#visit_match_case" [label="linegen.py#LineGenerator#visit_match_case"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#delimiter_split#append_to_line" [label="linegen.py#delimiter_split#append_to_line"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#LineGenerator#visit_async_stmt" [label="linegen.py#LineGenerator#visit_async_stmt"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#generate_trailers_to_omit" [label="linegen.py#generate_trailers_to_omit"]
		"linegen.py#generate_trailers_to_omit" [label="linegen.py#generate_trailers_to_omit"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#LineGenerator#visit_power" [label="linegen.py#LineGenerator#visit_power"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#left_hand_split" [label="linegen.py#left_hand_split"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#LineGenerator#visit_stmt" [label="linegen.py#LineGenerator#visit_stmt"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#standalone_comment_split#append_to_line" [label="linegen.py#standalone_comment_split#append_to_line"]
		"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#visit_STRING"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#LineGenerator#visit_factor" [label="linegen.py#LineGenerator#visit_factor"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#visit_STRING"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#__post_init__"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#__post_init__"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" [label="linegen.py#LineGenerator#visit_STANDALONE_COMMENT"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#_rhs"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" [label="linegen.py#LineGenerator#visit_STANDALONE_COMMENT"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#LineGenerator#line" [label="linegen.py#LineGenerator#line"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#_rhs"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#generate_trailers_to_omit" [label="linegen.py#generate_trailers_to_omit"]
		"linegen.py#LineGenerator#visit_suite" [label="linegen.py#LineGenerator#visit_suite"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#_rhs"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#LineGenerator#visit_async_stmt" [label="linegen.py#LineGenerator#visit_async_stmt"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#visit_match_case" [label="linegen.py#LineGenerator#visit_match_case"]
		"linegen.py#left_hand_split" [label="linegen.py#left_hand_split"]
		"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" [label="linegen.py#LineGenerator#visit_STANDALONE_COMMENT"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#visit_suite" [label="linegen.py#LineGenerator#visit_suite"]
		"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#__post_init__"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#delimiter_split#append_to_line" [label="linegen.py#delimiter_split#append_to_line"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_match_case" [label="linegen.py#LineGenerator#visit_match_case"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#left_hand_split" [label="linegen.py#left_hand_split"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#__post_init__"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#visit_STRING"]
		"linegen.py#LineGenerator#visit_decorators" [label="linegen.py#LineGenerator#visit_decorators"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_stmt" [label="linegen.py#LineGenerator#visit_stmt"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#_rhs"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#standalone_comment_split#append_to_line" [label="linegen.py#standalone_comment_split#append_to_line"]
		"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
		"linegen.py#should_split_line" [label="linegen.py#should_split_line"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#dont_increase_indentation#split_wrapper" [label="linegen.py#dont_increase_indentation#split_wrapper"]
		"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
		"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#bracket_split_succeeded_or_raise" [label="linegen.py#bracket_split_succeeded_or_raise"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#visit_STRING"]
		"linegen.py#dont_increase_indentation" [label="linegen.py#dont_increase_indentation"]
		"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#LineGenerator#visit_async_stmt" [label="linegen.py#LineGenerator#visit_async_stmt"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
		"linegen.py#transform_line" [label="linegen.py#transform_line"]
		"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
		"linegen.py#LineGenerator#visit_stmt" [label="linegen.py#LineGenerator#visit_stmt"]
		"linegen.py#left_hand_split" [label="linegen.py#left_hand_split"]
		"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
		"linegen.py#LineGenerator#__init__" [label="linegen.py#LineGenerator#__init__"]
		"linegen.py#" [label="linegen.py#"]
		"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
	}
	subgraph "cluster_strings.py" {
		graph [rankdir=LR]
		graph [label="strings.py"]
		"strings.py##get_string_prefix" [label="strings.py##function get_string_prefix"]
		"strings.py##lines_with_leading_tabs_expanded" [label="strings.py##function lines_with_leading_tabs_expanded"]
		"strings.py##normalize_string_quotes" [label="strings.py##function normalize_string_quotes"]
		"strings.py##fix_docstring" [label="strings.py##function fix_docstring"]
		"strings.py##normalize_string_prefix" [label="strings.py##function normalize_string_prefix"]
		"strings.py##sub_twice" [label="strings.py##function sub_twice"]
		"strings.py##_cached_compile" [label="strings.py##function _cached_compile"]
		"strings.py##has_triple_quotes" [label="strings.py##function has_triple_quotes"]
		"strings.py##assert_is_leaf_string" [label="strings.py##function assert_is_leaf_string"]
		"strings.py#normalize_string_quotes" [label="strings.py#normalize_string_quotes"]
		"strings.py#normalize_string_quotes" [label="strings.py#normalize_string_quotes"]
		"strings.py#normalize_string_quotes" [label="strings.py#normalize_string_quotes"]
		"strings.py#normalize_string_quotes" [label="strings.py#normalize_string_quotes"]
		"strings.py#fix_docstring" [label="strings.py#fix_docstring"]
		"strings.py#get_string_prefix" [label="strings.py#get_string_prefix"]
		"strings.py#normalize_string_quotes" [label="strings.py#normalize_string_quotes"]
		"strings.py#normalize_string_quotes" [label="strings.py#normalize_string_quotes"]
	}
	subgraph "cluster_mode.py" {
		graph [rankdir=LR]
		graph [label="mode.py"]
		"mode.py##Preview" [label="mode.py##class Preview"]
		"mode.py##Deprecated" [label="mode.py##class Deprecated"]
		"mode.py##Mode" [label="mode.py##class Mode"]
		"mode.py#Mode#__contains__" [label="mode.py#Mode#function __contains__"]
		"mode.py##supports_feature" [label="mode.py##function supports_feature"]
		"mode.py#Mode#__post_init__" [label="mode.py#Mode#function __post_init__"]
		"mode.py#Mode#get_cache_key" [label="mode.py#Mode#function get_cache_key"]
		"mode.py##TargetVersion" [label="mode.py##class TargetVersion"]
		"mode.py##Feature" [label="mode.py##class Feature"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#Mode#__post_init__" [label="mode.py#Mode#__post_init__"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#Mode#__contains__" [label="mode.py#Mode#__contains__"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#Mode" [label="mode.py#Mode"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
		"mode.py#Mode" [label="mode.py#Mode"]
		"mode.py#" [label="mode.py#"]
		"mode.py#" [label="mode.py#"]
	}
	subgraph "cluster_brackets.py" {
		graph [rankdir=LR]
		graph [label="brackets.py"]
		"brackets.py#BracketTracker#maybe_decrement_after_lambda_arguments" [label="brackets.py#BracketTracker#function maybe_decrement_after_lambda_arguments"]
		"brackets.py##BracketTracker" [label="brackets.py##class BracketTracker"]
		"brackets.py#BracketTracker#any_open_brackets" [label="brackets.py#BracketTracker#function any_open_brackets"]
		"brackets.py##is_split_before_delimiter" [label="brackets.py##function is_split_before_delimiter"]
		"brackets.py##BracketMatchError" [label="brackets.py##class BracketMatchError"]
		"brackets.py#BracketTracker#maybe_decrement_after_for_loop_variable" [label="brackets.py#BracketTracker#function maybe_decrement_after_for_loop_variable"]
		"brackets.py#BracketTracker#delimiter_count_with_priority" [label="brackets.py#BracketTracker#function delimiter_count_with_priority"]
		"brackets.py#BracketTracker#max_delimiter_priority" [label="brackets.py#BracketTracker#function max_delimiter_priority"]
		"brackets.py#BracketTracker#get_open_lsqb" [label="brackets.py#BracketTracker#function get_open_lsqb"]
		"brackets.py##max_delimiter_priority_in_atom" [label="brackets.py##function max_delimiter_priority_in_atom"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#function mark"]
		"brackets.py#BracketTracker#maybe_increment_for_loop_variable" [label="brackets.py#BracketTracker#function maybe_increment_for_loop_variable"]
		"brackets.py#BracketTracker#maybe_increment_lambda_arguments" [label="brackets.py#BracketTracker#function maybe_increment_lambda_arguments"]
		"brackets.py##is_split_after_delimiter" [label="brackets.py##function is_split_after_delimiter"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
		"brackets.py#max_delimiter_priority_in_atom" [label="brackets.py#max_delimiter_priority_in_atom"]
		"brackets.py#is_split_before_delimiter" [label="brackets.py#is_split_before_delimiter"]
		"brackets.py#max_delimiter_priority_in_atom" [label="brackets.py#max_delimiter_priority_in_atom"]
		"brackets.py#" [label="brackets.py#"]
		"brackets.py#max_delimiter_priority_in_atom" [label="brackets.py#max_delimiter_priority_in_atom"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
		"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
		"brackets.py#BracketTracker#delimiter_count_with_priority" [label="brackets.py#BracketTracker#delimiter_count_with_priority"]
		"brackets.py#max_delimiter_priority_in_atom" [label="brackets.py#max_delimiter_priority_in_atom"]
	}
	subgraph "cluster_numerics.py" {
		graph [rankdir=LR]
		graph [label="numerics.py"]
		"numerics.py##format_complex_number" [label="numerics.py##function format_complex_number"]
		"numerics.py##normalize_numeric_literal" [label="numerics.py##function normalize_numeric_literal"]
		"numerics.py##format_float_or_int_string" [label="numerics.py##function format_float_or_int_string"]
		"numerics.py##format_scientific_notation" [label="numerics.py##function format_scientific_notation"]
		"numerics.py##format_hex" [label="numerics.py##function format_hex"]
		"numerics.py#normalize_numeric_literal" [label="numerics.py#normalize_numeric_literal"]
		"numerics.py#normalize_numeric_literal" [label="numerics.py#normalize_numeric_literal"]
		"numerics.py#format_scientific_notation" [label="numerics.py#format_scientific_notation"]
		"numerics.py#normalize_numeric_literal" [label="numerics.py#normalize_numeric_literal"]
		"numerics.py#format_complex_number" [label="numerics.py#format_complex_number"]
		"numerics.py#normalize_numeric_literal" [label="numerics.py#normalize_numeric_literal"]
	}
	subgraph "cluster_comments.py" {
		graph [rankdir=LR]
		graph [label="comments.py"]
		"comments.py##generate_ignored_nodes" [label="comments.py##function generate_ignored_nodes"]
		"comments.py##normalize_fmt_off" [label="comments.py##function normalize_fmt_off"]
		"comments.py##is_fmt_on" [label="comments.py##function is_fmt_on"]
		"comments.py##generate_comments" [label="comments.py##function generate_comments"]
		"comments.py##list_comments" [label="comments.py##function list_comments"]
		"comments.py##make_comment" [label="comments.py##function make_comment"]
		"comments.py##contains_pragma_comment" [label="comments.py##function contains_pragma_comment"]
		"comments.py##convert_one_fmt_off_pair" [label="comments.py##function convert_one_fmt_off_pair"]
		"comments.py##contains_fmt_on_at_column" [label="comments.py##function contains_fmt_on_at_column"]
		"comments.py##ProtoComment" [label="comments.py##class ProtoComment"]
		"comments.py#generate_ignored_nodes" [label="comments.py#generate_ignored_nodes"]
		"comments.py#" [label="comments.py#"]
		"comments.py#" [label="comments.py#"]
		"comments.py#" [label="comments.py#"]
		"comments.py#list_comments" [label="comments.py#list_comments"]
		"comments.py#normalize_fmt_off" [label="comments.py#normalize_fmt_off"]
		"comments.py#generate_ignored_nodes" [label="comments.py#generate_ignored_nodes"]
		"comments.py#convert_one_fmt_off_pair" [label="comments.py#convert_one_fmt_off_pair"]
		"comments.py#generate_comments" [label="comments.py#generate_comments"]
		"comments.py#is_fmt_on" [label="comments.py#is_fmt_on"]
		"comments.py#convert_one_fmt_off_pair" [label="comments.py#convert_one_fmt_off_pair"]
		"comments.py#generate_ignored_nodes" [label="comments.py#generate_ignored_nodes"]
		"comments.py#list_comments" [label="comments.py#list_comments"]
		"comments.py#contains_fmt_on_at_column" [label="comments.py#contains_fmt_on_at_column"]
		"comments.py#convert_one_fmt_off_pair" [label="comments.py#convert_one_fmt_off_pair"]
		"comments.py#list_comments" [label="comments.py#list_comments"]
		"comments.py#contains_fmt_on_at_column" [label="comments.py#contains_fmt_on_at_column"]
		"comments.py#generate_ignored_nodes" [label="comments.py#generate_ignored_nodes"]
	}
	subgraph "cluster_cache.py" {
		graph [rankdir=LR]
		graph [label="cache.py"]
		"cache.py##write_cache" [label="cache.py##function write_cache"]
		"cache.py##filter_cached" [label="cache.py##function filter_cached"]
		"cache.py##get_cache_info" [label="cache.py##function get_cache_info"]
		"cache.py##get_cache_file" [label="cache.py##function get_cache_file"]
		"cache.py##read_cache" [label="cache.py##function read_cache"]
		"cache.py##get_cache_dir" [label="cache.py##function get_cache_dir"]
		"cache.py#" [label="cache.py#"]
		"cache.py#" [label="cache.py#"]
		"cache.py#write_cache" [label="cache.py#write_cache"]
		"cache.py#" [label="cache.py#"]
		"cache.py#" [label="cache.py#"]
		"cache.py#filter_cached" [label="cache.py#filter_cached"]
		"cache.py#get_cache_file" [label="cache.py#get_cache_file"]
		"cache.py#write_cache" [label="cache.py#write_cache"]
		"cache.py#" [label="cache.py#"]
		"cache.py#read_cache" [label="cache.py#read_cache"]
	}
	subgraph "cluster___init__.py" {
		graph [rankdir=LR]
		graph [label="__init__.py"]
		"__init__.py##validate_regex" [label="__init__.py##function validate_regex"]
		"__init__.py##read_pyproject_toml" [label="__init__.py##function read_pyproject_toml"]
		"__init__.py##decode_bytes" [label="__init__.py##function decode_bytes"]
		"__init__.py#WriteBack#from_configuration" [label="__init__.py#WriteBack#function from_configuration"]
		"__init__.py#get_future_imports#get_imports_from_children" [label="__init__.py#get_future_imports#function get_imports_from_children"]
		"__init__.py##target_version_option_callback" [label="__init__.py##function target_version_option_callback"]
		"__init__.py##get_future_imports" [label="__init__.py##function get_future_imports"]
		"__init__.py##patch_click" [label="__init__.py##function patch_click"]
		"__init__.py##path_empty" [label="__init__.py##function path_empty"]
		"__init__.py##assert_stable" [label="__init__.py##function assert_stable"]
		"__init__.py##format_file_in_place" [label="__init__.py##function format_file_in_place"]
		"__init__.py##format_stdin_to_stdout" [label="__init__.py##function format_stdin_to_stdout"]
		"__init__.py##detect_target_versions" [label="__init__.py##function detect_target_versions"]
		"__init__.py##WriteBack" [label="__init__.py##class WriteBack"]
		"__init__.py##format_ipynb_string" [label="__init__.py##function format_ipynb_string"]
		"__init__.py##reformat_code" [label="__init__.py##function reformat_code"]
		"__init__.py##nullcontext" [label="__init__.py##function nullcontext"]
		"__init__.py##main" [label="__init__.py##function main"]
		"__init__.py##validate_metadata" [label="__init__.py##function validate_metadata"]
		"__init__.py##patched_main" [label="__init__.py##function patched_main"]
		"__init__.py##_format_str_once" [label="__init__.py##function _format_str_once"]
		"__init__.py##reformat_many" [label="__init__.py##function reformat_many"]
		"__init__.py##format_file_contents" [label="__init__.py##function format_file_contents"]
		"__init__.py##reformat_one" [label="__init__.py##function reformat_one"]
		"__init__.py##format_cell" [label="__init__.py##function format_cell"]
		"__init__.py##check_stability_and_equivalence" [label="__init__.py##function check_stability_and_equivalence"]
		"__init__.py##assert_equivalent" [label="__init__.py##function assert_equivalent"]
		"__init__.py##re_compile_maybe_verbose" [label="__init__.py##function re_compile_maybe_verbose"]
		"__init__.py##validate_cell" [label="__init__.py##function validate_cell"]
		"__init__.py##get_features_used" [label="__init__.py##function get_features_used"]
		"__init__.py##get_sources" [label="__init__.py##function get_sources"]
		"__init__.py##format_str" [label="__init__.py##function format_str"]
		"__init__.py#validate_cell" [label="__init__.py#validate_cell"]
		"__init__.py#reformat_code" [label="__init__.py#reformat_code"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#detect_target_versions" [label="__init__.py#detect_target_versions"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#format_file_contents" [label="__init__.py#format_file_contents"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#format_ipynb_string" [label="__init__.py#format_ipynb_string"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#path_empty" [label="__init__.py#path_empty"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#assert_equivalent" [label="__init__.py#assert_equivalent"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#format_ipynb_string" [label="__init__.py#format_ipynb_string"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_ipynb_string" [label="__init__.py#format_ipynb_string"]
		"__init__.py#patched_main" [label="__init__.py#patched_main"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#validate_metadata" [label="__init__.py#validate_metadata"]
		"__init__.py#detect_target_versions" [label="__init__.py#detect_target_versions"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#WriteBack#from_configuration" [label="__init__.py#WriteBack#from_configuration"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_code" [label="__init__.py#reformat_code"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#reformat_many" [label="__init__.py#reformat_many"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#assert_equivalent" [label="__init__.py#assert_equivalent"]
		"__init__.py#assert_equivalent" [label="__init__.py#assert_equivalent"]
		"__init__.py#reformat_code" [label="__init__.py#reformat_code"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#check_stability_and_equivalence" [label="__init__.py#check_stability_and_equivalence"]
		"__init__.py#detect_target_versions" [label="__init__.py#detect_target_versions"]
		"__init__.py#patched_main" [label="__init__.py#patched_main"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_many" [label="__init__.py#reformat_many"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#reformat_many" [label="__init__.py#reformat_many"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#patched_main" [label="__init__.py#patched_main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#check_stability_and_equivalence" [label="__init__.py#check_stability_and_equivalence"]
		"__init__.py#format_file_contents" [label="__init__.py#format_file_contents"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#format_file_contents" [label="__init__.py#format_file_contents"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#assert_stable" [label="__init__.py#assert_stable"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_code" [label="__init__.py#reformat_code"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#format_str" [label="__init__.py#format_str"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#assert_stable" [label="__init__.py#assert_stable"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_code" [label="__init__.py#reformat_code"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#format_str" [label="__init__.py#format_str"]
		"__init__.py#get_future_imports" [label="__init__.py#get_future_imports"]
		"__init__.py#validate_cell" [label="__init__.py#validate_cell"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#assert_equivalent" [label="__init__.py#assert_equivalent"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#assert_stable" [label="__init__.py#assert_stable"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#target_version_option_callback" [label="__init__.py#target_version_option_callback"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_many" [label="__init__.py#reformat_many"]
		"__init__.py#assert_equivalent" [label="__init__.py#assert_equivalent"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#check_stability_and_equivalence" [label="__init__.py#check_stability_and_equivalence"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#get_future_imports#get_imports_from_children" [label="__init__.py#get_future_imports#get_imports_from_children"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#format_ipynb_string" [label="__init__.py#format_ipynb_string"]
		"__init__.py#read_pyproject_toml" [label="__init__.py#read_pyproject_toml"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#format_cell" [label="__init__.py#format_cell"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#assert_stable" [label="__init__.py#assert_stable"]
		"__init__.py#target_version_option_callback" [label="__init__.py#target_version_option_callback"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#validate_regex" [label="__init__.py#validate_regex"]
		"__init__.py#get_sources" [label="__init__.py#get_sources"]
		"__init__.py#assert_equivalent" [label="__init__.py#assert_equivalent"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
		"__init__.py#format_file_contents" [label="__init__.py#format_file_contents"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#reformat_code" [label="__init__.py#reformat_code"]
		"__init__.py#format_file_contents" [label="__init__.py#format_file_contents"]
		"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#" [label="__init__.py#"]
		"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
		"__init__.py#main" [label="__init__.py#main"]
		"__init__.py#read_pyproject_toml" [label="__init__.py#read_pyproject_toml"]
	}
	subgraph "cluster_rusty.py" {
		graph [rankdir=LR]
		graph [label="rusty.py"]
		"rusty.py#Err#err" [label="rusty.py#Err#function err"]
		"rusty.py##Err" [label="rusty.py##class Err"]
		"rusty.py#Ok#ok" [label="rusty.py#Ok#function ok"]
		"rusty.py##Ok" [label="rusty.py##class Ok"]
		"rusty.py#Err#__init__" [label="rusty.py#Err#function __init__"]
		"rusty.py#Ok#__init__" [label="rusty.py#Ok#function __init__"]
		"rusty.py#" [label="rusty.py#"]
	}
	subgraph "cluster_files.py" {
		graph [rankdir=LR]
		graph [label="files.py"]
		"files.py##path_is_excluded" [label="files.py##function path_is_excluded"]
		"files.py##get_gitignore" [label="files.py##function get_gitignore"]
		"files.py##wrap_stream_for_windows" [label="files.py##function wrap_stream_for_windows"]
		"files.py##gen_python_files" [label="files.py##function gen_python_files"]
		"files.py##find_project_root" [label="files.py##function find_project_root"]
		"files.py##find_user_pyproject_toml" [label="files.py##function find_user_pyproject_toml"]
		"files.py##normalize_path_maybe_ignore" [label="files.py##function normalize_path_maybe_ignore"]
		"files.py##find_pyproject_toml" [label="files.py##function find_pyproject_toml"]
		"files.py##parse_pyproject_toml" [label="files.py##function parse_pyproject_toml"]
		"files.py#find_pyproject_toml" [label="files.py#find_pyproject_toml"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#normalize_path_maybe_ignore" [label="files.py#normalize_path_maybe_ignore"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#find_pyproject_toml" [label="files.py#find_pyproject_toml"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#" [label="files.py#"]
		"files.py#get_gitignore" [label="files.py#get_gitignore"]
		"files.py#normalize_path_maybe_ignore" [label="files.py#normalize_path_maybe_ignore"]
		"files.py#normalize_path_maybe_ignore" [label="files.py#normalize_path_maybe_ignore"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#find_pyproject_toml" [label="files.py#find_pyproject_toml"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#" [label="files.py#"]
		"files.py#" [label="files.py#"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
		"files.py#gen_python_files" [label="files.py#gen_python_files"]
	}
	subgraph "cluster_handle_ipynb_magics.py" {
		graph [rankdir=LR]
		graph [label="handle_ipynb_magics.py"]
		"handle_ipynb_magics.py##OffsetAndMagic" [label="handle_ipynb_magics.py##class OffsetAndMagic"]
		"handle_ipynb_magics.py##put_trailing_semicolon_back" [label="handle_ipynb_magics.py##function put_trailing_semicolon_back"]
		"handle_ipynb_magics.py##CellMagicFinder" [label="handle_ipynb_magics.py##class CellMagicFinder"]
		"handle_ipynb_magics.py#MagicFinder#visit_Expr" [label="handle_ipynb_magics.py#MagicFinder#function visit_Expr"]
		"handle_ipynb_magics.py##remove_trailing_semicolon" [label="handle_ipynb_magics.py##function remove_trailing_semicolon"]
		"handle_ipynb_magics.py#MagicFinder#visit_Assign" [label="handle_ipynb_magics.py#MagicFinder#function visit_Assign"]
		"handle_ipynb_magics.py##replace_cell_magics" [label="handle_ipynb_magics.py##function replace_cell_magics"]
		"handle_ipynb_magics.py##get_token" [label="handle_ipynb_magics.py##function get_token"]
		"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" [label="handle_ipynb_magics.py#CellMagicFinder#function visit_Expr"]
		"handle_ipynb_magics.py##replace_magics" [label="handle_ipynb_magics.py##function replace_magics"]
		"handle_ipynb_magics.py#MagicFinder#__init__" [label="handle_ipynb_magics.py#MagicFinder#function __init__"]
		"handle_ipynb_magics.py#CellMagicFinder#__init__" [label="handle_ipynb_magics.py#CellMagicFinder#function __init__"]
		"handle_ipynb_magics.py##mask_cell" [label="handle_ipynb_magics.py##function mask_cell"]
		"handle_ipynb_magics.py#CellMagic#header" [label="handle_ipynb_magics.py#CellMagic#function header"]
		"handle_ipynb_magics.py##unmask_cell" [label="handle_ipynb_magics.py##function unmask_cell"]
		"handle_ipynb_magics.py##CellMagic" [label="handle_ipynb_magics.py##class CellMagic"]
		"handle_ipynb_magics.py##_is_ipython_magic" [label="handle_ipynb_magics.py##function _is_ipython_magic"]
		"handle_ipynb_magics.py##jupyter_dependencies_are_installed" [label="handle_ipynb_magics.py##function jupyter_dependencies_are_installed"]
		"handle_ipynb_magics.py##MagicFinder" [label="handle_ipynb_magics.py##class MagicFinder"]
		"handle_ipynb_magics.py##Replacement" [label="handle_ipynb_magics.py##class Replacement"]
		"handle_ipynb_magics.py##_get_str_args" [label="handle_ipynb_magics.py##function _get_str_args"]
		"handle_ipynb_magics.py#MagicFinder#visit_Expr" [label="handle_ipynb_magics.py#MagicFinder#visit_Expr"]
		"handle_ipynb_magics.py#" [label="handle_ipynb_magics.py#"]
		"handle_ipynb_magics.py#replace_cell_magics" [label="handle_ipynb_magics.py#replace_cell_magics"]
		"handle_ipynb_magics.py#mask_cell" [label="handle_ipynb_magics.py#mask_cell"]
		"handle_ipynb_magics.py#MagicFinder#visit_Expr" [label="handle_ipynb_magics.py#MagicFinder#visit_Expr"]
		"handle_ipynb_magics.py#CellMagicFinder" [label="handle_ipynb_magics.py#CellMagicFinder"]
		"handle_ipynb_magics.py#MagicFinder#__init__" [label="handle_ipynb_magics.py#MagicFinder#__init__"]
		"handle_ipynb_magics.py#replace_cell_magics" [label="handle_ipynb_magics.py#replace_cell_magics"]
		"handle_ipynb_magics.py#replace_cell_magics" [label="handle_ipynb_magics.py#replace_cell_magics"]
		"handle_ipynb_magics.py#" [label="handle_ipynb_magics.py#"]
		"handle_ipynb_magics.py#MagicFinder#visit_Assign" [label="handle_ipynb_magics.py#MagicFinder#visit_Assign"]
		"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" [label="handle_ipynb_magics.py#CellMagicFinder#visit_Expr"]
		"handle_ipynb_magics.py#mask_cell" [label="handle_ipynb_magics.py#mask_cell"]
		"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" [label="handle_ipynb_magics.py#CellMagicFinder#visit_Expr"]
		"handle_ipynb_magics.py#" [label="handle_ipynb_magics.py#"]
		"handle_ipynb_magics.py#replace_magics" [label="handle_ipynb_magics.py#replace_magics"]
		"handle_ipynb_magics.py#replace_magics" [label="handle_ipynb_magics.py#replace_magics"]
		"handle_ipynb_magics.py#replace_cell_magics" [label="handle_ipynb_magics.py#replace_cell_magics"]
		"handle_ipynb_magics.py#" [label="handle_ipynb_magics.py#"]
		"handle_ipynb_magics.py#replace_magics" [label="handle_ipynb_magics.py#replace_magics"]
		"handle_ipynb_magics.py#" [label="handle_ipynb_magics.py#"]
		"handle_ipynb_magics.py#MagicFinder#visit_Expr" [label="handle_ipynb_magics.py#MagicFinder#visit_Expr"]
		"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" [label="handle_ipynb_magics.py#CellMagicFinder#visit_Expr"]
		"handle_ipynb_magics.py#MagicFinder#visit_Assign" [label="handle_ipynb_magics.py#MagicFinder#visit_Assign"]
		"handle_ipynb_magics.py#jupyter_dependencies_are_installed" [label="handle_ipynb_magics.py#jupyter_dependencies_are_installed"]
		"handle_ipynb_magics.py#" [label="handle_ipynb_magics.py#"]
		"handle_ipynb_magics.py#MagicFinder#visit_Assign" [label="handle_ipynb_magics.py#MagicFinder#visit_Assign"]
		"handle_ipynb_magics.py#mask_cell" [label="handle_ipynb_magics.py#mask_cell"]
		"handle_ipynb_magics.py#MagicFinder#visit_Expr" [label="handle_ipynb_magics.py#MagicFinder#visit_Expr"]
		"handle_ipynb_magics.py#mask_cell" [label="handle_ipynb_magics.py#mask_cell"]
	}
	subgraph "cluster_report.py" {
		graph [rankdir=LR]
		graph [label="report.py"]
		"report.py##Changed" [label="report.py##class Changed"]
		"report.py#Report#failed" [label="report.py#Report#function failed"]
		"report.py##NothingChanged" [label="report.py##class NothingChanged"]
		"report.py#Report#done" [label="report.py#Report#function done"]
		"report.py##Report" [label="report.py##class Report"]
		"report.py#Report#return_code" [label="report.py#Report#function return_code"]
		"report.py#Report#path_ignored" [label="report.py#Report#function path_ignored"]
		"report.py#Report#__str__" [label="report.py#Report#function __str__"]
		"report.py#Report#path_ignored" [label="report.py#Report#path_ignored"]
		"report.py#Report#failed" [label="report.py#Report#failed"]
		"report.py#Report#done" [label="report.py#Report#done"]
		"report.py#Report#done" [label="report.py#Report#done"]
		"report.py#Report#done" [label="report.py#Report#done"]
		"report.py#Report#done" [label="report.py#Report#done"]
		"report.py#" [label="report.py#"]
		"report.py#Report" [label="report.py#Report"]
	}
	subgraph "cluster_debug.py" {
		graph [rankdir=LR]
		graph [label="debug.py"]
		"debug.py#DebugVisitor#show" [label="debug.py#DebugVisitor#function show"]
		"debug.py##DebugVisitor" [label="debug.py##class DebugVisitor"]
		"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#function visit_default"]
		"debug.py#" [label="debug.py#"]
		"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#visit_default"]
		"debug.py#" [label="debug.py#"]
		"debug.py#" [label="debug.py#"]
		"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#visit_default"]
		"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#visit_default"]
		"debug.py#DebugVisitor#show" [label="debug.py#DebugVisitor#show"]
		"debug.py#DebugVisitor#show" [label="debug.py#DebugVisitor#show"]
		"debug.py#" [label="debug.py#"]
		"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#visit_default"]
		"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#visit_default"]
		"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#visit_default"]
		"debug.py#DebugVisitor#show" [label="debug.py#DebugVisitor#show"]
	}
	subgraph "cluster_concurrency.py" {
		graph [rankdir=LR]
		graph [label="concurrency.py"]
		"concurrency.py##shutdown" [label="concurrency.py##function shutdown"]
		"concurrency.py##maybe_install_uvloop" [label="concurrency.py##function maybe_install_uvloop"]
		"concurrency.py##cancel" [label="concurrency.py##function cancel"]
		"concurrency.py#cancel" [label="concurrency.py#cancel"]
		"concurrency.py#" [label="concurrency.py#"]
	}
	subgraph "cluster___main__.py" {
		graph [rankdir=LR]
		graph [label="__main__.py"]
		"__main__.py#" [label="__main__.py#"]
		"__main__.py#" [label="__main__.py#"]
	}
	"trans.py#fstring_contains_expr" -> "trans.py##iter_fexpr_spans"
	"linegen.py#" -> "lines.py##Line"
	"__init__.py#" -> "concurrency.py##cancel"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"trans.py#StringSplitter#_get_illegal_split_indices" -> "trans.py#StringSplitter#_iter_fexpr_slices"
	"linegen.py#normalize_invisible_parens" -> "linegen.py##normalize_invisible_parens"
	"lines.py#Line#is_import" -> "nodes.py##is_import"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#is_def"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##TErr"
	"trans.py#" -> "trans.py##CannotTransform"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "lines.py#Line#clone"
	"__init__.py#main" -> "__init__.py##main"
	"__init__.py#" -> "cache.py##read_cache"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"__init__.py#format_stdin_to_stdout" -> "output.py##color_diff"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#CustomSplitMapMixin#has_custom_splits"
	"handle_ipynb_magics.py#MagicFinder#visit_Assign" -> "handle_ipynb_magics.py##_is_ipython_magic"
	"__init__.py#main" -> "__init__.py##read_pyproject_toml"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py##is_valid_index_factory"
	"handle_ipynb_magics.py#replace_magics" -> "handle_ipynb_magics.py##MagicFinder"
	"linegen.py#LineGenerator#visit_STRING" -> "strings.py##normalize_string_prefix"
	"lines.py#EmptyLineTracker" -> "lines.py##Line"
	"comments.py#generate_ignored_nodes" -> "comments.py##contains_fmt_on_at_column"
	"lines.py#" -> "lines.py##Line"
	"__init__.py#detect_target_versions" -> "__init__.py##get_features_used"
	"linegen.py#LineGenerator#visit_STRING" -> "nodes.py##is_docstring"
	"linegen.py#normalize_invisible_parens" -> "comments.py##list_comments"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#do_transform#maybe_append_string_operators"
	"lines.py#Line#contains_uncollapsable_type_comments" -> "nodes.py##is_type_comment"
	"trans.py#BaseStringSplitter#_validate" -> "rusty.py##Ok"
	"trans.py#StringParenWrapper#_else_match" -> "trans.py##is_valid_index_factory"
	"trans.py#StringTransformer" -> "lines.py##Line"
	"linegen.py#LineGenerator#visit_DEDENT" -> "linegen.py#LineGenerator#line"
	"linegen.py#standalone_comment_split" -> "lines.py##Line"
	"linegen.py#delimiter_split" -> "mode.py##Feature"
	"trans.py#StringSplitter#_iter_fexpr_slices" -> "trans.py##iter_fexpr_spans"
	"__init__.py#WriteBack#from_configuration" -> "__init__.py##WriteBack"
	"strings.py#normalize_string_quotes" -> "strings.py##sub_twice"
	"linegen.py#left_hand_split" -> "linegen.py##bracket_split_build_line"
	"linegen.py#run_transformer" -> "lines.py#Line#clone"
	"linegen.py#delimiter_split" -> "linegen.py##CannotSplit"
	"__init__.py#" -> "comments.py##normalize_fmt_off"
	"trans.py#StringSplitter" -> "lines.py##Line"
	"trans.py#StringMerger#_merge_string_group" -> "rusty.py##Ok"
	"trans.py#StringMerger#do_match" -> "rusty.py##Ok"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#right_hand_split" -> "linegen.py##CannotSplit"
	"linegen.py#normalize_invisible_parens" -> "nodes.py##is_one_tuple"
	"linegen.py#LineGenerator#visit_async_stmt" -> "nodes.py#Visitor#visit"
	"__init__.py#get_features_used" -> "nodes.py##is_simple_decorator_expression"
	"parsing.py#get_grammars" -> "mode.py##Feature"
	"linegen.py#LineGenerator#visit_async_stmt" -> "nodes.py#Visitor#visit"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#main" -> "mode.py##TargetVersion"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#reformat_many" -> "mode.py##Mode"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_def"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#StringSplitter#_get_break_idx#passes_all_checks"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_decorator"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Err#err"
	"linegen.py#standalone_comment_split#append_to_line" -> "lines.py#Line#append"
	"linegen.py#right_hand_split" -> "lines.py##can_omit_invisible_parens"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"trans.py#StringSplitter#do_transform" -> "lines.py##append_leaves"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py##TErr"
	"trans.py#" -> "nodes.py##is_empty_lpar"
	"trans.py#StringTransformer#__call__" -> "rusty.py#Err#err"
	"nodes.py#is_empty_par" -> "nodes.py##is_empty_rpar"
	"trans.py#BaseStringSplitter#do_match" -> "rusty.py##Err"
	"parsing.py#lib2to3_parse" -> "parsing.py##InvalidInput"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"report.py#Report#done" -> "output.py##out"
	"linegen.py#right_hand_split" -> "linegen.py##bracket_split_succeeded_or_raise"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py##append_leaves"
	"mode.py#" -> "mode.py##Feature"
	"lines.py#Line#append_comment" -> "nodes.py##is_type_comment"
	"nodes.py#is_yield" -> "nodes.py##is_name_token"
	"trans.py#" -> "lines.py##Line"
	"lines.py#Line" -> "brackets.py##BracketTracker"
	"trans.py#" -> "strings.py##assert_is_leaf_string"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py##CustomSplit"
	"parsing.py#get_grammars" -> "mode.py##supports_feature"
	"debug.py#" -> "parsing.py##lib2to3_parse"
	"__init__.py#reformat_code" -> "__init__.py##WriteBack"
	"files.py#" -> "report.py##Report"
	"handle_ipynb_magics.py#mask_cell" -> "handle_ipynb_magics.py##replace_magics"
	"lines.py#" -> "lines.py##Line"
	"__init__.py#" -> "linegen.py##transform_line"
	"trans.py#StringMerger#_validate_msg" -> "strings.py##get_string_prefix"
	"trans.py#StringTransformer#__call__" -> "rusty.py##Err"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#clone"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#transform_line#_rhs" -> "lines.py##is_line_short_enough"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"trans.py#BaseStringSplitter#_validate" -> "trans.py#BaseStringSplitter#_get_max_string_length"
	"numerics.py#normalize_numeric_literal" -> "numerics.py##format_float_or_int_string"
	"trans.py#" -> "rusty.py##Ok"
	"__init__.py#read_pyproject_toml" -> "files.py##parse_pyproject_toml"
	"linegen.py#normalize_invisible_parens" -> "nodes.py##wrap_in_parentheses"
	"__init__.py#reformat_many" -> "report.py##Report"
	"linegen.py#" -> "lines.py##Line"
	"mode.py#" -> "mode.py##Feature"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_get_string_operator_leaves"
	"mode.py#" -> "mode.py##TargetVersion"
	"__init__.py#check_stability_and_equivalence" -> "__init__.py##assert_stable"
	"report.py#Report#done" -> "report.py##Changed"
	"debug.py#DebugVisitor#visit_default" -> "output.py##out"
	"__init__.py#reformat_one" -> "report.py##Changed"
	"__init__.py#" -> "report.py#Report#done"
	"trans.py#StringTransformer#__call__" -> "rusty.py##Err"
	"linegen.py#" -> "trans.py##StringParenWrapper"
	"report.py#" -> "output.py##err"
	"trans.py#" -> "rusty.py##Err"
	"linegen.py#right_hand_split" -> "linegen.py##CannotSplit"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#StringMerger#_merge_string_group#make_naked"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_import"
	"__init__.py#format_str" -> "__init__.py##_format_str_once"
	"lines.py#Line#append_safe" -> "lines.py#Line#append"
	"linegen.py#dont_increase_indentation" -> "lines.py##Line"
	"lines.py#Line#append" -> "lines.py#Line#has_magic_trailing_comma"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"__init__.py#" -> "output.py##dump_to_file"
	"linegen.py#" -> "strings.py##normalize_string_quotes"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_normalize_f_string"
	"linegen.py#standalone_comment_split" -> "lines.py##Line"
	"lines.py#" -> "nodes.py##is_type_comment"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py#StringParser#parse"
	"parsing.py#" -> "mode.py##TargetVersion"
	"__init__.py#" -> "handle_ipynb_magics.py##unmask_cell"
	"linegen.py#LineGenerator#__post_init__" -> "lines.py##Line"
	"__init__.py#" -> "report.py##Changed"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"__init__.py#" -> "cache.py##write_cache"
	"linegen.py#transform_line" -> "mode.py##Preview"
	"comments.py#convert_one_fmt_off_pair" -> "comments.py##list_comments"
	"linegen.py#transform_line" -> "linegen.py##left_hand_split"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"__init__.py#check_stability_and_equivalence" -> "mode.py##Mode"
	"trans.py#StringSplitter#do_splitter_match" -> "nodes.py##is_empty_lpar"
	"mode.py#" -> "mode.py##Feature"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_triple_quoted_string"
	"mode.py#" -> "mode.py##TargetVersion"
	"linegen.py#" -> "nodes.py##is_atom_with_invisible_parens"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_def"
	"linegen.py#delimiter_split" -> "brackets.py#BracketTracker#delimiter_count_with_priority"
	"nodes.py#whitespace" -> "nodes.py##preceding_leaf"
	"trans.py#StringSplitter#do_transform" -> "rusty.py##Ok"
	"__init__.py#format_file_in_place" -> "__init__.py##WriteBack"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py##TErr"
	"brackets.py#BracketTracker#mark" -> "brackets.py##is_split_before_delimiter"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_async_stmt"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#is_import"
	"linegen.py#transform_line" -> "lines.py#Line#is_comment"
	"__init__.py#" -> "report.py##Report"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "report.py##NothingChanged"
	"__init__.py#main" -> "mode.py##TargetVersion"
	"lines.py#Line#append" -> "lines.py#Line#has_magic_trailing_comma"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#append"
	"__init__.py#reformat_code" -> "__init__.py##format_stdin_to_stdout"
	"mode.py#" -> "mode.py##Feature"
	"mode.py#" -> "mode.py##TargetVersion"
	"trans.py#StringParenStripper#do_transform" -> "brackets.py##BracketMatchError"
	"linegen.py#transform_line" -> "lines.py##Line"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##TErr"
	"__init__.py#patched_main" -> "concurrency.py##maybe_install_uvloop"
	"__init__.py#get_features_used" -> "nodes.py##is_string_token"
	"linegen.py#run_transformer" -> "lines.py##line_to_string"
	"files.py#gen_python_files" -> "files.py##path_is_excluded"
	"strings.py#normalize_string_quotes" -> "strings.py##_cached_compile"
	"linegen.py#delimiter_split#append_to_line" -> "lines.py##Line"
	"mode.py#" -> "mode.py##TargetVersion"
	"lines.py#_can_omit_closing_paren" -> "lines.py#Line#enumerate_with_length"
	"linegen.py#standalone_comment_split" -> "lines.py##Line"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "handle_ipynb_magics.py##_is_ipython_magic"
	"linegen.py#transform_line" -> "lines.py#Line#contains_standalone_comments"
	"__init__.py#target_version_option_callback" -> "mode.py##TargetVersion"
	"__init__.py#" -> "report.py##Changed"
	"linegen.py#run_transformer" -> "lines.py##Line"
	"nodes.py#is_one_tuple" -> "nodes.py##unwrap_singleton_parenthesis"
	"__init__.py#main" -> "files.py##find_project_root"
	"lines.py#Line#append" -> "lines.py#Line#is_class_paren_empty"
	"__init__.py#reformat_many" -> "concurrency.py##shutdown"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##TErr"
	"lines.py#Line" -> "mode.py##Mode"
	"trans.py#StringSplitter#_maybe_normalize_string_quotes" -> "strings.py##normalize_string_quotes"
	"cache.py#write_cache" -> "cache.py##get_cache_file"
	"mode.py#" -> "mode.py##TargetVersion"
	"parsing.py#" -> "mode.py##Feature"
	"linegen.py#delimiter_split" -> "linegen.py#delimiter_split#append_to_line"
	"mode.py#" -> "mode.py##TargetVersion"
	"lines.py#" -> "nodes.py##is_one_tuple_between"
	"trans.py#StringParenWrapper#_dict_match" -> "nodes.py##is_empty_par"
	"linegen.py#transform_line" -> "trans.py##hug_power_op"
	"cache.py#" -> "mode.py##Mode"
	"trans.py#StringSplitter#do_transform" -> "trans.py##is_valid_index_factory"
	"linegen.py#delimiter_split" -> "mode.py##Feature"
	"linegen.py#delimiter_split" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#StringMerger#_merge_string_group#make_naked"
	"__init__.py#format_ipynb_string" -> "report.py##NothingChanged"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_normalize_f_string"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py##WriteBack"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "handle_ipynb_magics.py##_get_str_args"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#" -> "parsing.py##InvalidInput"
	"trans.py#StringSplitter#do_transform" -> "rusty.py##Ok"
	"linegen.py#" -> "trans.py##CannotTransform"
	"linegen.py#bracket_split_build_line" -> "lines.py##Line"
	"__init__.py#reformat_one" -> "report.py##Changed"
	"__init__.py#main" -> "__init__.py##WriteBack"
	"__init__.py#format_file_in_place" -> "__init__.py##WriteBack"
	"parsing.py#" -> "mode.py##supports_feature"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#StringParenWrapper#_else_match" -> "nodes.py##parent_type"
	"__init__.py#_format_str_once" -> "linegen.py##transform_line"
	"linegen.py#" -> "lines.py##Line"
	"linegen.py#" -> "nodes.py##is_arith_like"
	"trans.py#is_valid_index_factory" -> "trans.py#is_valid_index_factory#is_valid_index"
	"__init__.py#reformat_one" -> "report.py#Report#done"
	"__init__.py#" -> "cache.py##filter_cached"
	"__init__.py#" -> "mode.py##Mode"
	"parsing.py#lib2to3_parse" -> "parsing.py##matches_grammar"
	"__init__.py#main" -> "report.py#Report#return_code"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_decorators"
	"trans.py#BaseStringSplitter#_validate" -> "trans.py##TErr"
	"trans.py#StringParenStripper#do_match" -> "trans.py##is_valid_index_factory"
	"trans.py#StringParenWrapper" -> "lines.py##Line"
	"output.py#ipynb_diff" -> "output.py##diff"
	"trans.py#StringMerger" -> "lines.py##Line"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"linegen.py#bracket_split_build_line" -> "lines.py##Line"
	"trans.py#StringParenWrapper#do_transform" -> "rusty.py##Ok"
	"linegen.py#run_transformer" -> "lines.py##is_line_short_enough"
	"trans.py#CustomSplitMapMixin#has_custom_splits" -> "trans.py#CustomSplitMapMixin#_get_key"
	"trans.py#TErr" -> "trans.py##CannotTransform"
	"__init__.py#" -> "files.py##normalize_path_maybe_ignore"
	"trans.py#StringParenStripper#do_transform" -> "trans.py##TErr"
	"__init__.py#format_file_contents" -> "__init__.py##format_ipynb_string"
	"trans.py#StringParenWrapper#do_transform" -> "trans.py##insert_str_child_factory"
	"linegen.py#delimiter_split" -> "linegen.py##CannotSplit"
	"trans.py#StringMerger#_merge_string_group" -> "strings.py##get_string_prefix"
	"linegen.py#right_hand_split" -> "nodes.py##ensure_visible"
	"trans.py#CustomSplitMapMixin#add_custom_splits" -> "trans.py#CustomSplitMapMixin#_get_key"
	"files.py#gen_python_files" -> "handle_ipynb_magics.py##jupyter_dependencies_are_installed"
	"__init__.py#reformat_one" -> "__init__.py##WriteBack"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"trans.py#StringSplitter#do_transform" -> "rusty.py##Ok"
	"trans.py#BaseStringSplitter#do_match" -> "trans.py#BaseStringSplitter#do_splitter_match"
	"handle_ipynb_magics.py#replace_cell_magics" -> "handle_ipynb_magics.py##get_token"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##TErr"
	"linegen.py#LineGenerator#visit_default" -> "strings.py##normalize_string_quotes"
	"nodes.py#is_simple_decorator_expression" -> "nodes.py##is_simple_decorator_trailer"
	"linegen.py#delimiter_split" -> "lines.py#Line#append"
	"debug.py#DebugVisitor#visit_default" -> "output.py##out"
	"report.py#Report" -> "report.py##Changed"
	"linegen.py#LineGenerator#visit_stmt" -> "linegen.py#LineGenerator#line"
	"brackets.py#max_delimiter_priority_in_atom" -> "brackets.py#BracketTracker#mark"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py##TErr"
	"cache.py#" -> "cache.py##get_cache_dir"
	"trans.py#StringParenWrapper#do_splitter_match" -> "rusty.py##Ok"
	"linegen.py#" -> "trans.py##hug_power_op"
	"trans.py#" -> "trans.py##StringTransformer"
	"trans.py#StringParenWrapper#_assign_match" -> "nodes.py##is_empty_par"
	"__init__.py#patched_main" -> "__init__.py##main"
	"__init__.py#" -> "mode.py##TargetVersion"
	"__init__.py#" -> "parsing.py##parse_ast"
	"linegen.py#bracket_split_succeeded_or_raise" -> "linegen.py##CannotSplit"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"nodes.py#Visitor#visit" -> "nodes.py#Visitor#visit_default"
	"linegen.py#left_hand_split" -> "linegen.py##bracket_split_succeeded_or_raise"
	"numerics.py#format_scientific_notation" -> "numerics.py##format_float_or_int_string"
	"__init__.py#assert_equivalent" -> "parsing.py##stringify_ast"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "rusty.py##Ok"
	"__init__.py#" -> "handle_ipynb_magics.py##jupyter_dependencies_are_installed"
	"linegen.py#LineGenerator#visit_default" -> "lines.py#Line#append"
	"trans.py#hug_power_op" -> "trans.py##CannotTransform"
	"__init__.py#format_file_in_place" -> "__init__.py##format_file_contents"
	"__init__.py#" -> "mode.py##Mode"
	"__init__.py#" -> "parsing.py##lib2to3_parse"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "linegen.py##maybe_make_parens_invisible_in_atom"
	"trans.py#StringSplitter#do_transform" -> "rusty.py##Ok"
	"linegen.py#transform_line" -> "lines.py##line_to_string"
	"__init__.py#get_sources" -> "__init__.py##re_compile_maybe_verbose"
	"trans.py#BaseStringSplitter#_validate" -> "trans.py##TErr"
	"cache.py#write_cache" -> "cache.py##get_cache_info"
	"__init__.py#main" -> "files.py##normalize_path_maybe_ignore"
	"comments.py#list_comments" -> "comments.py##ProtoComment"
	"debug.py#" -> "nodes.py##Visitor"
	"trans.py#StringMerger#_validate_msg" -> "rusty.py##Ok"
	"trans.py#" -> "nodes.py##parent_type"
	"parsing.py#lib2to3_parse" -> "parsing.py##InvalidInput"
	"linegen.py#LineGenerator#visit_default" -> "comments.py##generate_comments"
	"cache.py#get_cache_file" -> "mode.py#Mode#get_cache_key"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_stub_class"
	"trans.py#StringSplitter#do_transform" -> "trans.py#CustomSplitMapMixin#pop_custom_splits"
	"trans.py#CustomSplitMapMixin" -> "trans.py##CustomSplitMapMixin"
	"trans.py#StringSplitter#do_transform#more_splits_should_be_made" -> "trans.py#StringSplitter#do_transform#max_last_string"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py##TErr"
	"trans.py#BaseStringSplitter#_validate" -> "trans.py##TErr"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#do_transform#max_last_string"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#StringSplitter#_get_break_idx#passes_all_checks"
	"comments.py#is_fmt_on" -> "comments.py##list_comments"
	"__init__.py#format_file_contents" -> "report.py##NothingChanged"
	"lines.py#can_omit_invisible_parens" -> "lines.py##_can_omit_opening_paren"
	"linegen.py#run_transformer" -> "lines.py#Line#contains_unsplittable_type_ignore"
	"mode.py#" -> "mode.py##Feature"
	"report.py#Report#done" -> "output.py##out"
	"__init__.py#validate_regex" -> "__init__.py##re_compile_maybe_verbose"
	"linegen.py#run_transformer" -> "linegen.py##transform_line"
	"linegen.py#" -> "mode.py##Feature"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "trans.py##TErr"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#append"
	"__init__.py#" -> "__init__.py##WriteBack"
	"trans.py#" -> "lines.py##Line"
	"lines.py#Line#has_magic_trailing_comma" -> "nodes.py##is_one_tuple_between"
	"__init__.py#" -> "lines.py##EmptyLineTracker"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#line"
	"linegen.py#" -> "nodes.py##is_vararg"
	"debug.py#DebugVisitor#visit_default" -> "output.py##out"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#right_hand_split" -> "linegen.py##bracket_split_build_line"
	"nodes.py#is_multiline_string" -> "strings.py##has_triple_quotes"
	"__init__.py#" -> "nodes.py##is_string_token"
	"lines.py#Line#append" -> "brackets.py#BracketTracker#mark"
	"trans.py#" -> "lines.py##Line"
	"linegen.py#" -> "comments.py##generate_comments"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#" -> "trans.py##StringParenStripper"
	"nodes.py#whitespace" -> "nodes.py##preceding_leaf"
	"parsing.py#get_grammars" -> "mode.py##Feature"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_class"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#StringSplitter#_get_illegal_split_indices"
	"comments.py#generate_ignored_nodes" -> "comments.py##is_fmt_on"
	"lines.py#" -> "nodes.py##replace_child"
	"linegen.py#standalone_comment_split" -> "mode.py##Feature"
	"trans.py#StringMerger#do_transform" -> "rusty.py##Err"
	"parsing.py#" -> "mode.py##TargetVersion"
	"trans.py#" -> "lines.py##append_leaves"
	"__init__.py#_format_str_once" -> "linegen.py##LineGenerator"
	"linegen.py#right_hand_split" -> "linegen.py##bracket_split_build_line"
	"comments.py#list_comments" -> "comments.py##ProtoComment"
	"__init__.py#format_stdin_to_stdout" -> "files.py##wrap_stream_for_windows"
	"__init__.py#reformat_one" -> "report.py##Report"
	"linegen.py#" -> "strings.py##get_string_prefix"
	"nodes.py#whitespace" -> "nodes.py##preceding_leaf"
	"cache.py#" -> "mode.py##Mode"
	"__init__.py#" -> "mode.py##Mode"
	"__init__.py#" -> "mode.py##Mode"
	"trans.py#BaseStringSplitter" -> "lines.py##Line"
	"linegen.py#LineGenerator#visit_suite" -> "linegen.py#LineGenerator#visit_default"
	"__init__.py#main" -> "output.py##out"
	"lines.py#Line#clone" -> "lines.py##Line"
	"trans.py#" -> "rusty.py##Err"
	"linegen.py#" -> "nodes.py##is_multiline_string"
	"trans.py#StringParenWrapper#_assert_match" -> "trans.py##is_valid_index_factory"
	"__init__.py#format_file_contents" -> "report.py##NothingChanged"
	"handle_ipynb_magics.py#" -> "report.py##NothingChanged"
	"files.py#find_pyproject_toml" -> "files.py##find_project_root"
	"numerics.py#format_complex_number" -> "numerics.py##format_float_or_int_string"
	"linegen.py#" -> "trans.py##StringMerger"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"linegen.py#LineGenerator#__init__" -> "lines.py##Line"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##is_valid_index_factory"
	"trans.py#BaseStringSplitter" -> "lines.py##Line"
	"linegen.py#transform_line" -> "trans.py##CannotTransform"
	"lines.py#Line#enumerate_with_length" -> "lines.py#Line#comments_after"
	"handle_ipynb_magics.py#" -> "handle_ipynb_magics.py##Replacement"
	"lines.py#is_line_short_enough" -> "lines.py##line_to_string"
	"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" -> "linegen.py#LineGenerator#visit_default"
	"lines.py#Line" -> "lines.py##Line"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#main" -> "__init__.py##validate_regex"
	"cache.py#read_cache" -> "cache.py##get_cache_file"
	"files.py#gen_python_files" -> "report.py#Report#path_ignored"
	"lines.py#" -> "lines.py##Line"
	"linegen.py#bracket_split_build_line" -> "linegen.py##normalize_prefix"
	"__init__.py#" -> "linegen.py##LineGenerator"
	"linegen.py#LineGenerator#visit_stmt" -> "linegen.py##normalize_invisible_parens"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#comments_after"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#StringSplitter#_get_break_idx#passes_all_checks"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_maybe_normalize_string_quotes"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_class"
	"__init__.py#reformat_one" -> "__init__.py##format_stdin_to_stdout"
	"__init__.py#reformat_code" -> "report.py##Changed"
	"trans.py#StringMerger#do_transform" -> "trans.py#StringMerger#_merge_string_group"
	"rusty.py#" -> "rusty.py##Ok"
	"trans.py#hug_power_op" -> "trans.py#hug_power_op#is_simple_operand"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#line"
	"trans.py#StringSplitter#do_transform" -> "lines.py##Line"
	"__init__.py#" -> "mode.py##Mode"
	"linegen.py#generate_trailers_to_omit" -> "nodes.py##is_one_tuple_between"
	"handle_ipynb_magics.py#mask_cell" -> "handle_ipynb_magics.py##replace_cell_magics"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"__init__.py#assert_equivalent" -> "output.py##dump_to_file"
	"trans.py#StringMerger#_merge_string_group" -> "strings.py##normalize_string_quotes"
	"__init__.py#format_cell" -> "__init__.py##check_stability_and_equivalence"
	"linegen.py#LineGenerator#visit_match_case" -> "linegen.py#LineGenerator#line"
	"rusty.py#" -> "rusty.py##Err"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py##is_atom_with_invisible_parens"
	"trans.py#StringParenWrapper#_assign_match" -> "trans.py#StringParser#parse"
	"__init__.py#format_file_contents" -> "__init__.py##format_str"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#do_transform#more_splits_should_be_made"
	"files.py#find_pyproject_toml" -> "output.py##err"
	"__init__.py#main" -> "output.py##out"
	"__init__.py#" -> "files.py##wrap_stream_for_windows"
	"linegen.py#" -> "mode.py##Mode"
	"__init__.py#assert_stable" -> "output.py##diff"
	"trans.py#CustomSplitMapMixin#add_custom_splits" -> "trans.py##CustomSplit"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"files.py#gen_python_files" -> "files.py##get_gitignore"
	"__init__.py#_format_str_once" -> "__init__.py##get_future_imports"
	"trans.py#" -> "brackets.py##BracketMatchError"
	"parsing.py#parse_ast" -> "parsing.py##parse_single_version"
	"mode.py#Mode#__post_init__" -> "mode.py##Deprecated"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py##is_empty_tuple"
	"linegen.py#" -> "nodes.py##is_one_tuple_between"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#" -> "report.py##Changed"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py##Line"
	"__init__.py#format_file_in_place" -> "mode.py##Mode"
	"trans.py#StringParenWrapper#do_transform" -> "trans.py##is_valid_index_factory"
	"lines.py#Line#append" -> "lines.py#Line#is_complex_subscript"
	"trans.py#" -> "strings.py##get_string_prefix"
	"trans.py#StringParenWrapper#_assign_match" -> "nodes.py##parent_type"
	"trans.py#StringSplitter#do_transform#maybe_append_string_operators" -> "nodes.py##replace_child"
	"trans.py#StringParenWrapper#_return_match" -> "nodes.py##is_empty_par"
	"__init__.py#format_ipynb_string" -> "__init__.py##format_cell"
	"trans.py#StringMerger#_merge_string_group" -> "strings.py##get_string_prefix"
	"parsing.py#get_grammars" -> "mode.py##supports_feature"
	"__init__.py#" -> "files.py##gen_python_files"
	"comments.py#" -> "nodes.py##first_leaf_column"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py##WriteBack"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#Line#append"
	"__init__.py#main" -> "__init__.py#WriteBack#from_configuration"
	"parsing.py#stringify_ast" -> "parsing.py##_normalize"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#dont_increase_indentation#split_wrapper" -> "linegen.py##normalize_prefix"
	"linegen.py#transform_line" -> "lines.py#Line#contains_uncollapsable_type_comments"
	"trans.py#StringSplitter#do_transform" -> "trans.py##TErr"
	"trans.py#" -> "trans.py##StringTransformer"
	"comments.py#generate_comments" -> "comments.py##list_comments"
	"linegen.py#delimiter_split" -> "linegen.py#delimiter_split#append_to_line"
	"trans.py#StringSplitter#do_transform" -> "strings.py##get_string_prefix"
	"lines.py#" -> "nodes.py##is_multiline_string"
	"linegen.py#" -> "nodes.py##is_name_token"
	"__init__.py#_format_str_once" -> "comments.py##normalize_fmt_off"
	"files.py#gen_python_files" -> "report.py#Report#path_ignored"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#" -> "nodes.py##wrap_in_parentheses"
	"linegen.py#LineGenerator#visit_default" -> "nodes.py#Visitor#visit_default"
	"linegen.py#transform_line" -> "mode.py##Feature"
	"cache.py#filter_cached" -> "cache.py##get_cache_info"
	"linegen.py#" -> "lines.py##can_be_split"
	"files.py#" -> "output.py##err"
	"trans.py#StringTransformer#__call__" -> "rusty.py#Ok#ok"
	"__init__.py#" -> "concurrency.py##cancel"
	"trans.py#StringSplitter#do_transform" -> "lines.py##append_leaves"
	"__init__.py#_format_str_once" -> "lines.py##Line"
	"trans.py#BaseStringSplitter" -> "lines.py##Line"
	"trans.py#StringTransformer#__call__" -> "trans.py#StringTransformer#do_match"
	"__init__.py#main" -> "output.py##err"
	"linegen.py#right_hand_split" -> "linegen.py##CannotSplit"
	"brackets.py#BracketTracker#delimiter_count_with_priority" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"__init__.py#get_future_imports#get_imports_from_children" -> "__init__.py#get_future_imports#get_imports_from_children"
	"linegen.py#right_hand_split" -> "lines.py#Line#contains_standalone_comments"
	"linegen.py#right_hand_split" -> "lines.py#Line#is_import"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#clone"
	"linegen.py#run_transformer" -> "lines.py#Line#contains_multiline_strings"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#BaseStringSplitter#_get_max_string_length" -> "lines.py#Line#comments_after"
	"nodes.py#is_docstring" -> "nodes.py##prev_siblings_are"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#append"
	"trans.py#StringParenWrapper#_assert_match" -> "trans.py#StringParser#parse"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_return_match"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#BaseStringSplitter#do_match" -> "trans.py#BaseStringSplitter#_validate"
	"comments.py#contains_fmt_on_at_column" -> "comments.py##is_fmt_on"
	"mode.py#" -> "mode.py##TargetVersion"
	"linegen.py#standalone_comment_split#append_to_line" -> "lines.py##Line"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_assign_match"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#" -> "strings.py##normalize_string_quotes"
	"__init__.py#" -> "output.py##out"
	"__init__.py#" -> "mode.py##Mode"
	"lines.py#Line#is_stub_class" -> "lines.py#Line#is_class"
	"files.py#" -> "handle_ipynb_magics.py##jupyter_dependencies_are_installed"
	"__init__.py#main" -> "__init__.py##target_version_option_callback"
	"trans.py#StringParenWrapper#do_transform" -> "nodes.py##replace_child"
	"files.py#gen_python_files" -> "files.py##path_is_excluded"
	"__init__.py#" -> "nodes.py##is_simple_decorator_expression"
	"lines.py#append_leaves" -> "lines.py#Line#append"
	"trans.py#StringParenStripper#do_match" -> "nodes.py##is_empty_rpar"
	"linegen.py#LineGenerator#visit_default" -> "strings.py##normalize_string_prefix"
	"__init__.py#" -> "parsing.py##stringify_ast"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py##StringParser"
	"linegen.py#run_transformer" -> "mode.py##Feature"
	"__init__.py#main" -> "output.py##out"
	"linegen.py#delimiter_split#append_to_line" -> "lines.py#Line#append"
	"__init__.py#reformat_one" -> "report.py##Changed"
	"__init__.py#" -> "mode.py##Mode"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_decrement_after_for_loop_variable"
	"lines.py#can_omit_invisible_parens" -> "lines.py##Line"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_class"
	"trans.py#" -> "comments.py##contains_pragma_comment"
	"__init__.py#format_stdin_to_stdout" -> "output.py##diff"
	"linegen.py#delimiter_split" -> "lines.py##Line"
	"trans.py#" -> "trans.py##CannotTransform"
	"linegen.py#generate_trailers_to_omit" -> "nodes.py##is_one_tuple_between"
	"__init__.py#" -> "output.py##color_diff"
	"trans.py#StringSplitter#_get_break_idx" -> "strings.py##assert_is_leaf_string"
	"__main__.py#" -> "__init__.py##patched_main"
	"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" -> "handle_ipynb_magics.py##_get_str_args"
	"trans.py#StringParenStripper#do_match" -> "trans.py##StringParser"
	"mode.py#" -> "mode.py##Feature"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#" -> "report.py##NothingChanged"
	"trans.py#CustomSplitMapMixin" -> "trans.py##CustomSplit"
	"linegen.py#left_hand_split" -> "linegen.py##CannotSplit"
	"strings.py#normalize_string_quotes" -> "strings.py##sub_twice"
	"linegen.py#transform_line" -> "trans.py##StringSplitter"
	"trans.py#hug_power_op#is_simple_operand" -> "trans.py#hug_power_op#is_simple_lookup"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#do_transform#maybe_append_string_operators"
	"trans.py#StringParenWrapper#_dict_match" -> "trans.py##is_valid_index_factory"
	"trans.py#StringSplitter#_get_illegal_split_indices" -> "trans.py#StringSplitter#_iter_nameescape_slices"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_increment_for_loop_variable"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_decorator"
	"__init__.py#reformat_one" -> "cache.py##write_cache"
	"__init__.py#reformat_code" -> "report.py##Changed"
	"trans.py#StringParenStripper#do_transform" -> "lines.py#Line#comments_after"
	"trans.py#StringSplitter#do_transform" -> "trans.py##fstring_contains_expr"
	"handle_ipynb_magics.py#MagicFinder#visit_Assign" -> "handle_ipynb_magics.py##_get_str_args"
	"__init__.py#main" -> "output.py##out"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"mode.py#" -> "mode.py##Feature"
	"mode.py#" -> "mode.py##TargetVersion"
	"trans.py#StringParenWrapper#_assign_match" -> "nodes.py##parent_type"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#clone"
	"linegen.py#LineGenerator#visit_STRING" -> "strings.py##fix_docstring"
	"linegen.py#LineGenerator#line" -> "lines.py##Line"
	"__init__.py#validate_cell" -> "report.py##NothingChanged"
	"trans.py#StringMerger#do_transform" -> "rusty.py##Err"
	"linegen.py#left_hand_split" -> "linegen.py##bracket_split_build_line"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py##WriteBack"
	"cache.py#" -> "mode.py##Mode"
	"trans.py#StringParenStripper" -> "lines.py##Line"
	"linegen.py#LineGenerator#visit_INDENT" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#StringParenWrapper#_assert_match" -> "nodes.py##is_empty_par"
	"linegen.py#bracket_split_succeeded_or_raise" -> "linegen.py##CannotSplit"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_get_break_idx"
	"__init__.py#main" -> "__init__.py##validate_regex"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_stub_class"
	"trans.py#" -> "trans.py##CustomSplitMapMixin"
	"trans.py#StringParenWrapper#_assign_match" -> "trans.py##StringParser"
	"trans.py#hug_power_op" -> "lines.py##Line"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "lines.py##append_leaves"
	"trans.py#" -> "nodes.py##replace_child"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#Line#comments_after"
	"linegen.py#LineGenerator#visit_default" -> "lines.py#Line#append"
	"trans.py#" -> "trans.py##BaseStringSplitter"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Err#err"
	"comments.py#contains_fmt_on_at_column" -> "nodes.py##first_leaf_column"
	"files.py#normalize_path_maybe_ignore" -> "report.py#Report#path_ignored"
	"linegen.py#transform_line" -> "linegen.py##run_transformer"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#reformat_one" -> "report.py##Changed"
	"__init__.py#main" -> "mode.py##Mode"
	"linegen.py#right_hand_split" -> "mode.py##Feature"
	"lines.py#" -> "lines.py##Line"
	"__init__.py#" -> "__init__.py##format_file_in_place"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#comments_after"
	"__init__.py#patched_main" -> "__init__.py##patch_click"
	"__init__.py#" -> "report.py#Report#failed"
	"linegen.py#transform_line" -> "trans.py##StringParenWrapper"
	"debug.py#" -> "output.py##out"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_normalize_f_string"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#append"
	"lines.py#Line#is_class_paren_empty" -> "lines.py#Line#is_class"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#StringSplitter#_get_break_idx#passes_all_checks"
	"linegen.py#transform_line#_rhs" -> "lines.py##Line"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_match_case"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#run_transformer" -> "linegen.py##run_transformer"
	"__init__.py#main" -> "__init__.py##path_empty"
	"parsing.py#get_grammars" -> "mode.py##Feature"
	"report.py#Report#path_ignored" -> "output.py##out"
	"linegen.py#normalize_invisible_parens" -> "nodes.py##is_rpar_token"
	"linegen.py#LineGenerator#visit_stmt" -> "lines.py##Line"
	"linegen.py#" -> "lines.py##line_to_string"
	"mode.py#" -> "mode.py##TargetVersion"
	"linegen.py#" -> "trans.py##StringSplitter"
	"trans.py#BaseStringSplitter" -> "lines.py##Line"
	"linegen.py#transform_line" -> "lines.py##Line"
	"linegen.py#" -> "lines.py##is_line_short_enough"
	"trans.py#" -> "trans.py##BaseStringSplitter"
	"linegen.py#LineGenerator#visit_default" -> "linegen.py##normalize_prefix"
	"lines.py#Line#contains_multiline_strings" -> "nodes.py##is_multiline_string"
	"linegen.py#LineGenerator#visit_STRING" -> "strings.py##get_string_prefix"
	"lines.py#is_line_short_enough" -> "lines.py#Line#contains_standalone_comments"
	"linegen.py#right_hand_split" -> "lines.py##can_be_split"
	"trans.py#StringParenStripper#do_transform" -> "lines.py##append_leaves"
	"linegen.py#generate_trailers_to_omit" -> "lines.py#Line#enumerate_with_length"
	"strings.py#fix_docstring" -> "strings.py##lines_with_leading_tabs_expanded"
	"trans.py#StringSplitter#_get_break_idx#passes_all_checks" -> "trans.py#StringSplitter#_get_break_idx#breaks_unsplittable_expression"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "lines.py##Line"
	"trans.py#StringMerger" -> "lines.py##Line"
	"parsing.py#lib2to3_parse" -> "parsing.py##get_grammars"
	"comments.py#" -> "nodes.py##preceding_leaf"
	"trans.py#StringSplitter#_iter_fexpr_slices" -> "strings.py##get_string_prefix"
	"__init__.py#" -> "concurrency.py##maybe_install_uvloop"
	"files.py#gen_python_files" -> "report.py##Report"
	"lines.py#Line#is_complex_subscript" -> "nodes.py##child_towards"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"nodes.py#whitespace" -> "nodes.py##preceding_leaf"
	"lines.py#append_leaves" -> "lines.py#Line#append"
	"handle_ipynb_magics.py#MagicFinder#__init__" -> "handle_ipynb_magics.py##OffsetAndMagic"
	"__init__.py#_format_str_once" -> "parsing.py##lib2to3_parse"
	"__init__.py#assert_equivalent" -> "parsing.py##stringify_ast"
	"linegen.py#LineGenerator#visit_suite" -> "nodes.py##is_stub_suite"
	"nodes.py#is_stub_suite" -> "nodes.py##is_stub_body"
	"__init__.py#read_pyproject_toml" -> "files.py##find_pyproject_toml"
	"trans.py#StringSplitter#do_splitter_match" -> "nodes.py##is_empty_rpar"
	"linegen.py#" -> "nodes.py##is_one_tuple"
	"__init__.py#format_file_in_place" -> "__init__.py##nullcontext"
	"trans.py#StringParenStripper#do_transform" -> "nodes.py##replace_child"
	"__init__.py#format_file_in_place" -> "__init__.py##WriteBack"
	"parsing.py#get_grammars" -> "mode.py##Feature"
	"linegen.py#transform_line" -> "trans.py##StringParenStripper"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#Line#clone"
	"brackets.py#is_split_before_delimiter" -> "nodes.py##is_vararg"
	"trans.py#StringMerger" -> "lines.py##Line"
	"parsing.py#get_grammars" -> "mode.py##supports_feature"
	"trans.py#StringParenStripper#do_match" -> "nodes.py##is_empty_lpar"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py##format_file_contents"
	"debug.py#DebugVisitor#visit_default" -> "nodes.py#Visitor#visit"
	"linegen.py#LineGenerator#visit_suite" -> "nodes.py#Visitor#visit"
	"trans.py#StringTransformer#__call__" -> "trans.py##CannotTransform"
	"lines.py#can_omit_invisible_parens" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"trans.py#" -> "mode.py##Feature"
	"__init__.py#reformat_one" -> "report.py##Changed"
	"trans.py#" -> "trans.py##CustomSplitMapMixin"
	"__init__.py#_format_str_once" -> "__init__.py##detect_target_versions"
	"lines.py#append_leaves" -> "lines.py#Line#comments_after"
	"handle_ipynb_magics.py#replace_cell_magics" -> "handle_ipynb_magics.py##Replacement"
	"__init__.py#assert_stable" -> "output.py##dump_to_file"
	"linegen.py#standalone_comment_split" -> "linegen.py#standalone_comment_split#append_to_line"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#append"
	"linegen.py#" -> "nodes.py##is_empty_tuple"
	"mode.py#Mode#__contains__" -> "mode.py##Preview"
	"linegen.py#standalone_comment_split" -> "linegen.py##CannotSplit"
	"linegen.py#right_hand_split" -> "linegen.py##CannotSplit"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"trans.py#StringParenStripper#do_transform" -> "lines.py##append_leaves"
	"trans.py#StringMerger#_validate_msg" -> "comments.py##contains_pragma_comment"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#append"
	"linegen.py#" -> "nodes.py##is_stub_body"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py##append_leaves"
	"mode.py#" -> "mode.py##Feature"
	"lines.py#Line#append" -> "lines.py#Line#remove_trailing_comma"
	"trans.py#" -> "nodes.py##is_empty_rpar"
	"linegen.py#" -> "lines.py##Line"
	"mode.py#" -> "mode.py##Feature"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py##is_stub_body"
	"lines.py#Line#append_safe" -> "lines.py#Line#is_comment"
	"linegen.py#LineGenerator#visit_async_stmt" -> "linegen.py#LineGenerator#line"
	"__init__.py#assert_stable" -> "__init__.py##_format_str_once"
	"files.py#normalize_path_maybe_ignore" -> "report.py#Report#path_ignored"
	"parsing.py#get_grammars" -> "mode.py##supports_feature"
	"linegen.py#right_hand_split" -> "lines.py##Line"
	"linegen.py#transform_line" -> "linegen.py##standalone_comment_split"
	"linegen.py#" -> "strings.py##fix_docstring"
	"linegen.py#transform_line" -> "trans.py##StringMerger"
	"linegen.py#standalone_comment_split" -> "linegen.py##dont_increase_indentation"
	"__init__.py#" -> "report.py##Changed"
	"__init__.py#format_file_in_place" -> "__init__.py##WriteBack"
	"linegen.py#right_hand_split" -> "lines.py#Line#contains_multiline_strings"
	"__init__.py#get_sources" -> "output.py##err"
	"mode.py#" -> "mode.py##Feature"
	"strings.py#get_string_prefix" -> "strings.py##assert_is_leaf_string"
	"lines.py#EmptyLineTracker" -> "lines.py##Line"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#TErr" -> "rusty.py##Err"
	"__init__.py#detect_target_versions" -> "mode.py##TargetVersion"
	"trans.py#BaseStringSplitter#_validate" -> "strings.py##has_triple_quotes"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#append"
	"files.py#gen_python_files" -> "files.py##path_is_excluded"
	"trans.py#StringMerger#do_match" -> "rusty.py##Ok"
	"__init__.py#format_file_in_place" -> "files.py##wrap_stream_for_windows"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_decorator"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "brackets.py##max_delimiter_priority_in_atom"
	"__init__.py#format_cell" -> "report.py##NothingChanged"
	"linegen.py#right_hand_split" -> "lines.py##is_line_short_enough"
	"trans.py#BaseStringSplitter#do_match" -> "rusty.py##Err"
	"trans.py#StringMerger#do_transform" -> "rusty.py##Ok"
	"trans.py#StringTransformer" -> "lines.py##Line"
	"__init__.py#main" -> "output.py##out"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#LineGenerator#__init__" -> "linegen.py#LineGenerator#__post_init__"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#clone"
	"mode.py#" -> "mode.py##Feature"
	"nodes.py#is_empty_par" -> "nodes.py##is_empty_lpar"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py##wrap_in_parentheses"
	"__init__.py#get_sources" -> "report.py##Report"
	"linegen.py#LineGenerator#visit_factor" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#BaseStringSplitter#_get_max_string_length" -> "trans.py##is_valid_index_factory"
	"trans.py#BaseStringSplitter#_validate" -> "trans.py##TErr"
	"linegen.py#LineGenerator#visit_default" -> "numerics.py##normalize_numeric_literal"
	"linegen.py#transform_line" -> "linegen.py##delimiter_split"
	"linegen.py#" -> "lines.py##Line"
	"linegen.py#run_transformer" -> "lines.py##Line"
	"handle_ipynb_magics.py#MagicFinder#visit_Assign" -> "handle_ipynb_magics.py##OffsetAndMagic"
	"trans.py#StringMerger#do_transform" -> "trans.py#StringMerger#_remove_backslash_line_continuation_chars"
	"cache.py#" -> "mode.py##Mode"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_match_case"
	"lines.py#Line#is_complex_subscript" -> "brackets.py#BracketTracker#get_open_lsqb"
	"__init__.py#validate_cell" -> "report.py##NothingChanged"
	"trans.py#StringMerger" -> "lines.py##Line"
	"trans.py#StringMerger#do_transform" -> "rusty.py##Ok"
	"__init__.py#_format_str_once" -> "lines.py##EmptyLineTracker"
	"strings.py#normalize_string_quotes" -> "strings.py##_cached_compile"
	"__init__.py#reformat_many" -> "__init__.py##WriteBack"
	"debug.py#" -> "nodes.py##Visitor"
	"debug.py#DebugVisitor#show" -> "debug.py##DebugVisitor"
	"__init__.py#reformat_code" -> "report.py##Report"
	"__init__.py#main" -> "output.py##out"
	"__init__.py#reformat_one" -> "__init__.py##WriteBack"
	"__init__.py#main" -> "__init__.py##reformat_code"
	"trans.py#BaseStringSplitter#do_match" -> "rusty.py#Ok#ok"
	"linegen.py#run_transformer" -> "lines.py##is_line_short_enough"
	"trans.py#" -> "mode.py##Feature"
	"trans.py#StringTransformer#__call__" -> "trans.py##CannotTransform"
	"trans.py#StringTransformer#__call__" -> "rusty.py#Err#err"
	"__init__.py#format_stdin_to_stdout" -> "mode.py##Mode"
	"__init__.py#" -> "files.py##get_gitignore"
	"trans.py#StringMerger#do_match" -> "trans.py##TErr"
	"lines.py#" -> "brackets.py##BracketTracker"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#LineGenerator#visit_default" -> "lines.py#Line#append"
	"trans.py#StringParenWrapper#do_transform" -> "nodes.py##replace_child"
	"__init__.py#format_file_in_place" -> "output.py##ipynb_diff"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "handle_ipynb_magics.py##OffsetAndMagic"
	"trans.py#BaseStringSplitter#_validate" -> "comments.py##contains_pragma_comment"
	"files.py#gen_python_files" -> "files.py##gen_python_files"
	"linegen.py#transform_line#_rhs" -> "linegen.py##generate_trailers_to_omit"
	"__init__.py#" -> "cache.py##get_cache_info"
	"lines.py#Line#append_comment" -> "brackets.py#BracketTracker#any_open_brackets"
	"trans.py#insert_str_child_factory" -> "trans.py#insert_str_child_factory#insert_str_child"
	"__init__.py#reformat_one" -> "__init__.py##format_file_in_place"
	"linegen.py#transform_line" -> "lines.py#Line#is_def"
	"nodes.py#prev_siblings_are" -> "nodes.py##prev_siblings_are"
	"handle_ipynb_magics.py#" -> "handle_ipynb_magics.py##Replacement"
	"linegen.py#LineGenerator#visit_INDENT" -> "linegen.py#LineGenerator#line"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_def"
	"debug.py#DebugVisitor#visit_default" -> "output.py##out"
	"__init__.py#reformat_one" -> "cache.py##get_cache_info"
	"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" -> "linegen.py#LineGenerator#line"
	"__init__.py#" -> "files.py##find_project_root"
	"lines.py#" -> "mode.py##Mode"
	"lines.py#can_omit_invisible_parens" -> "brackets.py#BracketTracker#delimiter_count_with_priority"
	"linegen.py#LineGenerator#visit_stmt" -> "nodes.py##is_name_token"
	"trans.py#StringParenStripper#do_transform" -> "trans.py##StringParser"
	"__init__.py#" -> "files.py##find_pyproject_toml"
	"lines.py#" -> "lines.py##Line"
	"linegen.py#standalone_comment_split" -> "lines.py##Line"
	"mode.py#" -> "mode.py##Feature"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"
	"linegen.py#normalize_invisible_parens" -> "nodes.py##is_lpar_token"
	"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" -> "brackets.py#BracketTracker#any_open_brackets"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Ok#ok"
	"lines.py#can_omit_invisible_parens" -> "nodes.py##is_multiline_string"
	"lines.py#" -> "nodes.py##child_towards"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py##is_valid_index_factory"
	"mode.py#" -> "mode.py##Feature"
	"files.py#normalize_path_maybe_ignore" -> "report.py##Report"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py##Line"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##TErr"
	"trans.py#StringParenStripper#do_transform" -> "trans.py#StringParser#parse"
	"linegen.py#delimiter_split" -> "lines.py#Line#comments_after"
	"__init__.py#assert_equivalent" -> "output.py##diff"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#" -> "trans.py##StringTransformer"
	"__init__.py#main" -> "__init__.py##validate_regex"
	"trans.py#StringParenWrapper" -> "lines.py##Line"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_dict_match"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_def"
	"linegen.py#" -> "numerics.py##normalize_numeric_literal"
	"linegen.py#right_hand_split" -> "linegen.py##bracket_split_build_line"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_decorator"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py##WriteBack"
	"linegen.py#standalone_comment_split" -> "lines.py#Line#comments_after"
	"nodes.py#whitespace" -> "nodes.py##preceding_leaf"
	"__init__.py#get_future_imports" -> "__init__.py#get_future_imports#get_imports_from_children"
	"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" -> "handle_ipynb_magics.py##CellMagic"
	"lines.py#Line#has_magic_trailing_comma" -> "lines.py#Line#is_import"
	"trans.py#" -> "mode.py##Feature"
	"__init__.py#format_str" -> "__init__.py##_format_str_once"
	"trans.py#StringSplitter#do_splitter_match" -> "rusty.py##Ok"
	"linegen.py#" -> "nodes.py##is_stub_suite"
	"debug.py#DebugVisitor#visit_default" -> "output.py##out"
	"__init__.py#reformat_code" -> "report.py#Report#done"
	"linegen.py#transform_line#_rhs" -> "linegen.py##right_hand_split"
	"nodes.py#is_yield" -> "nodes.py##is_yield"
	"linegen.py#delimiter_split" -> "nodes.py##is_vararg"
	"__init__.py#assert_equivalent" -> "parsing.py##parse_ast"
	"debug.py#DebugVisitor#show" -> "parsing.py##lib2to3_parse"
	"trans.py#hug_power_op#is_simple_operand" -> "trans.py#hug_power_op#is_simple_lookup"
	"linegen.py#transform_line" -> "mode.py##Preview"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#StringParenWrapper#do_transform" -> "nodes.py##replace_child"
	"lines.py#Line#enumerate_with_length" -> "lines.py##enumerate_reversed"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##TErr"
	"concurrency.py#cancel" -> "output.py##err"
	"linegen.py#LineGenerator#visit_default" -> "brackets.py#BracketTracker#any_open_brackets"
	"trans.py#StringParenStripper#do_match" -> "trans.py##TErr"
	"linegen.py#run_transformer" -> "lines.py##Line"
	"lines.py#Line#append" -> "lines.py#Line#append_comment"
	"mode.py#" -> "mode.py##Feature"
	"strings.py#normalize_string_quotes" -> "strings.py##_cached_compile"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"nodes.py#is_docstring" -> "nodes.py##prev_siblings_are"
	"__init__.py#assert_equivalent" -> "parsing.py##parse_ast"
	"linegen.py#dont_increase_indentation" -> "linegen.py#dont_increase_indentation#split_wrapper"
	"lines.py#Line#contains_uncollapsable_type_comments" -> "nodes.py##is_type_comment"
	"trans.py#CustomSplitMapMixin#pop_custom_splits" -> "trans.py#CustomSplitMapMixin#_get_key"
	"__init__.py#" -> "lines.py##Line"
	"__init__.py#detect_target_versions" -> "mode.py##TargetVersion"
	"comments.py#" -> "nodes.py##container_of"
	"linegen.py#dont_increase_indentation" -> "mode.py##Feature"
	"linegen.py#transform_line" -> "linegen.py##delimiter_split"
	"__init__.py#format_file_in_place" -> "output.py##diff"
	"linegen.py#" -> "trans.py##CannotTransform"
	"linegen.py#" -> "strings.py##normalize_string_prefix"
	"report.py#Report#done" -> "report.py##Changed"
	"brackets.py#" -> "nodes.py##is_vararg"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py##TErr"
	"__init__.py#" -> "output.py##ipynb_diff"
	"handle_ipynb_magics.py#replace_magics" -> "handle_ipynb_magics.py##Replacement"
	"__init__.py#target_version_option_callback" -> "mode.py##TargetVersion"
	"linegen.py#transform_line#_rhs" -> "linegen.py##right_hand_split"
	"trans.py#StringSplitter#do_transform" -> "rusty.py##Ok"
	"linegen.py#should_split_line" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"__init__.py#format_cell" -> "handle_ipynb_magics.py##remove_trailing_semicolon"
	"linegen.py#run_transformer" -> "trans.py##CannotTransform"
	"lines.py#Line#contains_unsplittable_type_ignore" -> "nodes.py##is_type_comment"
	"__init__.py#" -> "handle_ipynb_magics.py##remove_trailing_semicolon"
	"__init__.py#path_empty" -> "output.py##out"
	"__init__.py#" -> "output.py##err"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_import"
	"lines.py#append_leaves" -> "lines.py##Line"
	"__init__.py#_format_str_once" -> "lines.py#EmptyLineTracker#maybe_empty_lines"
	"__init__.py#format_cell" -> "__init__.py##format_str"
	"__init__.py#get_sources" -> "files.py##normalize_path_maybe_ignore"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"linegen.py#LineGenerator#visit_decorators" -> "nodes.py#Visitor#visit"
	"__init__.py#reformat_one" -> "__init__.py##WriteBack"
	"linegen.py#" -> "nodes.py##Visitor"
	"__init__.py#format_cell" -> "handle_ipynb_magics.py##unmask_cell"
	"linegen.py#run_transformer" -> "mode.py##Feature"
	"linegen.py#" -> "mode.py##Preview"
	"linegen.py#LineGenerator#visit_STRING" -> "nodes.py##is_multiline_string"
	"parsing.py#" -> "mode.py##TargetVersion"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#append"
	"linegen.py#bracket_split_build_line" -> "linegen.py##should_split_line"
	"handle_ipynb_magics.py#" -> "handle_ipynb_magics.py##Replacement"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_else_match"
	"trans.py#StringParser#parse" -> "trans.py#StringParser#_next_state"
	"linegen.py#LineGenerator#visit_match_case" -> "linegen.py##normalize_invisible_parens"
	"trans.py#StringSplitter#do_transform" -> "rusty.py##Ok"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#main" -> "report.py##Report"
	"trans.py#CustomSplitMapMixin" -> "trans.py##CustomSplit"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py##is_one_tuple"
	"__init__.py#_format_str_once" -> "mode.py##supports_feature"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#delimiter_split" -> "linegen.py##CannotSplit"
	"linegen.py#" -> "mode.py##Feature"
	"linegen.py#transform_line#_rhs" -> "mode.py##Feature"
	"__init__.py#" -> "cache.py##write_cache"
	"linegen.py#transform_line" -> "linegen.py##standalone_comment_split"
	"linegen.py#" -> "lines.py##Line"
	"__init__.py#" -> "handle_ipynb_magics.py##put_trailing_semicolon_back"
	"__init__.py#" -> "report.py##Report"
	"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" -> "handle_ipynb_magics.py##_is_ipython_magic"
	"mode.py#" -> "mode.py##Feature"
	"comments.py#" -> "comments.py##ProtoComment"
	"linegen.py#standalone_comment_split" -> "linegen.py#standalone_comment_split#append_to_line"
	"__init__.py#reformat_one" -> "__init__.py##WriteBack"
	"output.py#out" -> "output.py##_out"
	"linegen.py#right_hand_split" -> "linegen.py##right_hand_split"
	"linegen.py#left_hand_split" -> "linegen.py##bracket_split_build_line"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#append"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#append"
	"linegen.py#right_hand_split" -> "lines.py##Line"
	"handle_ipynb_magics.py#mask_cell" -> "handle_ipynb_magics.py##Replacement"
	"brackets.py#max_delimiter_priority_in_atom" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"linegen.py#normalize_invisible_parens" -> "nodes.py##is_multiline_string"
	"lines.py#" -> "nodes.py##whitespace"
	"__init__.py#" -> "cache.py##read_cache"
	"trans.py#hug_power_op" -> "trans.py#hug_power_op#is_simple_operand"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_def"
	"linegen.py#LineGenerator#visit_decorators" -> "linegen.py#LineGenerator#line"
	"linegen.py#normalize_invisible_parens" -> "nodes.py##wrap_in_parentheses"
	"brackets.py#max_delimiter_priority_in_atom" -> "brackets.py#BracketTracker#mark"
	"linegen.py#run_transformer" -> "lines.py#Line#contains_uncollapsable_type_comments"
	"__init__.py#assert_stable" -> "output.py##diff"
	"trans.py#StringTransformer#__call__" -> "trans.py##CannotTransform"
	"trans.py#StringParenWrapper#_assert_match" -> "trans.py##StringParser"
	"trans.py#StringParenWrapper#_return_match" -> "trans.py##is_valid_index_factory"
	"__init__.py#_format_str_once" -> "nodes.py#Visitor#visit"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Ok#ok"
	"linegen.py#transform_line#_rhs" -> "lines.py##Line"
	"lines.py#Line#append" -> "nodes.py##whitespace"
	"__init__.py#" -> "files.py##parse_pyproject_toml"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py##is_yield"
	"linegen.py#LineGenerator#visit_DEDENT" -> "linegen.py#LineGenerator#visit_default"
	"__init__.py#reformat_one" -> "cache.py##read_cache"
	"trans.py#StringMerger#_validate_msg" -> "strings.py##has_triple_quotes"
	"trans.py#StringParenWrapper#_dict_match" -> "trans.py#StringParser#parse"
	"linegen.py#" -> "nodes.py##is_walrus_assignment"
	"linegen.py#run_transformer" -> "lines.py##append_leaves"
	"linegen.py#" -> "nodes.py##is_lpar_token"
	"report.py#" -> "output.py##out"
	"lines.py#append_leaves" -> "nodes.py##replace_child"
	"linegen.py#transform_line" -> "linegen.py#transform_line#_rhs"
	"linegen.py#LineGenerator#visit_ENDMARKER" -> "linegen.py#LineGenerator#line"
	"lines.py#can_omit_invisible_parens" -> "lines.py##_can_omit_closing_paren"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py##is_lpar_token"
	"trans.py#StringParenStripper#do_transform" -> "lines.py#Line#clone"
	"mode.py#Mode" -> "mode.py##Preview"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py##decode_bytes"
	"__init__.py#" -> "__init__.py##WriteBack"
	"handle_ipynb_magics.py#replace_cell_magics" -> "handle_ipynb_magics.py##CellMagicFinder"
	"linegen.py#" -> "mode.py##Feature"
	"linegen.py#LineGenerator#visit_default" -> "linegen.py#LineGenerator#line"
	"linegen.py#transform_line" -> "lines.py#Line#contains_unsplittable_type_ignore"
	"__init__.py#format_ipynb_string" -> "report.py##NothingChanged"
	"__init__.py#get_sources" -> "report.py#Report#path_ignored"
	"__init__.py#format_stdin_to_stdout" -> "report.py##NothingChanged"
	"__init__.py#main" -> "output.py##out"
	"trans.py#StringTransformer#__call__" -> "trans.py#StringTransformer#do_transform"
	"brackets.py#max_delimiter_priority_in_atom" -> "brackets.py##BracketTracker"
	"handle_ipynb_magics.py#" -> "handle_ipynb_magics.py##Replacement"
	"linegen.py#bracket_split_build_line" -> "lines.py##Line"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_assert_match"
	"debug.py#DebugVisitor#show" -> "nodes.py#Visitor#visit"
	"files.py#get_gitignore" -> "output.py##err"
	"__init__.py#main" -> "output.py##err"
	"files.py#gen_python_files" -> "report.py#Report#path_ignored"
	"nodes.py#" -> "strings.py##has_triple_quotes"
	"__init__.py#main" -> "__init__.py##reformat_many"
	"trans.py#StringParenWrapper#_assert_match" -> "nodes.py##parent_type"
	"comments.py#convert_one_fmt_off_pair" -> "comments.py##generate_ignored_nodes"
	"__init__.py#" -> "mode.py##Feature"
	"__init__.py#format_cell" -> "handle_ipynb_magics.py##put_trailing_semicolon_back"
	"linegen.py#" -> "nodes.py##is_rpar_token"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_stmt"
	"comments.py#" -> "comments.py##ProtoComment"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py##is_rpar_token"
	"trans.py#StringTransformer" -> "mode.py##Feature"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"__init__.py#" -> "mode.py##Mode"
	"linegen.py#delimiter_split" -> "linegen.py##dont_increase_indentation"
	"trans.py#StringMerger#do_transform" -> "rusty.py##Ok"
	"mode.py#" -> "mode.py##Feature"
	"linegen.py#right_hand_split" -> "mode.py##Feature"
	"files.py#gen_python_files" -> "report.py#Report#path_ignored"
	"linegen.py#LineGenerator#visit_match_case" -> "nodes.py#Visitor#visit"
	"__init__.py#_format_str_once" -> "mode.py##Feature"
	"trans.py#StringParenWrapper#do_transform" -> "rusty.py##Ok"
	"trans.py#StringParenWrapper#_assign_match" -> "trans.py##is_valid_index_factory"
	"__init__.py#format_cell" -> "report.py##NothingChanged"
	"parsing.py#lib2to3_parse" -> "parsing.py##InvalidInput"
	"trans.py#" -> "trans.py##CustomSplitMapMixin"
	"__init__.py#" -> "mode.py##supports_feature"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#clone"
	"handle_ipynb_magics.py#jupyter_dependencies_are_installed" -> "output.py##out"
	"mode.py#" -> "mode.py##Feature"
	"concurrency.py#" -> "output.py##err"
	"nodes.py#Visitor#visit_default" -> "nodes.py#Visitor#visit"
	"trans.py#" -> "nodes.py##is_empty_par"
	"__init__.py#" -> "output.py##diff"
	"__init__.py#" -> "__init__.py##WriteBack"
	"linegen.py#delimiter_split" -> "nodes.py##is_vararg"
	"__init__.py#" -> "report.py#Report#done"
	"__init__.py#" -> "__init__.py##WriteBack"
	"__init__.py#" -> "handle_ipynb_magics.py##mask_cell"
	"trans.py#StringParenWrapper#_else_match" -> "nodes.py##is_empty_par"
	"lines.py#EmptyLineTracker" -> "lines.py##Line"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_maybe_normalize_string_quotes"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py##is_stub_suite"
	"linegen.py#" -> "nodes.py##is_docstring"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py##append_leaves"
	"linegen.py#LineGenerator#visit_default" -> "linegen.py#LineGenerator#line"
	"trans.py#StringParenStripper#do_match" -> "trans.py#StringParser#parse"
	"__init__.py#" -> "concurrency.py##cancel"
	"__init__.py#format_file_in_place" -> "output.py##color_diff"
	"__init__.py#main" -> "__init__.py##reformat_one"
	"__init__.py#format_file_in_place" -> "report.py##NothingChanged"
	"trans.py#StringSplitter#_normalize_f_string" -> "strings.py##assert_is_leaf_string"
	"comments.py#normalize_fmt_off" -> "comments.py##convert_one_fmt_off_pair"
	"linegen.py#LineGenerator#visit_ENDMARKER" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#CustomSplitMapMixin#add_custom_splits"
	"trans.py#StringParser#_next_state" -> "nodes.py##is_empty_par"
	"comments.py#convert_one_fmt_off_pair" -> "nodes.py##preceding_leaf"
	"__init__.py#format_cell" -> "__init__.py##validate_cell"
	"trans.py#" -> "strings.py##has_triple_quotes"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#visit_default"
	"linegen.py#delimiter_split" -> "lines.py##Line"
	"linegen.py#" -> "nodes.py##ensure_visible"
	"__init__.py#validate_metadata" -> "report.py##NothingChanged"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#line"
	"nodes.py#is_simple_decorator_expression" -> "nodes.py##is_simple_decorator_trailer"
	"__init__.py#" -> "mode.py##Mode"
	"linegen.py#" -> "brackets.py##max_delimiter_priority_in_atom"
	"__init__.py#main" -> "output.py##out"
	"handle_ipynb_magics.py#CellMagicFinder" -> "handle_ipynb_magics.py##CellMagic"
	"__init__.py#" -> "__init__.py##patched_main"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py##is_walrus_assignment"
	"__init__.py#get_sources" -> "handle_ipynb_magics.py##jupyter_dependencies_are_installed"
	"handle_ipynb_magics.py#mask_cell" -> "report.py##NothingChanged"
	"mode.py#" -> "mode.py##Feature"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_decrement_after_lambda_arguments"
	"trans.py#StringSplitter" -> "lines.py##Line"
	"mode.py#Mode" -> "mode.py##TargetVersion"
	"parsing.py#stringify_ast" -> "parsing.py##fixup_ast_constants"
	"numerics.py#normalize_numeric_literal" -> "numerics.py##format_complex_number"
	"parsing.py#stringify_ast" -> "parsing.py##stringify_ast"
	"__init__.py#get_sources" -> "files.py##gen_python_files"
	"linegen.py#LineGenerator#visit_stmt" -> "nodes.py#Visitor#visit"
	"trans.py#StringTransformer#__call__" -> "rusty.py#Ok#ok"
	"linegen.py#normalize_invisible_parens" -> "linegen.py##maybe_make_parens_invisible_in_atom"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"mode.py#" -> "mode.py##TargetVersion"
	"numerics.py#normalize_numeric_literal" -> "numerics.py##format_hex"
	"trans.py#StringMerger#_merge_string_group" -> "rusty.py##Err"
	"trans.py#StringSplitter#do_transform" -> "trans.py##insert_str_child_factory"
	"linegen.py#standalone_comment_split" -> "lines.py#Line#contains_standalone_comments"
	"linegen.py#delimiter_split" -> "lines.py##Line"
	"__init__.py#assert_equivalent" -> "output.py##dump_to_file"
	"__init__.py#reformat_code" -> "report.py#Report#failed"
	"linegen.py#LineGenerator#visit_default" -> "lines.py#Line#append"
	"trans.py#StringMerger#_merge_string_group#make_naked" -> "strings.py##assert_is_leaf_string"
	"comments.py#generate_ignored_nodes" -> "nodes.py##container_of"
	"__init__.py#" -> "concurrency.py##shutdown"
	"trans.py#StringParenStripper" -> "lines.py##Line"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py##is_arith_like"
	"__init__.py#" -> "mode.py##Mode"
	"brackets.py#BracketTracker#mark" -> "brackets.py##BracketMatchError"
	"numerics.py#normalize_numeric_literal" -> "numerics.py##format_scientific_notation"
	"__init__.py#check_stability_and_equivalence" -> "__init__.py##assert_equivalent"
	"linegen.py#" -> "nodes.py##is_yield"
	"__init__.py#format_file_contents" -> "__init__.py##check_stability_and_equivalence"
	"__init__.py#format_cell" -> "handle_ipynb_magics.py##mask_cell"
	"__init__.py#reformat_one" -> "report.py#Report#failed"
	"__init__.py#main" -> "__init__.py##validate_regex"
	"mode.py#" -> "mode.py##Feature"
	"parsing.py#stringify_ast" -> "parsing.py##stringify_ast"
	"trans.py#StringParenStripper#do_transform" -> "rusty.py##Ok"
	"linegen.py#" -> "lines.py##can_omit_invisible_parens"
	"output.py#err" -> "output.py##_err"
	"parsing.py#stringify_ast" -> "parsing.py##stringify_ast"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_increment_lambda_arguments"
	"handle_ipynb_magics.py#" -> "output.py##out"
	"trans.py#StringParenWrapper#_dict_match" -> "trans.py##StringParser"
	"nodes.py#whitespace" -> "nodes.py##is_vararg"
	"linegen.py#normalize_invisible_parens" -> "nodes.py##wrap_in_parentheses"
	"linegen.py#run_transformer" -> "mode.py##Mode"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "strings.py##has_triple_quotes"
	"files.py#gen_python_files" -> "files.py##normalize_path_maybe_ignore"
	"linegen.py#" -> "nodes.py##Visitor"
	"__init__.py#reformat_code" -> "mode.py##Mode"
	"__init__.py#main" -> "__init__.py##main"
	"lines.py#" -> "nodes.py##is_import"
	"linegen.py#right_hand_split" -> "nodes.py##ensure_visible"
	"report.py#Report#failed" -> "output.py##err"
	"linegen.py#LineGenerator#visit_power" -> "nodes.py##wrap_in_parentheses"
	"linegen.py#" -> "lines.py##Line"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#StringMerger#_validate_msg"
	"trans.py#StringParenWrapper#_return_match" -> "nodes.py##parent_type"
	"nodes.py#is_walrus_assignment" -> "nodes.py##unwrap_singleton_parenthesis"
	"linegen.py#" -> "lines.py##append_leaves"
	"lines.py#EmptyLineTracker#maybe_empty_lines" -> "lines.py#EmptyLineTracker#_maybe_empty_lines"
	"trans.py#StringMerger#_validate_msg" -> "trans.py##TErr"
	"__main__.py#" -> "__init__.py##patched_main"
	"brackets.py#BracketTracker#mark" -> "brackets.py##is_split_after_delimiter"
	"trans.py#StringParenStripper#do_transform" -> "lines.py#Line#append"
	"trans.py#StringMerger#_merge_string_group" -> "nodes.py##replace_child"
	"__init__.py#reformat_one" -> "report.py##Changed"
	"handle_ipynb_magics.py#replace_cell_magics" -> "handle_ipynb_magics.py##Replacement"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "lines.py##Line"
	"__init__.py#reformat_one" -> "report.py##Changed"
	"comments.py#generate_ignored_nodes" -> "comments.py##contains_fmt_on_at_column"
	"__init__.py#main" -> "report.py#Report#return_code"
	"linegen.py#LineGenerator#visit_power" -> "linegen.py#LineGenerator#visit_default"
	"linegen.py#" -> "comments.py##list_comments"
	"__init__.py#format_file_in_place" -> "__init__.py##decode_bytes"
	"lines.py#_can_omit_opening_paren" -> "lines.py#Line#enumerate_with_length"
	"linegen.py#LineGenerator" -> "mode.py##Mode"
	"__init__.py#reformat_one" -> "mode.py##Mode"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#StringTransformer" -> "lines.py##Line"
	"trans.py#StringParenWrapper#_dict_match" -> "nodes.py##parent_type"
	"__init__.py#main" -> "__init__.py##get_sources"
	"trans.py#StringParenWrapper#do_transform" -> "rusty.py##Ok"
	"linegen.py#LineGenerator#visit_default" -> "linegen.py#LineGenerator#line"
	"linegen.py#LineGenerator" -> "lines.py##Line"
	"linegen.py#transform_line" -> "mode.py##Mode"
	"__init__.py#get_sources" -> "files.py##get_gitignore"
	"__init__.py#get_features_used" -> "mode.py##Feature"
	"trans.py#StringSplitter#do_transform" -> "lines.py##Line"
	"mode.py#" -> "mode.py##Feature"
	"__init__.py#" -> "cache.py##filter_cached"
	"linegen.py#LineGenerator#visit_DEDENT" -> "linegen.py#LineGenerator#line"
	"linegen.py#transform_line" -> "lines.py##is_line_short_enough"
	"__init__.py#format_ipynb_string" -> "__init__.py##validate_metadata"
	"handle_ipynb_magics.py#replace_magics" -> "handle_ipynb_magics.py##get_token"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_comment"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#Line#append"
	"trans.py#StringSplitter#do_transform#maybe_append_string_operators" -> "lines.py#Line#append"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#append"
	"comments.py#list_comments" -> "comments.py##make_comment"
	"mode.py#" -> "mode.py##Feature"
	"trans.py#StringParenStripper#do_match" -> "rusty.py##Ok"
	"files.py#find_pyproject_toml" -> "files.py##find_user_pyproject_toml"
	"strings.py#normalize_string_quotes" -> "strings.py##sub_twice"
	"trans.py#StringMerger#do_transform" -> "trans.py##CannotTransform"
	"trans.py#StringParenStripper#do_transform" -> "lines.py##append_leaves"
	"linegen.py#LineGenerator#visit_STRING" -> "linegen.py#LineGenerator#visit_default"
	"__init__.py#" -> "__init__.py##WriteBack"
	"trans.py#StringMerger#do_match" -> "trans.py##is_valid_index_factory"
	"trans.py#StringSplitter#_normalize_f_string" -> "trans.py##fstring_contains_expr"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py##is_valid_index_factory"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_class"
	"linegen.py#LineGenerator#visit_SEMI" -> "linegen.py#LineGenerator#line"
}
