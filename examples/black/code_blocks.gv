digraph G {
	graph [rankdir=LR]
	{
		graph [label="" rankdir=LR]
		subgraph "cluster_trans.py" {
			graph [label="trans.py" rankdir=LR]
			"trans.py" [label="trans.py"]
			subgraph "cluster_trans.py#StringParser" {
				graph [label="trans.py#StringParser" rankdir=LR]
				"trans.py#StringParser" [label="trans.py#StringParser"]
				"trans.py#StringParser#__init__" [label="trans.py#StringParser#__init__"]
				"trans.py#StringParser#_next_state" [label="trans.py#StringParser#_next_state"]
				"trans.py#StringParser#parse" [label="trans.py#StringParser#parse"]
			}
			subgraph "cluster_trans.py#hug_power_op" {
				graph [label="trans.py#hug_power_op" rankdir=LR]
				"trans.py#hug_power_op" [label="trans.py#hug_power_op"]
				"trans.py#hug_power_op#is_simple_lookup" [label="trans.py#hug_power_op#is_simple_lookup"]
				"trans.py#hug_power_op#is_simple_operand" [label="trans.py#hug_power_op#is_simple_operand"]
			}
			subgraph "cluster_trans.py#StringMerger" {
				graph [label="trans.py#StringMerger" rankdir=LR]
				"trans.py#StringMerger" [label="trans.py#StringMerger"]
				"trans.py#StringMerger#_validate_msg" [label="trans.py#StringMerger#_validate_msg"]
				"trans.py#StringMerger#_remove_backslash_line_continuation_chars" [label="trans.py#StringMerger#_remove_backslash_line_continuation_chars"]
				"trans.py#StringMerger#do_match" [label="trans.py#StringMerger#do_match"]
				subgraph "cluster_trans.py#StringMerger#_merge_string_group" {
					graph [label="trans.py#StringMerger#_merge_string_group" rankdir=LR]
					"trans.py#StringMerger#_merge_string_group" [label="trans.py#StringMerger#_merge_string_group"]
					"trans.py#StringMerger#_merge_string_group#make_naked" [label="trans.py#StringMerger#_merge_string_group#make_naked"]
				}
				"trans.py#StringMerger#do_transform" [label="trans.py#StringMerger#do_transform"]
			}
			subgraph "cluster_trans.py#CustomSplitMapMixin" {
				graph [label="trans.py#CustomSplitMapMixin" rankdir=LR]
				"trans.py#CustomSplitMapMixin" [label="trans.py#CustomSplitMapMixin"]
				"trans.py#CustomSplitMapMixin#has_custom_splits" [label="trans.py#CustomSplitMapMixin#has_custom_splits"]
				"trans.py#CustomSplitMapMixin#_get_key" [label="trans.py#CustomSplitMapMixin#_get_key"]
				"trans.py#CustomSplitMapMixin#add_custom_splits" [label="trans.py#CustomSplitMapMixin#add_custom_splits"]
				"trans.py#CustomSplitMapMixin#pop_custom_splits" [label="trans.py#CustomSplitMapMixin#pop_custom_splits"]
			}
			subgraph "cluster_trans.py#insert_str_child_factory" {
				graph [label="trans.py#insert_str_child_factory" rankdir=LR]
				"trans.py#insert_str_child_factory" [label="trans.py#insert_str_child_factory"]
				"trans.py#insert_str_child_factory#insert_str_child" [label="trans.py#insert_str_child_factory#insert_str_child"]
			}
			"trans.py#fstring_contains_expr" [label="trans.py#fstring_contains_expr"]
			subgraph "cluster_trans.py#StringSplitter" {
				graph [label="trans.py#StringSplitter" rankdir=LR]
				"trans.py#StringSplitter" [label="trans.py#StringSplitter"]
				"trans.py#StringSplitter#_normalize_f_string" [label="trans.py#StringSplitter#_normalize_f_string"]
				subgraph "cluster_trans.py#StringSplitter#do_transform" {
					graph [label="trans.py#StringSplitter#do_transform" rankdir=LR]
					"trans.py#StringSplitter#do_transform" [label="trans.py#StringSplitter#do_transform"]
					"trans.py#StringSplitter#do_transform#maybe_append_string_operators" [label="trans.py#StringSplitter#do_transform#maybe_append_string_operators"]
					"trans.py#StringSplitter#do_transform#more_splits_should_be_made" [label="trans.py#StringSplitter#do_transform#more_splits_should_be_made"]
					"trans.py#StringSplitter#do_transform#max_last_string" [label="trans.py#StringSplitter#do_transform#max_last_string"]
				}
				"trans.py#StringSplitter#_iter_fexpr_slices" [label="trans.py#StringSplitter#_iter_fexpr_slices"]
				subgraph "cluster_trans.py#StringSplitter#_get_break_idx" {
					graph [label="trans.py#StringSplitter#_get_break_idx" rankdir=LR]
					"trans.py#StringSplitter#_get_break_idx" [label="trans.py#StringSplitter#_get_break_idx"]
					"trans.py#StringSplitter#_get_break_idx#breaks_unsplittable_expression" [label="trans.py#StringSplitter#_get_break_idx#breaks_unsplittable_expression"]
					"trans.py#StringSplitter#_get_break_idx#passes_all_checks" [label="trans.py#StringSplitter#_get_break_idx#passes_all_checks"]
				}
				"trans.py#StringSplitter#_get_illegal_split_indices" [label="trans.py#StringSplitter#_get_illegal_split_indices"]
				"trans.py#StringSplitter#_iter_nameescape_slices" [label="trans.py#StringSplitter#_iter_nameescape_slices"]
				"trans.py#StringSplitter#do_splitter_match" [label="trans.py#StringSplitter#do_splitter_match"]
				"trans.py#StringSplitter#_get_string_operator_leaves" [label="trans.py#StringSplitter#_get_string_operator_leaves"]
				"trans.py#StringSplitter#_maybe_normalize_string_quotes" [label="trans.py#StringSplitter#_maybe_normalize_string_quotes"]
			}
			subgraph "cluster_trans.py#BaseStringSplitter" {
				graph [label="trans.py#BaseStringSplitter" rankdir=LR]
				"trans.py#BaseStringSplitter" [label="trans.py#BaseStringSplitter"]
				"trans.py#BaseStringSplitter#do_match" [label="trans.py#BaseStringSplitter#do_match"]
				"trans.py#BaseStringSplitter#_validate" [label="trans.py#BaseStringSplitter#_validate"]
				"trans.py#BaseStringSplitter#do_splitter_match" [label="trans.py#BaseStringSplitter#do_splitter_match"]
				"trans.py#BaseStringSplitter#_get_max_string_length" [label="trans.py#BaseStringSplitter#_get_max_string_length"]
			}
			subgraph "cluster_trans.py#StringParenStripper" {
				graph [label="trans.py#StringParenStripper" rankdir=LR]
				"trans.py#StringParenStripper" [label="trans.py#StringParenStripper"]
				"trans.py#StringParenStripper#do_transform" [label="trans.py#StringParenStripper#do_transform"]
				"trans.py#StringParenStripper#do_match" [label="trans.py#StringParenStripper#do_match"]
			}
			subgraph "cluster_trans.py#StringParenWrapper" {
				graph [label="trans.py#StringParenWrapper" rankdir=LR]
				"trans.py#StringParenWrapper" [label="trans.py#StringParenWrapper"]
				"trans.py#StringParenWrapper#do_transform" [label="trans.py#StringParenWrapper#do_transform"]
				"trans.py#StringParenWrapper#_dict_match" [label="trans.py#StringParenWrapper#_dict_match"]
				"trans.py#StringParenWrapper#_return_match" [label="trans.py#StringParenWrapper#_return_match"]
				"trans.py#StringParenWrapper#_assign_match" [label="trans.py#StringParenWrapper#_assign_match"]
				"trans.py#StringParenWrapper#do_splitter_match" [label="trans.py#StringParenWrapper#do_splitter_match"]
				"trans.py#StringParenWrapper#_else_match" [label="trans.py#StringParenWrapper#_else_match"]
				"trans.py#StringParenWrapper#_assert_match" [label="trans.py#StringParenWrapper#_assert_match"]
			}
			subgraph "cluster_trans.py#StringTransformer" {
				graph [label="trans.py#StringTransformer" rankdir=LR]
				"trans.py#StringTransformer" [label="trans.py#StringTransformer"]
				"trans.py#StringTransformer#__init__" [label="trans.py#StringTransformer#__init__"]
				"trans.py#StringTransformer#__call__" [label="trans.py#StringTransformer#__call__"]
				"trans.py#StringTransformer#do_match" [label="trans.py#StringTransformer#do_match"]
				"trans.py#StringTransformer#do_transform" [label="trans.py#StringTransformer#do_transform"]
			}
			"trans.py#iter_fexpr_spans" [label="trans.py#iter_fexpr_spans"]
			subgraph "cluster_trans.py#is_valid_index_factory" {
				graph [label="trans.py#is_valid_index_factory" rankdir=LR]
				"trans.py#is_valid_index_factory" [label="trans.py#is_valid_index_factory"]
				"trans.py#is_valid_index_factory#is_valid_index" [label="trans.py#is_valid_index_factory#is_valid_index"]
			}
			"trans.py#CannotTransform" [label="trans.py#CannotTransform"]
			"trans.py#TErr" [label="trans.py#TErr"]
			"trans.py#CustomSplit" [label="trans.py#CustomSplit"]
		}
		subgraph "cluster_lines.py" {
			graph [label="lines.py" rankdir=LR]
			"lines.py" [label="lines.py"]
			subgraph "cluster_lines.py#Line" {
				graph [label="lines.py#Line" rankdir=LR]
				"lines.py#Line" [label="lines.py#Line"]
				"lines.py#Line#__str__" [label="lines.py#Line#__str__"]
				"lines.py#Line#append" [label="lines.py#Line#append"]
				"lines.py#Line#is_def" [label="lines.py#Line#is_def"]
				"lines.py#Line#__bool__" [label="lines.py#Line#__bool__"]
				"lines.py#Line#is_decorator" [label="lines.py#Line#is_decorator"]
				"lines.py#Line#is_comment" [label="lines.py#Line#is_comment"]
				"lines.py#Line#is_class_paren_empty" [label="lines.py#Line#is_class_paren_empty"]
				"lines.py#Line#append_safe" [label="lines.py#Line#append_safe"]
				"lines.py#Line#enumerate_with_length" [label="lines.py#Line#enumerate_with_length"]
				"lines.py#Line#is_complex_subscript" [label="lines.py#Line#is_complex_subscript"]
				"lines.py#Line#comments_after" [label="lines.py#Line#comments_after"]
				"lines.py#Line#contains_uncollapsable_type_comments" [label="lines.py#Line#contains_uncollapsable_type_comments"]
				"lines.py#Line#remove_trailing_comma" [label="lines.py#Line#remove_trailing_comma"]
				"lines.py#Line#is_triple_quoted_string" [label="lines.py#Line#is_triple_quoted_string"]
				"lines.py#Line#contains_multiline_strings" [label="lines.py#Line#contains_multiline_strings"]
				"lines.py#Line#contains_unsplittable_type_ignore" [label="lines.py#Line#contains_unsplittable_type_ignore"]
				"lines.py#Line#is_stub_class" [label="lines.py#Line#is_stub_class"]
				"lines.py#Line#append_comment" [label="lines.py#Line#append_comment"]
				"lines.py#Line#clone" [label="lines.py#Line#clone"]
				"lines.py#Line#is_import" [label="lines.py#Line#is_import"]
				"lines.py#Line#has_magic_trailing_comma" [label="lines.py#Line#has_magic_trailing_comma"]
				"lines.py#Line#contains_standalone_comments" [label="lines.py#Line#contains_standalone_comments"]
				"lines.py#Line#is_class" [label="lines.py#Line#is_class"]
			}
			"lines.py#append_leaves" [label="lines.py#append_leaves"]
			subgraph "cluster_lines.py#EmptyLineTracker" {
				graph [label="lines.py#EmptyLineTracker" rankdir=LR]
				"lines.py#EmptyLineTracker" [label="lines.py#EmptyLineTracker"]
				"lines.py#EmptyLineTracker#maybe_empty_lines" [label="lines.py#EmptyLineTracker#maybe_empty_lines"]
				"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" [label="lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"]
				"lines.py#EmptyLineTracker#_maybe_empty_lines" [label="lines.py#EmptyLineTracker#_maybe_empty_lines"]
			}
			"lines.py#is_line_short_enough" [label="lines.py#is_line_short_enough"]
			"lines.py#can_omit_invisible_parens" [label="lines.py#can_omit_invisible_parens"]
			"lines.py#_can_omit_opening_paren" [label="lines.py#_can_omit_opening_paren"]
			"lines.py#_can_omit_closing_paren" [label="lines.py#_can_omit_closing_paren"]
			"lines.py#line_to_string" [label="lines.py#line_to_string"]
			"lines.py#can_be_split" [label="lines.py#can_be_split"]
			"lines.py#enumerate_reversed" [label="lines.py#enumerate_reversed"]
		}
		subgraph "cluster___init__.py" {
			graph [label="__init__.py" rankdir=LR]
			"__init__.py" [label="__init__.py"]
			"__init__.py#reformat_many" [label="__init__.py#reformat_many"]
			"__init__.py#read_pyproject_toml" [label="__init__.py#read_pyproject_toml"]
			"__init__.py#main" [label="__init__.py#main"]
			"__init__.py#decode_bytes" [label="__init__.py#decode_bytes"]
			"__init__.py#format_cell" [label="__init__.py#format_cell"]
			"__init__.py#check_stability_and_equivalence" [label="__init__.py#check_stability_and_equivalence"]
			"__init__.py#format_file_contents" [label="__init__.py#format_file_contents"]
			"__init__.py#reformat_code" [label="__init__.py#reformat_code"]
			"__init__.py#assert_stable" [label="__init__.py#assert_stable"]
			subgraph "cluster___init__.py#get_future_imports" {
				graph [label="__init__.py#get_future_imports" rankdir=LR]
				"__init__.py#get_future_imports" [label="__init__.py#get_future_imports"]
				"__init__.py#get_future_imports#get_imports_from_children" [label="__init__.py#get_future_imports#get_imports_from_children"]
			}
			"__init__.py#assert_equivalent" [label="__init__.py#assert_equivalent"]
			"__init__.py#format_ipynb_string" [label="__init__.py#format_ipynb_string"]
			"__init__.py#patch_click" [label="__init__.py#patch_click"]
			"__init__.py#reformat_one" [label="__init__.py#reformat_one"]
			"__init__.py#format_str" [label="__init__.py#format_str"]
			"__init__.py#validate_metadata" [label="__init__.py#validate_metadata"]
			"__init__.py#target_version_option_callback" [label="__init__.py#target_version_option_callback"]
			"__init__.py#validate_cell" [label="__init__.py#validate_cell"]
			"__init__.py#format_stdin_to_stdout" [label="__init__.py#format_stdin_to_stdout"]
			"__init__.py#format_file_in_place" [label="__init__.py#format_file_in_place"]
			"__init__.py#patched_main" [label="__init__.py#patched_main"]
			"__init__.py#path_empty" [label="__init__.py#path_empty"]
			"__init__.py#nullcontext" [label="__init__.py#nullcontext"]
			"__init__.py#get_features_used" [label="__init__.py#get_features_used"]
			"__init__.py#get_sources" [label="__init__.py#get_sources"]
			subgraph "cluster___init__.py#WriteBack" {
				graph [label="__init__.py#WriteBack" rankdir=LR]
				"__init__.py#WriteBack" [label="__init__.py#WriteBack"]
				"__init__.py#WriteBack#from_configuration" [label="__init__.py#WriteBack#from_configuration"]
			}
			"__init__.py#validate_regex" [label="__init__.py#validate_regex"]
			"__init__.py#re_compile_maybe_verbose" [label="__init__.py#re_compile_maybe_verbose"]
			"__init__.py#_format_str_once" [label="__init__.py#_format_str_once"]
			"__init__.py#detect_target_versions" [label="__init__.py#detect_target_versions"]
		}
		subgraph "cluster_brackets.py" {
			graph [label="brackets.py" rankdir=LR]
			"brackets.py" [label="brackets.py"]
			subgraph "cluster_brackets.py#BracketTracker" {
				graph [label="brackets.py#BracketTracker" rankdir=LR]
				"brackets.py#BracketTracker" [label="brackets.py#BracketTracker"]
				"brackets.py#BracketTracker#maybe_increment_lambda_arguments" [label="brackets.py#BracketTracker#maybe_increment_lambda_arguments"]
				"brackets.py#BracketTracker#any_open_brackets" [label="brackets.py#BracketTracker#any_open_brackets"]
				"brackets.py#BracketTracker#max_delimiter_priority" [label="brackets.py#BracketTracker#max_delimiter_priority"]
				"brackets.py#BracketTracker#maybe_decrement_after_lambda_arguments" [label="brackets.py#BracketTracker#maybe_decrement_after_lambda_arguments"]
				"brackets.py#BracketTracker#maybe_decrement_after_for_loop_variable" [label="brackets.py#BracketTracker#maybe_decrement_after_for_loop_variable"]
				"brackets.py#BracketTracker#maybe_increment_for_loop_variable" [label="brackets.py#BracketTracker#maybe_increment_for_loop_variable"]
				"brackets.py#BracketTracker#delimiter_count_with_priority" [label="brackets.py#BracketTracker#delimiter_count_with_priority"]
				"brackets.py#BracketTracker#mark" [label="brackets.py#BracketTracker#mark"]
				"brackets.py#BracketTracker#get_open_lsqb" [label="brackets.py#BracketTracker#get_open_lsqb"]
			}
			"brackets.py#is_split_after_delimiter" [label="brackets.py#is_split_after_delimiter"]
			"brackets.py#BracketMatchError" [label="brackets.py#BracketMatchError"]
			"brackets.py#max_delimiter_priority_in_atom" [label="brackets.py#max_delimiter_priority_in_atom"]
			"brackets.py#is_split_before_delimiter" [label="brackets.py#is_split_before_delimiter"]
		}
		subgraph "cluster_handle_ipynb_magics.py" {
			graph [label="handle_ipynb_magics.py" rankdir=LR]
			"handle_ipynb_magics.py" [label="handle_ipynb_magics.py"]
			"handle_ipynb_magics.py#Replacement" [label="handle_ipynb_magics.py#Replacement"]
			"handle_ipynb_magics.py#replace_cell_magics" [label="handle_ipynb_magics.py#replace_cell_magics"]
			subgraph "cluster_handle_ipynb_magics.py#CellMagicFinder" {
				graph [label="handle_ipynb_magics.py#CellMagicFinder" rankdir=LR]
				"handle_ipynb_magics.py#CellMagicFinder" [label="handle_ipynb_magics.py#CellMagicFinder"]
				"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" [label="handle_ipynb_magics.py#CellMagicFinder#visit_Expr"]
				"handle_ipynb_magics.py#CellMagicFinder#__init__" [label="handle_ipynb_magics.py#CellMagicFinder#__init__"]
			}
			"handle_ipynb_magics.py#replace_magics" [label="handle_ipynb_magics.py#replace_magics"]
			"handle_ipynb_magics.py#jupyter_dependencies_are_installed" [label="handle_ipynb_magics.py#jupyter_dependencies_are_installed"]
			"handle_ipynb_magics.py#mask_cell" [label="handle_ipynb_magics.py#mask_cell"]
			"handle_ipynb_magics.py#_is_ipython_magic" [label="handle_ipynb_magics.py#_is_ipython_magic"]
			subgraph "cluster_handle_ipynb_magics.py#MagicFinder" {
				graph [label="handle_ipynb_magics.py#MagicFinder" rankdir=LR]
				"handle_ipynb_magics.py#MagicFinder" [label="handle_ipynb_magics.py#MagicFinder"]
				"handle_ipynb_magics.py#MagicFinder#visit_Expr" [label="handle_ipynb_magics.py#MagicFinder#visit_Expr"]
				"handle_ipynb_magics.py#MagicFinder#visit_Assign" [label="handle_ipynb_magics.py#MagicFinder#visit_Assign"]
				"handle_ipynb_magics.py#MagicFinder#__init__" [label="handle_ipynb_magics.py#MagicFinder#__init__"]
			}
			"handle_ipynb_magics.py#get_token" [label="handle_ipynb_magics.py#get_token"]
			subgraph "cluster_handle_ipynb_magics.py#CellMagic" {
				graph [label="handle_ipynb_magics.py#CellMagic" rankdir=LR]
				"handle_ipynb_magics.py#CellMagic" [label="handle_ipynb_magics.py#CellMagic"]
				"handle_ipynb_magics.py#CellMagic#header" [label="handle_ipynb_magics.py#CellMagic#header"]
			}
			"handle_ipynb_magics.py#OffsetAndMagic" [label="handle_ipynb_magics.py#OffsetAndMagic"]
			"handle_ipynb_magics.py#put_trailing_semicolon_back" [label="handle_ipynb_magics.py#put_trailing_semicolon_back"]
			"handle_ipynb_magics.py#_get_str_args" [label="handle_ipynb_magics.py#_get_str_args"]
			"handle_ipynb_magics.py#remove_trailing_semicolon" [label="handle_ipynb_magics.py#remove_trailing_semicolon"]
			"handle_ipynb_magics.py#unmask_cell" [label="handle_ipynb_magics.py#unmask_cell"]
		}
		subgraph "cluster_comments.py" {
			graph [label="comments.py" rankdir=LR]
			"comments.py" [label="comments.py"]
			"comments.py#list_comments" [label="comments.py#list_comments"]
			"comments.py#generate_comments" [label="comments.py#generate_comments"]
			"comments.py#generate_ignored_nodes" [label="comments.py#generate_ignored_nodes"]
			"comments.py#contains_pragma_comment" [label="comments.py#contains_pragma_comment"]
			"comments.py#make_comment" [label="comments.py#make_comment"]
			"comments.py#is_fmt_on" [label="comments.py#is_fmt_on"]
			"comments.py#ProtoComment" [label="comments.py#ProtoComment"]
			"comments.py#normalize_fmt_off" [label="comments.py#normalize_fmt_off"]
			"comments.py#convert_one_fmt_off_pair" [label="comments.py#convert_one_fmt_off_pair"]
			"comments.py#contains_fmt_on_at_column" [label="comments.py#contains_fmt_on_at_column"]
		}
		subgraph "cluster_linegen.py" {
			graph [label="linegen.py" rankdir=LR]
			"linegen.py" [label="linegen.py"]
			subgraph "cluster_linegen.py#LineGenerator" {
				graph [label="linegen.py#LineGenerator" rankdir=LR]
				"linegen.py#LineGenerator" [label="linegen.py#LineGenerator"]
				"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" [label="linegen.py#LineGenerator#visit_STANDALONE_COMMENT"]
				"linegen.py#LineGenerator#visit_STRING" [label="linegen.py#LineGenerator#visit_STRING"]
				"linegen.py#LineGenerator#visit_INDENT" [label="linegen.py#LineGenerator#visit_INDENT"]
				"linegen.py#LineGenerator#visit_suite" [label="linegen.py#LineGenerator#visit_suite"]
				"linegen.py#LineGenerator#__init__" [label="linegen.py#LineGenerator#__init__"]
				"linegen.py#LineGenerator#visit_factor" [label="linegen.py#LineGenerator#visit_factor"]
				"linegen.py#LineGenerator#visit_default" [label="linegen.py#LineGenerator#visit_default"]
				"linegen.py#LineGenerator#visit_ENDMARKER" [label="linegen.py#LineGenerator#visit_ENDMARKER"]
				"linegen.py#LineGenerator#__post_init__" [label="linegen.py#LineGenerator#__post_init__"]
				"linegen.py#LineGenerator#line" [label="linegen.py#LineGenerator#line"]
				"linegen.py#LineGenerator#visit_DEDENT" [label="linegen.py#LineGenerator#visit_DEDENT"]
				"linegen.py#LineGenerator#visit_SEMI" [label="linegen.py#LineGenerator#visit_SEMI"]
				"linegen.py#LineGenerator#visit_async_stmt" [label="linegen.py#LineGenerator#visit_async_stmt"]
				"linegen.py#LineGenerator#visit_simple_stmt" [label="linegen.py#LineGenerator#visit_simple_stmt"]
				"linegen.py#LineGenerator#visit_power" [label="linegen.py#LineGenerator#visit_power"]
				"linegen.py#LineGenerator#visit_match_case" [label="linegen.py#LineGenerator#visit_match_case"]
				"linegen.py#LineGenerator#visit_decorators" [label="linegen.py#LineGenerator#visit_decorators"]
				"linegen.py#LineGenerator#visit_stmt" [label="linegen.py#LineGenerator#visit_stmt"]
			}
			subgraph "cluster_linegen.py#dont_increase_indentation" {
				graph [label="linegen.py#dont_increase_indentation" rankdir=LR]
				"linegen.py#dont_increase_indentation" [label="linegen.py#dont_increase_indentation"]
				"linegen.py#dont_increase_indentation#split_wrapper" [label="linegen.py#dont_increase_indentation#split_wrapper"]
			}
			"linegen.py#should_split_line" [label="linegen.py#should_split_line"]
			subgraph "cluster_linegen.py#delimiter_split" {
				graph [label="linegen.py#delimiter_split" rankdir=LR]
				"linegen.py#delimiter_split" [label="linegen.py#delimiter_split"]
				"linegen.py#delimiter_split#append_to_line" [label="linegen.py#delimiter_split#append_to_line"]
			}
			subgraph "cluster_linegen.py#transform_line" {
				graph [label="linegen.py#transform_line" rankdir=LR]
				"linegen.py#transform_line" [label="linegen.py#transform_line"]
				"linegen.py#transform_line#_rhs" [label="linegen.py#transform_line#_rhs"]
			}
			"linegen.py#normalize_invisible_parens" [label="linegen.py#normalize_invisible_parens"]
			"linegen.py#left_hand_split" [label="linegen.py#left_hand_split"]
			"linegen.py#bracket_split_build_line" [label="linegen.py#bracket_split_build_line"]
			subgraph "cluster_linegen.py#standalone_comment_split" {
				graph [label="linegen.py#standalone_comment_split" rankdir=LR]
				"linegen.py#standalone_comment_split" [label="linegen.py#standalone_comment_split"]
				"linegen.py#standalone_comment_split#append_to_line" [label="linegen.py#standalone_comment_split#append_to_line"]
			}
			"linegen.py#maybe_make_parens_invisible_in_atom" [label="linegen.py#maybe_make_parens_invisible_in_atom"]
			"linegen.py#bracket_split_succeeded_or_raise" [label="linegen.py#bracket_split_succeeded_or_raise"]
			"linegen.py#generate_trailers_to_omit" [label="linegen.py#generate_trailers_to_omit"]
			"linegen.py#normalize_prefix" [label="linegen.py#normalize_prefix"]
			"linegen.py#run_transformer" [label="linegen.py#run_transformer"]
			"linegen.py#right_hand_split" [label="linegen.py#right_hand_split"]
			"linegen.py#CannotSplit" [label="linegen.py#CannotSplit"]
		}
		subgraph "cluster_output.py" {
			graph [label="output.py" rankdir=LR]
			"output.py" [label="output.py"]
			"output.py#dump_to_file" [label="output.py#dump_to_file"]
			"output.py#ipynb_diff" [label="output.py#ipynb_diff"]
			"output.py#diff" [label="output.py#diff"]
			"output.py#out" [label="output.py#out"]
			"output.py#err" [label="output.py#err"]
			"output.py#_out" [label="output.py#_out"]
			"output.py#_err" [label="output.py#_err"]
			"output.py#color_diff" [label="output.py#color_diff"]
		}
		subgraph "cluster_report.py" {
			graph [label="report.py" rankdir=LR]
			"report.py" [label="report.py"]
			subgraph "cluster_report.py#Report" {
				graph [label="report.py#Report" rankdir=LR]
				"report.py#Report" [label="report.py#Report"]
				"report.py#Report#path_ignored" [label="report.py#Report#path_ignored"]
				"report.py#Report#return_code" [label="report.py#Report#return_code"]
				"report.py#Report#done" [label="report.py#Report#done"]
				"report.py#Report#__str__" [label="report.py#Report#__str__"]
				"report.py#Report#failed" [label="report.py#Report#failed"]
			}
			"report.py#Changed" [label="report.py#Changed"]
			"report.py#NothingChanged" [label="report.py#NothingChanged"]
		}
		subgraph "cluster_nodes.py" {
			graph [label="nodes.py" rankdir=LR]
			"nodes.py" [label="nodes.py"]
			"nodes.py#parent_type" [label="nodes.py#parent_type"]
			"nodes.py#unwrap_singleton_parenthesis" [label="nodes.py#unwrap_singleton_parenthesis"]
			"nodes.py#is_stub_suite" [label="nodes.py#is_stub_suite"]
			"nodes.py#is_one_tuple" [label="nodes.py#is_one_tuple"]
			"nodes.py#is_lpar_token" [label="nodes.py#is_lpar_token"]
			"nodes.py#is_one_tuple_between" [label="nodes.py#is_one_tuple_between"]
			"nodes.py#first_leaf_column" [label="nodes.py#first_leaf_column"]
			"nodes.py#preceding_leaf" [label="nodes.py#preceding_leaf"]
			"nodes.py#is_empty_rpar" [label="nodes.py#is_empty_rpar"]
			"nodes.py#is_stub_body" [label="nodes.py#is_stub_body"]
			"nodes.py#is_multiline_string" [label="nodes.py#is_multiline_string"]
			"nodes.py#is_type_comment" [label="nodes.py#is_type_comment"]
			"nodes.py#is_arith_like" [label="nodes.py#is_arith_like"]
			"nodes.py#is_yield" [label="nodes.py#is_yield"]
			"nodes.py#is_vararg" [label="nodes.py#is_vararg"]
			"nodes.py#is_docstring" [label="nodes.py#is_docstring"]
			"nodes.py#replace_child" [label="nodes.py#replace_child"]
			"nodes.py#is_atom_with_invisible_parens" [label="nodes.py#is_atom_with_invisible_parens"]
			"nodes.py#is_empty_tuple" [label="nodes.py#is_empty_tuple"]
			subgraph "cluster_nodes.py#Visitor" {
				graph [label="nodes.py#Visitor" rankdir=LR]
				"nodes.py#Visitor" [label="nodes.py#Visitor"]
				"nodes.py#Visitor#visit_default" [label="nodes.py#Visitor#visit_default"]
				"nodes.py#Visitor#visit" [label="nodes.py#Visitor#visit"]
			}
			"nodes.py#child_towards" [label="nodes.py#child_towards"]
			"nodes.py#prev_siblings_are" [label="nodes.py#prev_siblings_are"]
			"nodes.py#whitespace" [label="nodes.py#whitespace"]
			"nodes.py#is_name_token" [label="nodes.py#is_name_token"]
			"nodes.py#container_of" [label="nodes.py#container_of"]
			"nodes.py#is_rpar_token" [label="nodes.py#is_rpar_token"]
			"nodes.py#is_empty_lpar" [label="nodes.py#is_empty_lpar"]
			"nodes.py#is_empty_par" [label="nodes.py#is_empty_par"]
			"nodes.py#is_simple_decorator_expression" [label="nodes.py#is_simple_decorator_expression"]
			"nodes.py#is_string_token" [label="nodes.py#is_string_token"]
			"nodes.py#is_walrus_assignment" [label="nodes.py#is_walrus_assignment"]
			"nodes.py#wrap_in_parentheses" [label="nodes.py#wrap_in_parentheses"]
			"nodes.py#ensure_visible" [label="nodes.py#ensure_visible"]
			"nodes.py#is_import" [label="nodes.py#is_import"]
			"nodes.py#is_simple_decorator_trailer" [label="nodes.py#is_simple_decorator_trailer"]
		}
		subgraph "cluster_cache.py" {
			graph [label="cache.py" rankdir=LR]
			"cache.py" [label="cache.py"]
			"cache.py#get_cache_info" [label="cache.py#get_cache_info"]
			"cache.py#get_cache_dir" [label="cache.py#get_cache_dir"]
			"cache.py#get_cache_file" [label="cache.py#get_cache_file"]
			"cache.py#filter_cached" [label="cache.py#filter_cached"]
			"cache.py#write_cache" [label="cache.py#write_cache"]
			"cache.py#read_cache" [label="cache.py#read_cache"]
		}
		subgraph "cluster_parsing.py" {
			graph [label="parsing.py" rankdir=LR]
			"parsing.py" [label="parsing.py"]
			"parsing.py#lib2to3_unparse" [label="parsing.py#lib2to3_unparse"]
			"parsing.py#parse_single_version" [label="parsing.py#parse_single_version"]
			"parsing.py#stringify_ast" [label="parsing.py#stringify_ast"]
			"parsing.py#parse_ast" [label="parsing.py#parse_ast"]
			"parsing.py#matches_grammar" [label="parsing.py#matches_grammar"]
			"parsing.py#InvalidInput" [label="parsing.py#InvalidInput"]
			"parsing.py#_normalize" [label="parsing.py#_normalize"]
			"parsing.py#get_grammars" [label="parsing.py#get_grammars"]
			"parsing.py#fixup_ast_constants" [label="parsing.py#fixup_ast_constants"]
			"parsing.py#lib2to3_parse" [label="parsing.py#lib2to3_parse"]
		}
		subgraph "cluster_rusty.py" {
			graph [label="rusty.py" rankdir=LR]
			"rusty.py" [label="rusty.py"]
			subgraph "cluster_rusty.py#Err" {
				graph [label="rusty.py#Err" rankdir=LR]
				"rusty.py#Err" [label="rusty.py#Err"]
				"rusty.py#Err#err" [label="rusty.py#Err#err"]
				"rusty.py#Err#__init__" [label="rusty.py#Err#__init__"]
			}
			subgraph "cluster_rusty.py#Ok" {
				graph [label="rusty.py#Ok" rankdir=LR]
				"rusty.py#Ok" [label="rusty.py#Ok"]
				"rusty.py#Ok#ok" [label="rusty.py#Ok#ok"]
				"rusty.py#Ok#__init__" [label="rusty.py#Ok#__init__"]
			}
		}
		subgraph "cluster_debug.py" {
			graph [label="debug.py" rankdir=LR]
			"debug.py" [label="debug.py"]
			subgraph "cluster_debug.py#DebugVisitor" {
				graph [label="debug.py#DebugVisitor" rankdir=LR]
				"debug.py#DebugVisitor" [label="debug.py#DebugVisitor"]
				"debug.py#DebugVisitor#show" [label="debug.py#DebugVisitor#show"]
				"debug.py#DebugVisitor#visit_default" [label="debug.py#DebugVisitor#visit_default"]
			}
		}
		subgraph "cluster_files.py" {
			graph [label="files.py" rankdir=LR]
			"files.py" [label="files.py"]
			"files.py#normalize_path_maybe_ignore" [label="files.py#normalize_path_maybe_ignore"]
			"files.py#path_is_excluded" [label="files.py#path_is_excluded"]
			"files.py#find_pyproject_toml" [label="files.py#find_pyproject_toml"]
			"files.py#get_gitignore" [label="files.py#get_gitignore"]
			"files.py#find_user_pyproject_toml" [label="files.py#find_user_pyproject_toml"]
			"files.py#find_project_root" [label="files.py#find_project_root"]
			"files.py#parse_pyproject_toml" [label="files.py#parse_pyproject_toml"]
			"files.py#wrap_stream_for_windows" [label="files.py#wrap_stream_for_windows"]
			"files.py#gen_python_files" [label="files.py#gen_python_files"]
		}
		subgraph "cluster_mode.py" {
			graph [label="mode.py" rankdir=LR]
			"mode.py" [label="mode.py"]
			subgraph "cluster_mode.py#Mode" {
				graph [label="mode.py#Mode" rankdir=LR]
				"mode.py#Mode" [label="mode.py#Mode"]
				"mode.py#Mode#__contains__" [label="mode.py#Mode#__contains__"]
				"mode.py#Mode#__post_init__" [label="mode.py#Mode#__post_init__"]
				"mode.py#Mode#get_cache_key" [label="mode.py#Mode#get_cache_key"]
			}
			"mode.py#Feature" [label="mode.py#Feature"]
			"mode.py#Preview" [label="mode.py#Preview"]
			"mode.py#supports_feature" [label="mode.py#supports_feature"]
			"mode.py#Deprecated" [label="mode.py#Deprecated"]
			"mode.py#TargetVersion" [label="mode.py#TargetVersion"]
		}
		subgraph "cluster_strings.py" {
			graph [label="strings.py" rankdir=LR]
			"strings.py" [label="strings.py"]
			"strings.py#_cached_compile" [label="strings.py#_cached_compile"]
			"strings.py#normalize_string_prefix" [label="strings.py#normalize_string_prefix"]
			"strings.py#assert_is_leaf_string" [label="strings.py#assert_is_leaf_string"]
			"strings.py#fix_docstring" [label="strings.py#fix_docstring"]
			"strings.py#lines_with_leading_tabs_expanded" [label="strings.py#lines_with_leading_tabs_expanded"]
			"strings.py#sub_twice" [label="strings.py#sub_twice"]
			"strings.py#has_triple_quotes" [label="strings.py#has_triple_quotes"]
			"strings.py#get_string_prefix" [label="strings.py#get_string_prefix"]
			"strings.py#normalize_string_quotes" [label="strings.py#normalize_string_quotes"]
		}
		subgraph "cluster_concurrency.py" {
			graph [label="concurrency.py" rankdir=LR]
			"concurrency.py" [label="concurrency.py"]
			"concurrency.py#shutdown" [label="concurrency.py#shutdown"]
			"concurrency.py#maybe_install_uvloop" [label="concurrency.py#maybe_install_uvloop"]
			"concurrency.py#cancel" [label="concurrency.py#cancel"]
		}
		subgraph "cluster_numerics.py" {
			graph [label="numerics.py" rankdir=LR]
			"numerics.py" [label="numerics.py"]
			"numerics.py#normalize_numeric_literal" [label="numerics.py#normalize_numeric_literal"]
			"numerics.py#format_hex" [label="numerics.py#format_hex"]
			"numerics.py#format_float_or_int_string" [label="numerics.py#format_float_or_int_string"]
			"numerics.py#format_scientific_notation" [label="numerics.py#format_scientific_notation"]
			"numerics.py#format_complex_number" [label="numerics.py#format_complex_number"]
		}
		"__main__.py" [label="__main__.py"]
	}
	"__init__.py#format_cell" -> "handle_ipynb_magics.py#remove_trailing_semicolon"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#Line#clone"
	"linegen.py#right_hand_split" -> "linegen.py#CannotSplit"
	"__init__.py#main" -> "files.py#normalize_path_maybe_ignore"
	"__init__.py" -> "report.py#NothingChanged"
	"lines.py#Line#clone" -> "lines.py#Line"
	"__init__.py#format_file_contents" -> "report.py#NothingChanged"
	"numerics.py#normalize_numeric_literal" -> "numerics.py#format_float_or_int_string"
	"trans.py#StringParenStripper#do_transform" -> "trans.py#TErr"
	"trans.py#StringParenStripper#do_match" -> "nodes.py#is_empty_rpar"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_dict_match"
	"debug.py#DebugVisitor#visit_default" -> "output.py#out"
	"linegen.py#right_hand_split" -> "lines.py#Line"
	"linegen.py#transform_line" -> "trans.py#StringParenStripper"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "report.py#NothingChanged"
	"__init__.py#_format_str_once" -> "nodes.py#Visitor#visit"
	"trans.py#StringMerger#do_match" -> "rusty.py#Ok"
	"trans.py#StringSplitter#_get_illegal_split_indices" -> "trans.py#StringSplitter#_iter_fexpr_slices"
	"trans.py#StringParenWrapper#do_splitter_match" -> "rusty.py#Ok"
	"__init__.py#patched_main" -> "__init__.py#main"
	"trans.py#StringMerger#do_transform" -> "trans.py#StringMerger#_remove_backslash_line_continuation_chars"
	"parsing.py" -> "mode.py#TargetVersion"
	"handle_ipynb_magics.py#MagicFinder#visit_Assign" -> "handle_ipynb_magics.py#_is_ipython_magic"
	"linegen.py#transform_line" -> "lines.py#Line#contains_uncollapsable_type_comments"
	"brackets.py#BracketTracker#mark" -> "brackets.py#is_split_before_delimiter"
	"linegen.py" -> "nodes.py#is_rpar_token"
	"handle_ipynb_magics.py#mask_cell" -> "report.py#NothingChanged"
	"linegen.py#transform_line" -> "trans.py#hug_power_op"
	"linegen.py#run_transformer" -> "lines.py#Line#clone"
	"__init__.py#main" -> "__init__.py#WriteBack"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#StringSplitter#_get_illegal_split_indices"
	"linegen.py" -> "strings.py#fix_docstring"
	"files.py#gen_python_files" -> "files.py#path_is_excluded"
	"lines.py#can_omit_invisible_parens" -> "nodes.py#is_multiline_string"
	"linegen.py#generate_trailers_to_omit" -> "lines.py#Line#enumerate_with_length"
	"__init__.py" -> "handle_ipynb_magics.py#mask_cell"
	"__init__.py" -> "linegen.py#transform_line"
	"__init__.py" -> "report.py#Changed"
	"lines.py" -> "nodes.py#is_multiline_string"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#CustomSplitMapMixin#has_custom_splits"
	"lines.py#Line#is_import" -> "nodes.py#is_import"
	"__init__.py" -> "files.py#wrap_stream_for_windows"
	"__init__.py#get_sources" -> "output.py#err"
	"strings.py#get_string_prefix" -> "strings.py#assert_is_leaf_string"
	"linegen.py#LineGenerator#visit_STRING" -> "strings.py#normalize_string_prefix"
	"trans.py#StringSplitter#do_transform#maybe_append_string_operators" -> "nodes.py#replace_child"
	"lines.py#Line#append" -> "brackets.py#BracketTracker#mark"
	"linegen.py" -> "lines.py#line_to_string"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_def"
	"trans.py#StringParenWrapper#_return_match" -> "trans.py#is_valid_index_factory"
	"brackets.py#max_delimiter_priority_in_atom" -> "brackets.py#BracketTracker#mark"
	"linegen.py#LineGenerator#__init__" -> "lines.py#Line"
	"rusty.py" -> "rusty.py#Ok"
	"linegen.py#LineGenerator#visit_STRING" -> "nodes.py#is_docstring"
	"trans.py" -> "strings.py#normalize_string_quotes"
	"trans.py#hug_power_op" -> "trans.py#CannotTransform"
	"trans.py#TErr" -> "rusty.py#Err"
	"trans.py#StringParenWrapper#_assert_match" -> "nodes.py#parent_type"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_assert_match"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#append"
	"__init__.py#get_sources" -> "__init__.py#re_compile_maybe_verbose"
	"linegen.py" -> "nodes.py#ensure_visible"
	"nodes.py#is_empty_par" -> "nodes.py#is_empty_rpar"
	"__init__.py#reformat_code" -> "mode.py#Mode"
	"__init__.py#format_file_in_place" -> "__init__.py#decode_bytes"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_decorators"
	"debug.py" -> "parsing.py#lib2to3_parse"
	"__init__.py" -> "output.py#err"
	"trans.py#StringParenWrapper#_assign_match" -> "trans.py#is_valid_index_factory"
	"__init__.py#main" -> "__init__.py#reformat_many"
	"trans.py#StringSplitter#do_transform" -> "rusty.py#Ok"
	"trans.py#StringSplitter#do_splitter_match" -> "nodes.py#is_empty_rpar"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "rusty.py#Ok"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py#is_arith_like"
	"trans.py#StringSplitter#_get_break_idx" -> "strings.py#assert_is_leaf_string"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_decorator"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_comment"
	"__init__.py#format_ipynb_string" -> "__init__.py#format_cell"
	"__init__.py#main" -> "report.py#Report#return_code"
	"lines.py" -> "nodes.py#is_one_tuple_between"
	"lines.py#_can_omit_closing_paren" -> "lines.py#Line#enumerate_with_length"
	"linegen.py#LineGenerator#visit_INDENT" -> "linegen.py#LineGenerator#visit_default"
	"lines.py#Line" -> "lines.py#Line"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_import"
	"__init__.py#reformat_one" -> "cache.py#write_cache"
	"files.py#gen_python_files" -> "report.py#Report"
	"trans.py#StringParenWrapper#_dict_match" -> "nodes.py#parent_type"
	"parsing.py#stringify_ast" -> "parsing.py#stringify_ast"
	"trans.py#StringTransformer#__call__" -> "trans.py#StringTransformer#do_transform"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#Line#comments_after"
	"linegen.py" -> "lines.py#can_be_split"
	"comments.py#contains_fmt_on_at_column" -> "nodes.py#first_leaf_column"
	"__init__.py#reformat_one" -> "report.py#Report"
	"linegen.py#LineGenerator#visit_default" -> "strings.py#normalize_string_prefix"
	"comments.py#contains_fmt_on_at_column" -> "comments.py#is_fmt_on"
	"parsing.py#get_grammars" -> "mode.py#supports_feature"
	"__init__.py#format_cell" -> "report.py#NothingChanged"
	"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" -> "handle_ipynb_magics.py#_is_ipython_magic"
	"trans.py#is_valid_index_factory" -> "trans.py#is_valid_index_factory#is_valid_index"
	"linegen.py#transform_line" -> "linegen.py#delimiter_split"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line#clone"
	"__init__.py" -> "output.py#dump_to_file"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "lines.py#Line#clone"
	"trans.py#StringSplitter#_get_illegal_split_indices" -> "trans.py#StringSplitter#_iter_nameescape_slices"
	"lines.py" -> "nodes.py#replace_child"
	"__init__.py" -> "cache.py#get_cache_info"
	"__init__.py" -> "mode.py#TargetVersion"
	"linegen.py#delimiter_split" -> "nodes.py#is_vararg"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_maybe_normalize_string_quotes"
	"__init__.py#_format_str_once" -> "__init__.py#detect_target_versions"
	"__init__.py#format_file_contents" -> "__init__.py#format_str"
	"lines.py#Line#enumerate_with_length" -> "lines.py#Line#comments_after"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#append"
	"__init__.py#reformat_code" -> "__init__.py#format_stdin_to_stdout"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py#StringParser"
	"lines.py#can_omit_invisible_parens" -> "lines.py#Line"
	"linegen.py#LineGenerator#visit_ENDMARKER" -> "linegen.py#LineGenerator#visit_default"
	"linegen.py" -> "trans.py#StringParenStripper"
	"handle_ipynb_magics.py#MagicFinder#visit_Assign" -> "handle_ipynb_magics.py#OffsetAndMagic"
	"lines.py" -> "lines.py#Line"
	"trans.py#StringParser#_next_state" -> "nodes.py#is_empty_par"
	"linegen.py#LineGenerator#visit_async_stmt" -> "linegen.py#LineGenerator#line"
	"trans.py#StringParenStripper#do_match" -> "trans.py#is_valid_index_factory"
	"lines.py#can_omit_invisible_parens" -> "lines.py#_can_omit_closing_paren"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#comments_after"
	"trans.py#StringParenWrapper#do_transform" -> "rusty.py#Ok"
	"linegen.py" -> "trans.py#hug_power_op"
	"__init__.py" -> "mode.py#supports_feature"
	"handle_ipynb_magics.py#replace_cell_magics" -> "handle_ipynb_magics.py#Replacement"
	"parsing.py#stringify_ast" -> "parsing.py#fixup_ast_constants"
	"lines.py#can_omit_invisible_parens" -> "lines.py#_can_omit_opening_paren"
	"nodes.py#is_multiline_string" -> "strings.py#has_triple_quotes"
	"__init__.py#get_features_used" -> "nodes.py#is_simple_decorator_expression"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py#decode_bytes"
	"linegen.py#LineGenerator#visit_stmt" -> "linegen.py#normalize_invisible_parens"
	"trans.py#StringSplitter#do_transform" -> "trans.py#CustomSplitMapMixin#pop_custom_splits"
	"trans.py#StringMerger#_merge_string_group#make_naked" -> "strings.py#assert_is_leaf_string"
	"output.py#err" -> "output.py#_err"
	"linegen.py#normalize_invisible_parens" -> "linegen.py#maybe_make_parens_invisible_in_atom"
	"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#StringMerger#_merge_string_group" -> "nodes.py#replace_child"
	"__init__.py#format_ipynb_string" -> "report.py#NothingChanged"
	"lines.py" -> "nodes.py#whitespace"
	"trans.py" -> "strings.py#has_triple_quotes"
	"linegen.py#normalize_invisible_parens" -> "nodes.py#is_rpar_token"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#clone"
	"linegen.py#LineGenerator#visit_match_case" -> "linegen.py#normalize_invisible_parens"
	"comments.py#list_comments" -> "comments.py#ProtoComment"
	"cache.py#filter_cached" -> "cache.py#get_cache_info"
	"linegen.py#transform_line" -> "lines.py#Line#contains_standalone_comments"
	"linegen.py#transform_line" -> "trans.py#StringParenWrapper"
	"trans.py#BaseStringSplitter#do_match" -> "trans.py#BaseStringSplitter#do_splitter_match"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_return_match"
	"linegen.py#run_transformer" -> "lines.py#is_line_short_enough"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#StringMerger#_validate_msg"
	"nodes.py" -> "strings.py#has_triple_quotes"
	"__main__.py" -> "__init__.py#patched_main"
	"trans.py#StringParenStripper#do_transform" -> "brackets.py#BracketMatchError"
	"trans.py#BaseStringSplitter#do_match" -> "rusty.py#Err"
	"linegen.py#standalone_comment_split#append_to_line" -> "lines.py#Line#append"
	"linegen.py#right_hand_split" -> "lines.py#Line#is_import"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketMatchError"
	"linegen.py#transform_line" -> "lines.py#is_line_short_enough"
	"linegen.py#run_transformer" -> "mode.py#Feature"
	"__init__.py#format_cell" -> "handle_ipynb_magics.py#put_trailing_semicolon_back"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_stmt"
	"rusty.py" -> "rusty.py#Err"
	"__init__.py#main" -> "__init__.py#reformat_code"
	"files.py#find_pyproject_toml" -> "output.py#err"
	"__init__.py" -> "parsing.py#stringify_ast"
	"linegen.py#LineGenerator#visit_INDENT" -> "linegen.py#LineGenerator#line"
	"__init__.py#reformat_one" -> "__init__.py#WriteBack"
	"linegen.py#LineGenerator#visit_default" -> "nodes.py#Visitor#visit_default"
	"__init__.py#main" -> "__init__.py#path_empty"
	"linegen.py#run_transformer" -> "lines.py#Line"
	"linegen.py#run_transformer" -> "lines.py#Line#contains_unsplittable_type_ignore"
	"lines.py#Line#has_magic_trailing_comma" -> "lines.py#Line#is_import"
	"__init__.py#_format_str_once" -> "linegen.py#LineGenerator"
	"__init__.py#reformat_many" -> "__init__.py#WriteBack"
	"__init__.py#format_cell" -> "__init__.py#format_str"
	"cache.py" -> "mode.py#Mode"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#append_leaves"
	"files.py#normalize_path_maybe_ignore" -> "report.py#Report#path_ignored"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line"
	"linegen.py#transform_line" -> "lines.py#Line#contains_unsplittable_type_ignore"
	"__init__.py#reformat_code" -> "report.py#Changed"
	"trans.py#StringParenStripper#do_transform" -> "trans.py#StringParser"
	"lines.py#Line#append" -> "lines.py#Line#is_class_paren_empty"
	"__init__.py#main" -> "report.py#Report"
	"linegen.py" -> "lines.py#can_omit_invisible_parens"
	"__init__.py#main" -> "__init__.py#reformat_one"
	"linegen.py#LineGenerator" -> "mode.py#Mode"
	"parsing.py" -> "mode.py#Feature"
	"lines.py#Line#append" -> "nodes.py#whitespace"
	"numerics.py#normalize_numeric_literal" -> "numerics.py#format_hex"
	"linegen.py" -> "comments.py#list_comments"
	"linegen.py#LineGenerator#visit_suite" -> "linegen.py#LineGenerator#visit_default"
	"mode.py#Mode#__post_init__" -> "mode.py#Deprecated"
	"__init__.py#reformat_one" -> "cache.py#read_cache"
	"trans.py#StringParenWrapper#_else_match" -> "trans.py#is_valid_index_factory"
	"trans.py#StringParenStripper#do_match" -> "rusty.py#Ok"
	"trans.py#StringParenWrapper#_dict_match" -> "nodes.py#is_empty_par"
	"files.py#get_gitignore" -> "output.py#err"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#TErr"
	"__init__.py#check_stability_and_equivalence" -> "__init__.py#assert_stable"
	"trans.py" -> "comments.py#contains_pragma_comment"
	"__init__.py#detect_target_versions" -> "__init__.py#get_features_used"
	"linegen.py#LineGenerator#visit_default" -> "lines.py#Line#append"
	"__init__.py#main" -> "__init__.py#read_pyproject_toml"
	"linegen.py#right_hand_split" -> "lines.py#Line#contains_standalone_comments"
	"trans.py#StringParenWrapper#_return_match" -> "nodes.py#is_empty_par"
	"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" -> "brackets.py#BracketTracker#any_open_brackets"
	"brackets.py#BracketTracker#mark" -> "brackets.py#is_split_after_delimiter"
	"trans.py#StringParenWrapper#_assert_match" -> "trans.py#StringParser"
	"comments.py#convert_one_fmt_off_pair" -> "comments.py#generate_ignored_nodes"
	"__init__.py#format_stdin_to_stdout" -> "output.py#diff"
	"__init__.py#format_cell" -> "__init__.py#check_stability_and_equivalence"
	"numerics.py#format_scientific_notation" -> "numerics.py#format_float_or_int_string"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py#wrap_in_parentheses"
	"__init__.py#format_file_in_place" -> "__init__.py#format_file_contents"
	"lines.py" -> "nodes.py#child_towards"
	"linegen.py#transform_line" -> "trans.py#StringSplitter"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_else_match"
	"trans.py" -> "strings.py#get_string_prefix"
	"linegen.py" -> "trans.py#StringParenWrapper"
	"cache.py#get_cache_file" -> "mode.py#Mode#get_cache_key"
	"comments.py#list_comments" -> "comments.py#make_comment"
	"trans.py#StringSplitter#do_transform" -> "lines.py#Line"
	"trans.py" -> "nodes.py#is_empty_rpar"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "lines.py#Line"
	"linegen.py" -> "nodes.py#is_one_tuple_between"
	"linegen.py#LineGenerator#visit_STRING" -> "strings.py#get_string_prefix"
	"trans.py#StringParenWrapper#_assign_match" -> "nodes.py#is_empty_par"
	"brackets.py#max_delimiter_priority_in_atom" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"comments.py#generate_ignored_nodes" -> "comments.py#is_fmt_on"
	"handle_ipynb_magics.py#jupyter_dependencies_are_installed" -> "output.py#out"
	"mode.py" -> "mode.py#TargetVersion"
	"trans.py#CustomSplitMapMixin#has_custom_splits" -> "trans.py#CustomSplitMapMixin#_get_key"
	"trans.py#StringParenWrapper#_dict_match" -> "trans.py#StringParser"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py#WriteBack"
	"parsing.py#lib2to3_parse" -> "parsing.py#InvalidInput"
	"linegen.py" -> "lines.py#is_line_short_enough"
	"trans.py" -> "lines.py#append_leaves"
	"files.py#gen_python_files" -> "files.py#gen_python_files"
	"trans.py#fstring_contains_expr" -> "trans.py#iter_fexpr_spans"
	"nodes.py#is_walrus_assignment" -> "nodes.py#unwrap_singleton_parenthesis"
	"linegen.py#LineGenerator#visit_decorators" -> "linegen.py#LineGenerator#line"
	"__init__.py#reformat_one" -> "report.py#Report#done"
	"__init__.py" -> "output.py#out"
	"linegen.py#delimiter_split" -> "lines.py#Line#append"
	"linegen.py" -> "mode.py#Feature"
	"linegen.py#run_transformer" -> "lines.py#Line#contains_uncollapsable_type_comments"
	"trans.py#StringSplitter#do_transform" -> "trans.py#insert_str_child_factory"
	"lines.py#Line" -> "mode.py#Mode"
	"lines.py#Line#append_safe" -> "lines.py#Line#append"
	"nodes.py#is_yield" -> "nodes.py#is_yield"
	"__init__.py#format_file_in_place" -> "output.py#color_diff"
	"__init__.py#reformat_one" -> "__init__.py#format_file_in_place"
	"trans.py#StringParenWrapper#do_splitter_match" -> "trans.py#StringParenWrapper#_assign_match"
	"linegen.py#LineGenerator#visit_default" -> "brackets.py#BracketTracker#any_open_brackets"
	"__init__.py" -> "mode.py#Feature"
	"linegen.py#LineGenerator#visit_default" -> "linegen.py#LineGenerator#line"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Err#err"
	"trans.py#StringTransformer" -> "mode.py#Feature"
	"trans.py#StringSplitter#do_splitter_match" -> "rusty.py#Ok"
	"linegen.py" -> "nodes.py#is_atom_with_invisible_parens"
	"linegen.py#transform_line" -> "linegen.py#transform_line#_rhs"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "trans.py#TErr"
	"trans.py#StringParenWrapper#do_transform" -> "trans.py#is_valid_index_factory"
	"linegen.py" -> "lines.py#Line"
	"linegen.py#delimiter_split#append_to_line" -> "lines.py#Line#append"
	"comments.py" -> "comments.py#ProtoComment"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py#is_stub_body"
	"trans.py#StringMerger#_validate_msg" -> "trans.py#TErr"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py#is_lpar_token"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_class"
	"trans.py#StringMerger" -> "lines.py#Line"
	"comments.py#convert_one_fmt_off_pair" -> "comments.py#list_comments"
	"trans.py#StringParenWrapper#_assign_match" -> "trans.py#StringParser#parse"
	"__init__.py" -> "output.py#diff"
	"trans.py" -> "trans.py#CannotTransform"
	"linegen.py" -> "nodes.py#Visitor"
	"__init__.py" -> "parsing.py#parse_ast"
	"__init__.py" -> "files.py#normalize_path_maybe_ignore"
	"__init__.py#format_stdin_to_stdout" -> "__init__.py#format_file_contents"
	"linegen.py" -> "nodes.py#is_stub_body"
	"mode.py#Mode" -> "mode.py#TargetVersion"
	"linegen.py#LineGenerator#visit_STRING" -> "nodes.py#is_multiline_string"
	"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" -> "handle_ipynb_magics.py#CellMagic"
	"__init__.py#detect_target_versions" -> "mode.py#TargetVersion"
	"__init__.py#get_features_used" -> "mode.py#Feature"
	"linegen.py#bracket_split_build_line" -> "linegen.py#should_split_line"
	"cache.py#write_cache" -> "cache.py#get_cache_info"
	"__init__.py#reformat_code" -> "report.py#Report#done"
	"trans.py" -> "nodes.py#is_empty_lpar"
	"trans.py" -> "trans.py#CustomSplitMapMixin"
	"__init__.py" -> "concurrency.py#cancel"
	"__init__.py" -> "concurrency.py#shutdown"
	"handle_ipynb_magics.py#CellMagicFinder" -> "handle_ipynb_magics.py#CellMagic"
	"linegen.py" -> "nodes.py#is_yield"
	"trans.py" -> "rusty.py#Err"
	"nodes.py#Visitor#visit" -> "nodes.py#Visitor#visit_default"
	"mode.py#Mode" -> "mode.py#Preview"
	"trans.py#BaseStringSplitter#_validate" -> "trans.py#TErr"
	"__init__.py#main" -> "__init__.py#get_sources"
	"lines.py#Line#is_complex_subscript" -> "nodes.py#child_towards"
	"__init__.py" -> "comments.py#normalize_fmt_off"
	"__init__.py#reformat_one" -> "report.py#Report#failed"
	"__init__.py" -> "handle_ipynb_magics.py#jupyter_dependencies_are_installed"
	"__init__.py" -> "__init__.py#WriteBack"
	"trans.py#StringTransformer#__call__" -> "rusty.py#Err#err"
	"trans.py#StringParenStripper#do_match" -> "nodes.py#is_empty_lpar"
	"__init__.py" -> "parsing.py#InvalidInput"
	"trans.py#CustomSplitMapMixin" -> "trans.py#CustomSplitMapMixin"
	"__init__.py" -> "files.py#get_gitignore"
	"linegen.py#normalize_invisible_parens" -> "nodes.py#is_multiline_string"
	"__init__.py#patched_main" -> "concurrency.py#maybe_install_uvloop"
	"__init__.py#format_file_in_place" -> "__init__.py#nullcontext"
	"linegen.py#LineGenerator#visit_power" -> "nodes.py#wrap_in_parentheses"
	"__init__.py#format_stdin_to_stdout" -> "output.py#color_diff"
	"handle_ipynb_magics.py" -> "report.py#NothingChanged"
	"linegen.py#left_hand_split" -> "linegen.py#CannotSplit"
	"__init__.py#format_ipynb_string" -> "__init__.py#validate_metadata"
	"__init__.py#main" -> "output.py#err"
	"__init__.py#get_features_used" -> "nodes.py#is_string_token"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_get_string_operator_leaves"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#is_import"
	"__init__.py" -> "handle_ipynb_magics.py#put_trailing_semicolon_back"
	"__init__.py#main" -> "__init__.py#WriteBack#from_configuration"
	"trans.py#StringParenStripper#do_match" -> "trans.py#StringParser#parse"
	"linegen.py#standalone_comment_split" -> "linegen.py#standalone_comment_split#append_to_line"
	"linegen.py" -> "nodes.py#is_arith_like"
	"__init__.py#_format_str_once" -> "mode.py#supports_feature"
	"__init__.py#format_file_in_place" -> "output.py#ipynb_diff"
	"lines.py" -> "nodes.py#is_import"
	"trans.py#StringParenStripper#do_transform" -> "lines.py#Line#append"
	"__init__.py#reformat_many" -> "report.py#Report"
	"debug.py#DebugVisitor#visit_default" -> "nodes.py#Visitor#visit"
	"__init__.py" -> "cache.py#read_cache"
	"linegen.py#standalone_comment_split" -> "linegen.py#dont_increase_indentation"
	"trans.py" -> "mode.py#Feature"
	"__init__.py#format_file_in_place" -> "mode.py#Mode"
	"lines.py#append_leaves" -> "lines.py#Line#append"
	"lines.py#EmptyLineTracker" -> "lines.py#Line"
	"trans.py#StringParenWrapper#_return_match" -> "nodes.py#parent_type"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#StringMerger#_merge_string_group#make_naked"
	"lines.py#Line#is_stub_class" -> "lines.py#Line#is_class"
	"__init__.py" -> "nodes.py#is_simple_decorator_expression"
	"trans.py#hug_power_op" -> "trans.py#hug_power_op#is_simple_operand"
	"linegen.py" -> "comments.py#generate_comments"
	"trans.py#StringSplitter#_iter_fexpr_slices" -> "trans.py#iter_fexpr_spans"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_normalize_f_string"
	"__init__.py#assert_stable" -> "__init__.py#_format_str_once"
	"handle_ipynb_magics.py#MagicFinder#visit_Assign" -> "handle_ipynb_magics.py#_get_str_args"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "handle_ipynb_magics.py#_is_ipython_magic"
	"trans.py#StringSplitter#_normalize_f_string" -> "trans.py#fstring_contains_expr"
	"trans.py#StringSplitter#do_transform" -> "trans.py#fstring_contains_expr"
	"trans.py#StringParenWrapper" -> "lines.py#Line"
	"__init__.py#patched_main" -> "__init__.py#patch_click"
	"__init__.py#main" -> "__init__.py#validate_regex"
	"trans.py" -> "trans.py#BaseStringSplitter"
	"linegen.py#transform_line" -> "mode.py#Mode"
	"linegen.py#run_transformer" -> "lines.py#Line#contains_multiline_strings"
	"__init__.py#reformat_code" -> "report.py#Report"
	"linegen.py#LineGenerator#visit_STRING" -> "strings.py#fix_docstring"
	"nodes.py#is_empty_par" -> "nodes.py#is_empty_lpar"
	"__init__.py#assert_equivalent" -> "output.py#dump_to_file"
	"trans.py#StringParenWrapper#_assign_match" -> "nodes.py#parent_type"
	"__init__.py#format_str" -> "__init__.py#_format_str_once"
	"linegen.py#transform_line#_rhs" -> "linegen.py#right_hand_split"
	"linegen.py" -> "nodes.py#is_lpar_token"
	"linegen.py#right_hand_split" -> "linegen.py#bracket_split_build_line"
	"parsing.py#parse_ast" -> "parsing.py#parse_single_version"
	"linegen.py#LineGenerator#visit_stmt" -> "nodes.py#is_name_token"
	"trans.py#StringParenWrapper#_else_match" -> "nodes.py#is_empty_par"
	"linegen.py#delimiter_split" -> "lines.py#Line#comments_after"
	"cache.py#read_cache" -> "cache.py#get_cache_file"
	"trans.py#hug_power_op" -> "lines.py#Line"
	"trans.py#StringSplitter#do_splitter_match" -> "nodes.py#is_empty_lpar"
	"lines.py#Line#append" -> "lines.py#Line#remove_trailing_comma"
	"brackets.py" -> "nodes.py#is_vararg"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#CustomSplit"
	"__init__.py#validate_regex" -> "__init__.py#re_compile_maybe_verbose"
	"linegen.py" -> "nodes.py#is_one_tuple"
	"linegen.py#LineGenerator#visit_SEMI" -> "linegen.py#LineGenerator#line"
	"lines.py#Line#contains_uncollapsable_type_comments" -> "nodes.py#is_type_comment"
	"linegen.py#LineGenerator#visit_STRING" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#StringMerger#_merge_string_group" -> "strings.py#normalize_string_quotes"
	"__init__.py#get_sources" -> "report.py#Report#path_ignored"
	"lines.py#is_line_short_enough" -> "lines.py#Line#contains_standalone_comments"
	"linegen.py#transform_line#_rhs" -> "lines.py#is_line_short_enough"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py#StringParser#parse"
	"files.py" -> "handle_ipynb_magics.py#jupyter_dependencies_are_installed"
	"__init__.py#format_file_contents" -> "__init__.py#check_stability_and_equivalence"
	"__init__.py" -> "report.py#Report#done"
	"linegen.py#standalone_comment_split" -> "lines.py#Line#comments_after"
	"trans.py#StringSplitter" -> "lines.py#Line"
	"lines.py#Line#contains_multiline_strings" -> "nodes.py#is_multiline_string"
	"linegen.py#transform_line#_rhs" -> "mode.py#Feature"
	"linegen.py#transform_line" -> "trans.py#CannotTransform"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_class"
	"linegen.py" -> "numerics.py#normalize_numeric_literal"
	"trans.py#StringSplitter#do_transform#more_splits_should_be_made" -> "trans.py#StringSplitter#do_transform#max_last_string"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Ok#ok"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "nodes.py#is_stub_suite"
	"trans.py#BaseStringSplitter" -> "lines.py#Line"
	"linegen.py#transform_line#_rhs" -> "linegen.py#generate_trailers_to_omit"
	"linegen.py#run_transformer" -> "linegen.py#run_transformer"
	"nodes.py#whitespace" -> "nodes.py#preceding_leaf"
	"concurrency.py" -> "output.py#err"
	"trans.py#StringParenStripper#do_transform" -> "lines.py#append_leaves"
	"comments.py#is_fmt_on" -> "comments.py#list_comments"
	"linegen.py#transform_line#_rhs" -> "lines.py#Line"
	"lines.py#can_omit_invisible_parens" -> "brackets.py#BracketTracker#delimiter_count_with_priority"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_def"
	"trans.py#StringSplitter#do_transform#maybe_append_string_operators" -> "lines.py#Line#append"
	"nodes.py#Visitor#visit_default" -> "nodes.py#Visitor#visit"
	"__init__.py" -> "files.py#find_project_root"
	"trans.py#StringSplitter#_get_break_idx#passes_all_checks" -> "trans.py#StringSplitter#_get_break_idx#breaks_unsplittable_expression"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#do_transform#maybe_append_string_operators"
	"strings.py#normalize_string_quotes" -> "strings.py#sub_twice"
	"lines.py#Line" -> "brackets.py#BracketTracker"
	"lines.py#can_omit_invisible_parens" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"handle_ipynb_magics.py#CellMagicFinder#visit_Expr" -> "handle_ipynb_magics.py#_get_str_args"
	"linegen.py#transform_line" -> "linegen.py#run_transformer"
	"__init__.py#format_file_in_place" -> "report.py#NothingChanged"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#CustomSplitMapMixin#add_custom_splits"
	"linegen.py#delimiter_split" -> "mode.py#Feature"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py#is_valid_index_factory"
	"handle_ipynb_magics.py#replace_cell_magics" -> "handle_ipynb_magics.py#CellMagicFinder"
	"__init__.py#main" -> "mode.py#Mode"
	"linegen.py#should_split_line" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"__init__.py#target_version_option_callback" -> "mode.py#TargetVersion"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py#is_atom_with_invisible_parens"
	"linegen.py#delimiter_split" -> "linegen.py#CannotSplit"
	"trans.py" -> "rusty.py#Ok"
	"__init__.py" -> "lines.py#EmptyLineTracker"
	"linegen.py#delimiter_split" -> "lines.py#Line"
	"__init__.py#assert_stable" -> "output.py#diff"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "handle_ipynb_magics.py#OffsetAndMagic"
	"linegen.py#transform_line" -> "linegen.py#left_hand_split"
	"__init__.py#get_sources" -> "report.py#Report"
	"trans.py#StringTransformer#__call__" -> "rusty.py#Ok#ok"
	"__init__.py" -> "handle_ipynb_magics.py#unmask_cell"
	"__init__.py#check_stability_and_equivalence" -> "mode.py#Mode"
	"report.py" -> "output.py#err"
	"linegen.py#standalone_comment_split" -> "mode.py#Feature"
	"__init__.py#reformat_code" -> "__init__.py#WriteBack"
	"lines.py#append_leaves" -> "lines.py#Line#comments_after"
	"cache.py" -> "cache.py#get_cache_dir"
	"linegen.py#standalone_comment_split" -> "linegen.py#CannotSplit"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py#is_yield"
	"parsing.py#stringify_ast" -> "parsing.py#_normalize"
	"lines.py#Line#append_safe" -> "lines.py#Line#is_comment"
	"handle_ipynb_magics.py#mask_cell" -> "handle_ipynb_magics.py#Replacement"
	"__init__.py#_format_str_once" -> "__init__.py#get_future_imports"
	"trans.py#BaseStringSplitter#_validate" -> "trans.py#BaseStringSplitter#_get_max_string_length"
	"trans.py#StringMerger#do_match" -> "trans.py#TErr"
	"handle_ipynb_magics.py#mask_cell" -> "handle_ipynb_magics.py#replace_cell_magics"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#is_valid_index_factory"
	"comments.py#generate_ignored_nodes" -> "comments.py#contains_fmt_on_at_column"
	"__init__.py#format_file_in_place" -> "files.py#wrap_stream_for_windows"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line#comments_after"
	"linegen.py#standalone_comment_split" -> "lines.py#Line"
	"trans.py#BaseStringSplitter#do_match" -> "trans.py#BaseStringSplitter#_validate"
	"__init__.py" -> "files.py#find_pyproject_toml"
	"__init__.py#read_pyproject_toml" -> "files.py#find_pyproject_toml"
	"__init__.py" -> "cache.py#write_cache"
	"__init__.py" -> "report.py#Report"
	"comments.py" -> "nodes.py#first_leaf_column"
	"__init__.py#check_stability_and_equivalence" -> "__init__.py#assert_equivalent"
	"parsing.py#lib2to3_parse" -> "parsing.py#matches_grammar"
	"trans.py#StringParenStripper#do_transform" -> "trans.py#StringParser#parse"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_increment_for_loop_variable"
	"__init__.py" -> "__init__.py#patched_main"
	"lines.py" -> "nodes.py#is_type_comment"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#_get_break_idx"
	"linegen.py#LineGenerator#visit_suite" -> "nodes.py#Visitor#visit"
	"linegen.py#bracket_split_build_line" -> "linegen.py#normalize_prefix"
	"trans.py#BaseStringSplitter#_get_max_string_length" -> "trans.py#is_valid_index_factory"
	"linegen.py#LineGenerator#visit_default" -> "comments.py#generate_comments"
	"linegen.py" -> "nodes.py#wrap_in_parentheses"
	"parsing.py#get_grammars" -> "mode.py#Feature"
	"linegen.py#normalize_invisible_parens" -> "nodes.py#is_lpar_token"
	"files.py#normalize_path_maybe_ignore" -> "report.py#Report"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#do_transform#max_last_string"
	"linegen.py#LineGenerator#visit_DEDENT" -> "linegen.py#LineGenerator#line"
	"trans.py#StringMerger#do_transform" -> "trans.py#StringMerger#_merge_string_group"
	"linegen.py#transform_line" -> "lines.py#line_to_string"
	"strings.py#fix_docstring" -> "strings.py#lines_with_leading_tabs_expanded"
	"linegen.py#normalize_invisible_parens" -> "nodes.py#is_one_tuple"
	"linegen.py" -> "strings.py#normalize_string_prefix"
	"__init__.py#_format_str_once" -> "linegen.py#transform_line"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_increment_lambda_arguments"
	"trans.py#StringParenWrapper#_else_match" -> "nodes.py#parent_type"
	"__init__.py#assert_stable" -> "output.py#dump_to_file"
	"comments.py#normalize_fmt_off" -> "comments.py#convert_one_fmt_off_pair"
	"linegen.py#LineGenerator#visit_factor" -> "linegen.py#LineGenerator#visit_default"
	"linegen.py" -> "nodes.py#is_docstring"
	"trans.py" -> "trans.py#StringTransformer"
	"lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def" -> "lines.py#Line#is_stub_class"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#Line#append"
	"lines.py#append_leaves" -> "nodes.py#replace_child"
	"concurrency.py#cancel" -> "output.py#err"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#EmptyLineTracker#_maybe_empty_lines_for_class_or_def"
	"__init__.py#get_sources" -> "files.py#normalize_path_maybe_ignore"
	"linegen.py" -> "strings.py#normalize_string_quotes"
	"linegen.py#LineGenerator#__post_init__" -> "lines.py#Line"
	"lines.py#Line#append_comment" -> "nodes.py#is_type_comment"
	"brackets.py#max_delimiter_priority_in_atom" -> "brackets.py#BracketTracker"
	"trans.py#StringParenWrapper#do_transform" -> "nodes.py#replace_child"
	"lines.py#Line#append" -> "lines.py#Line#is_complex_subscript"
	"trans.py" -> "nodes.py#is_empty_par"
	"trans.py#StringSplitter#do_transform" -> "trans.py#TErr"
	"trans.py#StringMerger#do_transform" -> "trans.py#CannotTransform"
	"lines.py#append_leaves" -> "lines.py#Line"
	"comments.py" -> "nodes.py#preceding_leaf"
	"linegen.py#LineGenerator#visit_default" -> "numerics.py#normalize_numeric_literal"
	"linegen.py#right_hand_split" -> "linegen.py#bracket_split_succeeded_or_raise"
	"__init__.py#format_cell" -> "handle_ipynb_magics.py#unmask_cell"
	"__init__.py" -> "lines.py#Line"
	"__init__.py#get_sources" -> "handle_ipynb_magics.py#jupyter_dependencies_are_installed"
	"trans.py#StringParenWrapper#do_transform" -> "lines.py#Line"
	"trans.py#StringTransformer" -> "lines.py#Line"
	"linegen.py#bracket_split_succeeded_or_raise" -> "linegen.py#CannotSplit"
	"trans.py#StringParenWrapper#_assign_match" -> "trans.py#StringParser"
	"trans.py#StringParser#parse" -> "trans.py#StringParser#_next_state"
	"nodes.py#whitespace" -> "nodes.py#is_vararg"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Err"
	"__init__.py#get_sources" -> "files.py#get_gitignore"
	"lines.py#Line#has_magic_trailing_comma" -> "nodes.py#is_one_tuple_between"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py#is_one_tuple"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#append"
	"linegen.py#transform_line" -> "lines.py#Line#is_def"
	"linegen.py#bracket_split_build_line" -> "lines.py#Line#is_def"
	"lines.py" -> "mode.py#Mode"
	"__init__.py" -> "parsing.py#lib2to3_parse"
	"linegen.py#LineGenerator" -> "lines.py#Line"
	"trans.py#StringParenWrapper#_assert_match" -> "trans.py#is_valid_index_factory"
	"__init__.py" -> "nodes.py#is_string_token"
	"lines.py#_can_omit_opening_paren" -> "lines.py#Line#enumerate_with_length"
	"nodes.py#is_one_tuple" -> "nodes.py#unwrap_singleton_parenthesis"
	"linegen.py#LineGenerator#visit_async_stmt" -> "nodes.py#Visitor#visit"
	"linegen.py#transform_line" -> "mode.py#Preview"
	"trans.py#StringParenWrapper#do_transform" -> "trans.py#insert_str_child_factory"
	"lines.py#Line#append_comment" -> "brackets.py#BracketTracker#any_open_brackets"
	"files.py" -> "report.py#Report"
	"linegen.py#LineGenerator#visit_stmt" -> "linegen.py#LineGenerator#line"
	"__init__.py#path_empty" -> "output.py#out"
	"brackets.py#BracketTracker#delimiter_count_with_priority" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"__init__.py#assert_equivalent" -> "output.py#diff"
	"__init__.py#assert_equivalent" -> "parsing.py#parse_ast"
	"debug.py#DebugVisitor#show" -> "parsing.py#lib2to3_parse"
	"linegen.py#normalize_invisible_parens" -> "comments.py#list_comments"
	"linegen.py" -> "brackets.py#max_delimiter_priority_in_atom"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "strings.py#has_triple_quotes"
	"trans.py#StringTransformer#__call__" -> "trans.py#CannotTransform"
	"trans.py#BaseStringSplitter#do_match" -> "rusty.py#Ok#ok"
	"linegen.py#delimiter_split" -> "linegen.py#dont_increase_indentation"
	"report.py#Report#path_ignored" -> "output.py#out"
	"files.py#gen_python_files" -> "report.py#Report#path_ignored"
	"linegen.py#LineGenerator#visit_suite" -> "nodes.py#is_stub_suite"
	"comments.py" -> "nodes.py#container_of"
	"trans.py#StringMerger#_merge_string_group" -> "strings.py#get_string_prefix"
	"linegen.py#LineGenerator#visit_match_case" -> "linegen.py#LineGenerator#line"
	"trans.py#StringMerger#_validate_msg" -> "strings.py#has_triple_quotes"
	"trans.py#StringParenWrapper#_dict_match" -> "trans.py#is_valid_index_factory"
	"__init__.py#reformat_one" -> "mode.py#Mode"
	"linegen.py" -> "trans.py#StringSplitter"
	"debug.py" -> "output.py#out"
	"cache.py#write_cache" -> "cache.py#get_cache_file"
	"trans.py#StringTransformer#__call__" -> "rusty.py#Err"
	"handle_ipynb_magics.py" -> "output.py#out"
	"trans.py#StringParenStripper#do_match" -> "trans.py#StringParser"
	"handle_ipynb_magics.py#mask_cell" -> "handle_ipynb_magics.py#replace_magics"
	"parsing.py" -> "mode.py#supports_feature"
	"__init__.py#reformat_many" -> "mode.py#Mode"
	"trans.py#TErr" -> "trans.py#CannotTransform"
	"linegen.py#standalone_comment_split#append_to_line" -> "lines.py#Line"
	"comments.py#generate_ignored_nodes" -> "nodes.py#container_of"
	"linegen.py" -> "nodes.py#is_empty_tuple"
	"trans.py#StringMerger#_merge_string_group" -> "lines.py#append_leaves"
	"linegen.py#right_hand_split" -> "nodes.py#ensure_visible"
	"trans.py" -> "nodes.py#replace_child"
	"__init__.py#reformat_code" -> "report.py#Report#failed"
	"trans.py#BaseStringSplitter#_validate" -> "strings.py#has_triple_quotes"
	"linegen.py#transform_line" -> "trans.py#StringMerger"
	"trans.py#CustomSplitMapMixin#add_custom_splits" -> "trans.py#CustomSplitMapMixin#_get_key"
	"linegen.py#transform_line" -> "linegen.py#standalone_comment_split"
	"handle_ipynb_magics.py#replace_magics" -> "handle_ipynb_magics.py#MagicFinder"
	"linegen.py#normalize_invisible_parens" -> "nodes.py#wrap_in_parentheses"
	"trans.py#CustomSplitMapMixin" -> "trans.py#CustomSplit"
	"trans.py#StringParenStripper#do_transform" -> "rusty.py#Ok"
	"linegen.py#left_hand_split" -> "linegen.py#bracket_split_succeeded_or_raise"
	"linegen.py#LineGenerator#__init__" -> "linegen.py#LineGenerator#__post_init__"
	"trans.py#StringSplitter#_get_break_idx" -> "trans.py#StringSplitter#_get_break_idx#passes_all_checks"
	"__init__.py#main" -> "mode.py#TargetVersion"
	"linegen.py#run_transformer" -> "mode.py#Mode"
	"debug.py#DebugVisitor#show" -> "nodes.py#Visitor#visit"
	"trans.py" -> "lines.py#Line"
	"trans.py#StringSplitter#do_transform" -> "trans.py#StringSplitter#do_transform#more_splits_should_be_made"
	"linegen.py" -> "nodes.py#is_walrus_assignment"
	"trans.py#StringTransformer#__call__" -> "trans.py#StringTransformer#do_match"
	"debug.py" -> "nodes.py#Visitor"
	"__init__.py#reformat_one" -> "__init__.py#format_stdin_to_stdout"
	"linegen.py#right_hand_split" -> "lines.py#can_be_split"
	"linegen.py#dont_increase_indentation" -> "linegen.py#dont_increase_indentation#split_wrapper"
	"linegen.py#run_transformer" -> "lines.py#append_leaves"
	"lines.py#Line#append" -> "lines.py#Line#append_comment"
	"linegen.py#normalize_invisible_parens" -> "linegen.py#normalize_invisible_parens"
	"__init__.py" -> "files.py#parse_pyproject_toml"
	"__init__.py#get_sources" -> "files.py#gen_python_files"
	"__init__.py#read_pyproject_toml" -> "files.py#parse_pyproject_toml"
	"strings.py#normalize_string_quotes" -> "strings.py#_cached_compile"
	"numerics.py#normalize_numeric_literal" -> "numerics.py#format_scientific_notation"
	"report.py#Report#failed" -> "output.py#err"
	"trans.py#StringParenStripper#do_transform" -> "lines.py#Line#clone"
	"trans.py#StringMerger#_validate_msg" -> "rusty.py#Ok"
	"lines.py#Line#contains_unsplittable_type_ignore" -> "nodes.py#is_type_comment"
	"__init__.py#format_cell" -> "__init__.py#validate_cell"
	"trans.py#StringSplitter#_normalize_f_string" -> "strings.py#assert_is_leaf_string"
	"__init__.py" -> "output.py#color_diff"
	"trans.py#StringParenStripper" -> "lines.py#Line"
	"handle_ipynb_magics.py#replace_magics" -> "handle_ipynb_magics.py#Replacement"
	"trans.py#StringMerger#_merge_string_group" -> "rusty.py#Err"
	"handle_ipynb_magics.py#MagicFinder#__init__" -> "handle_ipynb_magics.py#OffsetAndMagic"
	"linegen.py#LineGenerator#visit_default" -> "strings.py#normalize_string_quotes"
	"handle_ipynb_magics.py#replace_magics" -> "handle_ipynb_magics.py#get_token"
	"report.py#Report#done" -> "output.py#out"
	"report.py" -> "output.py#out"
	"__init__.py" -> "files.py#gen_python_files"
	"linegen.py#run_transformer" -> "trans.py#CannotTransform"
	"__init__.py#main" -> "__init__.py#target_version_option_callback"
	"trans.py" -> "nodes.py#parent_type"
	"linegen.py" -> "mode.py#Preview"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_decrement_after_for_loop_variable"
	"trans.py#BaseStringSplitter#_validate" -> "rusty.py#Ok"
	"linegen.py#LineGenerator#visit_DEDENT" -> "linegen.py#LineGenerator#visit_default"
	"nodes.py#prev_siblings_are" -> "nodes.py#prev_siblings_are"
	"trans.py#StringMerger#_validate_msg" -> "comments.py#contains_pragma_comment"
	"__init__.py" -> "__init__.py#format_file_in_place"
	"__init__.py#format_stdin_to_stdout" -> "mode.py#Mode"
	"trans.py#StringParenStripper#do_match" -> "trans.py#TErr"
	"linegen.py#dont_increase_indentation#split_wrapper" -> "linegen.py#normalize_prefix"
	"trans.py#hug_power_op#is_simple_operand" -> "trans.py#hug_power_op#is_simple_lookup"
	"linegen.py#LineGenerator#line" -> "lines.py#Line"
	"__init__.py#format_cell" -> "handle_ipynb_magics.py#mask_cell"
	"trans.py#StringSplitter#_maybe_normalize_string_quotes" -> "strings.py#normalize_string_quotes"
	"__init__.py#_format_str_once" -> "lines.py#EmptyLineTracker"
	"trans.py#CustomSplitMapMixin#add_custom_splits" -> "trans.py#CustomSplit"
	"trans.py#StringSplitter#do_transform" -> "strings.py#get_string_prefix"
	"handle_ipynb_magics.py#replace_cell_magics" -> "handle_ipynb_magics.py#get_token"
	"mode.py" -> "mode.py#Feature"
	"linegen.py" -> "nodes.py#is_stub_suite"
	"trans.py#StringMerger#_validate_msg" -> "strings.py#get_string_prefix"
	"report.py#Report#done" -> "report.py#Changed"
	"__init__.py" -> "cache.py#filter_cached"
	"linegen.py#LineGenerator#visit_simple_stmt" -> "linegen.py#LineGenerator#line"
	"trans.py#BaseStringSplitter#_get_max_string_length" -> "lines.py#Line#comments_after"
	"__init__.py#main" -> "__init__.py#main"
	"__init__.py#format_file_contents" -> "__init__.py#format_ipynb_string"
	"trans.py#StringMerger#do_transform" -> "rusty.py#Ok"
	"linegen.py#standalone_comment_split" -> "lines.py#Line#contains_standalone_comments"
	"linegen.py#LineGenerator#visit_power" -> "linegen.py#LineGenerator#visit_default"
	"trans.py#BaseStringSplitter#_validate" -> "comments.py#contains_pragma_comment"
	"__init__.py#main" -> "files.py#find_project_root"
	"trans.py#StringSplitter#do_transform" -> "lines.py#append_leaves"
	"__init__.py#_format_str_once" -> "lines.py#EmptyLineTracker#maybe_empty_lines"
	"trans.py#StringMerger#_remove_backslash_line_continuation_chars" -> "lines.py#append_leaves"
	"trans.py#StringMerger#_merge_string_group" -> "trans.py#is_valid_index_factory"
	"nodes.py#is_docstring" -> "nodes.py#prev_siblings_are"
	"comments.py#convert_one_fmt_off_pair" -> "nodes.py#preceding_leaf"
	"files.py#gen_python_files" -> "files.py#normalize_path_maybe_ignore"
	"__init__.py#reformat_one" -> "report.py#Changed"
	"linegen.py#LineGenerator#visit_stmt" -> "lines.py#Line"
	"linegen.py" -> "trans.py#StringMerger"
	"linegen.py#left_hand_split" -> "linegen.py#bracket_split_build_line"
	"__init__.py#assert_equivalent" -> "parsing.py#stringify_ast"
	"numerics.py#format_complex_number" -> "numerics.py#format_float_or_int_string"
	"linegen.py" -> "strings.py#get_string_prefix"
	"handle_ipynb_magics.py#MagicFinder#visit_Expr" -> "handle_ipynb_magics.py#_get_str_args"
	"lines.py#Line#enumerate_with_length" -> "lines.py#enumerate_reversed"
	"__init__.py" -> "report.py#Report#failed"
	"files.py" -> "output.py#err"
	"linegen.py#LineGenerator#visit_decorators" -> "nodes.py#Visitor#visit"
	"debug.py#DebugVisitor#show" -> "debug.py#DebugVisitor"
	"lines.py#Line#is_complex_subscript" -> "brackets.py#BracketTracker#get_open_lsqb"
	"linegen.py#LineGenerator#visit_default" -> "linegen.py#normalize_prefix"
	"trans.py#StringParenStripper#do_transform" -> "lines.py#Line#comments_after"
	"report.py#Report" -> "report.py#Changed"
	"__init__.py" -> "output.py#ipynb_diff"
	"linegen.py#delimiter_split#append_to_line" -> "lines.py#Line"
	"lines.py" -> "brackets.py#BracketTracker"
	"linegen.py" -> "mode.py#Mode"
	"__init__.py#format_file_in_place" -> "output.py#diff"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_triple_quoted_string"
	"__init__.py" -> "handle_ipynb_magics.py#remove_trailing_semicolon"
	"lines.py#EmptyLineTracker#maybe_empty_lines" -> "lines.py#EmptyLineTracker#_maybe_empty_lines"
	"linegen.py#transform_line" -> "mode.py#Feature"
	"nodes.py#is_yield" -> "nodes.py#is_name_token"
	"__init__.py#reformat_many" -> "concurrency.py#shutdown"
	"files.py#gen_python_files" -> "handle_ipynb_magics.py#jupyter_dependencies_are_installed"
	"mode.py#Mode#__contains__" -> "mode.py#Preview"
	"__init__.py" -> "mode.py#Mode"
	"__init__.py#get_future_imports#get_imports_from_children" -> "__init__.py#get_future_imports#get_imports_from_children"
	"linegen.py" -> "lines.py#append_leaves"
	"linegen.py#run_transformer" -> "linegen.py#transform_line"
	"trans.py#StringMerger#do_match" -> "trans.py#is_valid_index_factory"
	"linegen.py#right_hand_split" -> "lines.py#can_omit_invisible_parens"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "linegen.py#maybe_make_parens_invisible_in_atom"
	"__init__.py" -> "concurrency.py#maybe_install_uvloop"
	"files.py#gen_python_files" -> "files.py#get_gitignore"
	"trans.py#StringSplitter#do_splitter_match" -> "trans.py#TErr"
	"__init__.py#get_future_imports" -> "__init__.py#get_future_imports#get_imports_from_children"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py#is_rpar_token"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "brackets.py#max_delimiter_priority_in_atom"
	"linegen.py" -> "nodes.py#is_vararg"
	"__init__.py#validate_cell" -> "report.py#NothingChanged"
	"linegen.py#transform_line" -> "lines.py#Line"
	"trans.py#StringParenWrapper#_assert_match" -> "nodes.py#is_empty_par"
	"__init__.py#WriteBack#from_configuration" -> "__init__.py#WriteBack"
	"trans.py#insert_str_child_factory" -> "trans.py#insert_str_child_factory#insert_str_child"
	"__init__.py#format_file_in_place" -> "__init__.py#WriteBack"
	"linegen.py#generate_trailers_to_omit" -> "nodes.py#is_one_tuple_between"
	"__init__.py#_format_str_once" -> "mode.py#Feature"
	"__init__.py#format_stdin_to_stdout" -> "report.py#NothingChanged"
	"linegen.py#run_transformer" -> "lines.py#line_to_string"
	"linegen.py#dont_increase_indentation" -> "mode.py#Feature"
	"linegen.py#LineGenerator#visit_ENDMARKER" -> "linegen.py#LineGenerator#line"
	"linegen.py#transform_line" -> "lines.py#Line#is_comment"
	"linegen.py" -> "nodes.py#is_multiline_string"
	"lines.py#is_line_short_enough" -> "lines.py#line_to_string"
	"brackets.py#is_split_before_delimiter" -> "nodes.py#is_vararg"
	"lines.py#EmptyLineTracker#_maybe_empty_lines" -> "lines.py#Line#is_decorator"
	"linegen.py#right_hand_split" -> "lines.py#Line#contains_multiline_strings"
	"linegen.py" -> "trans.py#CannotTransform"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py#is_empty_tuple"
	"linegen.py" -> "nodes.py#is_name_token"
	"linegen.py#LineGenerator#visit_stmt" -> "nodes.py#Visitor#visit"
	"output.py#out" -> "output.py#_out"
	"__init__.py#reformat_one" -> "cache.py#get_cache_info"
	"trans.py" -> "strings.py#assert_is_leaf_string"
	"__init__.py" -> "linegen.py#LineGenerator"
	"__init__.py#_format_str_once" -> "lines.py#Line"
	"linegen.py#dont_increase_indentation" -> "lines.py#Line"
	"numerics.py#normalize_numeric_literal" -> "numerics.py#format_complex_number"
	"trans.py#StringParenStripper#do_transform" -> "nodes.py#replace_child"
	"linegen.py#right_hand_split" -> "linegen.py#right_hand_split"
	"linegen.py#delimiter_split" -> "brackets.py#BracketTracker#delimiter_count_with_priority"
	"files.py#find_pyproject_toml" -> "files.py#find_user_pyproject_toml"
	"linegen.py#LineGenerator#visit_match_case" -> "nodes.py#Visitor#visit"
	"parsing.py#lib2to3_parse" -> "parsing.py#get_grammars"
	"handle_ipynb_magics.py" -> "handle_ipynb_magics.py#Replacement"
	"__init__.py#_format_str_once" -> "parsing.py#lib2to3_parse"
	"linegen.py#LineGenerator#visit_STANDALONE_COMMENT" -> "linegen.py#LineGenerator#line"
	"__init__.py#validate_metadata" -> "report.py#NothingChanged"
	"trans.py#StringParenWrapper#_assert_match" -> "trans.py#StringParser#parse"
	"linegen.py#delimiter_split" -> "brackets.py#BracketTracker#max_delimiter_priority"
	"trans.py#StringSplitter#_iter_fexpr_slices" -> "strings.py#get_string_prefix"
	"linegen.py#delimiter_split" -> "linegen.py#delimiter_split#append_to_line"
	"__init__.py#main" -> "output.py#out"
	"brackets.py#BracketTracker#mark" -> "brackets.py#BracketTracker#maybe_decrement_after_lambda_arguments"
	"linegen.py#maybe_make_parens_invisible_in_atom" -> "nodes.py#is_walrus_assignment"
	"files.py#find_pyproject_toml" -> "files.py#find_project_root"
	"lines.py#Line#append" -> "lines.py#Line#has_magic_trailing_comma"
	"trans.py#StringSplitter#do_transform" -> "trans.py#is_valid_index_factory"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_match_case"
	"trans.py#CustomSplitMapMixin#pop_custom_splits" -> "trans.py#CustomSplitMapMixin#_get_key"
	"trans.py#StringMerger#_merge_string_group" -> "rusty.py#Ok"
	"__init__.py#format_stdin_to_stdout" -> "files.py#wrap_stream_for_windows"
	"__init__.py#_format_str_once" -> "comments.py#normalize_fmt_off"
	"comments.py#generate_comments" -> "comments.py#list_comments"
	"nodes.py#is_simple_decorator_expression" -> "nodes.py#is_simple_decorator_trailer"
	"linegen.py#right_hand_split" -> "lines.py#is_line_short_enough"
	"linegen.py#LineGenerator#__post_init__" -> "linegen.py#LineGenerator#visit_async_stmt"
	"trans.py" -> "brackets.py#BracketMatchError"
	"trans.py#StringMerger#_validate_msg" -> "trans.py#is_valid_index_factory"
	"output.py#ipynb_diff" -> "output.py#diff"
	"lines.py#Line#is_class_paren_empty" -> "lines.py#Line#is_class"
	"nodes.py#is_stub_suite" -> "nodes.py#is_stub_body"
	"linegen.py#right_hand_split" -> "mode.py#Feature"
	"trans.py#StringParenWrapper#_dict_match" -> "trans.py#StringParser#parse"
}
